(()=>{"use strict";var __webpack_modules__={863:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/common.css\nvar common = __webpack_require__(404);\n;// CONCATENATED MODULE: ./src/css/common.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(common/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const css_common = (common/* default */.A && common/* default */.A.locals ? common/* default */.A.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/welcome/welcome.css\nvar welcome = __webpack_require__(235);\n;// CONCATENATED MODULE: ./src/js/components/welcome/welcome.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar welcome_options = {};\n\nwelcome_options.styleTagTransform = (styleTagTransform_default());\nwelcome_options.setAttributes = (setAttributesWithoutAttributes_default());\nwelcome_options.insert = insertBySelector_default().bind(null, \"head\");\nwelcome_options.domAPI = (styleDomAPI_default());\nwelcome_options.insertStyleElement = (insertStyleElement_default());\n\nvar welcome_update = injectStylesIntoStyleTag_default()(welcome/* default */.A, welcome_options);\n\n\n\n\n       /* harmony default export */ const welcome_welcome = (welcome/* default */.A && welcome/* default */.A.locals ? welcome/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/welcome/welcome.js\n\n\n// Hide and unhide welcome buttons\nfunction unhideWelcomeButtons() {\n  document.getElementById(\"welcome-page\").style.display = \"block\";\n}\nfunction hideWelcomeButtons() {\n  document.getElementById(\"welcome-page\").style.display = \"none\";\n}\nconst Welcome = {\n  show: unhideWelcomeButtons,\n  hide: hideWelcomeButtons\n};\n/* harmony default export */ const components_welcome_welcome = (Welcome);\n;// CONCATENATED MODULE: ./src/js/constants/budget_constants.js\n// Set to equal current fiscal year\nvar FISCAL_YEAR = '26';\n\n// object categories (from obj part of account string)\nconst OBJ_CATEGORIES = {\n  list: [\n  // 'Salaries & Wages',\n  // 'Employee Benefits',\n  'Professional & Contractual Services', 'Operating Supplies', 'Operating Services', 'Equipment Acquisition', 'Capital Outlays', 'Fixed Charges', 'Other Expenses']\n};\n\n// from the drop-down menu\nconst EMPLOYEE_TYPES = ['Regular', 'TASS', 'Seasonal', 'Uniform Fire', 'Uniform Police', 'Appointed', 'Elected', 'Long Term Disability'];\nconst OT_OBJECTS = ['601300 - Salar-Overtime-Gen City', '601305 - Salaries-Overtime-Police Unif', '601310 - Salaries-Overtime-Fire Unif', '602300 - Wages-Overtime-Gen City'];\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/prompt/prompt.css\nvar prompt_prompt = __webpack_require__(225);\n;// CONCATENATED MODULE: ./src/js/components/prompt/prompt.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar prompt_options = {};\n\nprompt_options.styleTagTransform = (styleTagTransform_default());\nprompt_options.setAttributes = (setAttributesWithoutAttributes_default());\nprompt_options.insert = insertBySelector_default().bind(null, \"head\");\nprompt_options.domAPI = (styleDomAPI_default());\nprompt_options.insertStyleElement = (insertStyleElement_default());\n\nvar prompt_update = injectStylesIntoStyleTag_default()(prompt_prompt/* default */.A, prompt_options);\n\n\n\n\n       /* harmony default export */ const components_prompt_prompt = (prompt_prompt/* default */.A && prompt_prompt/* default */.A.locals ? prompt_prompt/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/prompt/subcomponents/text.js\nfunction showPrompt() {\n  document.getElementById(\"prompt-div\").style.display = \"block\";\n}\nfunction hidePrompt() {\n  document.getElementById('prompt-div').style.display = 'none';\n}\nfunction updatePrompt(prompt) {\n  document.getElementById('prompt').innerHTML = prompt;\n  showPrompt();\n}\nconst Text = {\n  show: showPrompt,\n  hide: hidePrompt,\n  update: function (text) {\n    updatePrompt(text);\n  }\n};\n/* harmony default export */ const subcomponents_text = (Text);\n;// CONCATENATED MODULE: ./src/js/components/prompt/subcomponents/buttons.js\nfunction showPromptButton(id) {\n  // make buttons visible\n  document.getElementById(id).style.display = 'inline';\n}\nfunction updatePromptButton(id, text) {\n  document.getElementById(id).textContent = text;\n  showPromptButton(id);\n}\nfunction hidePromptButton(id) {\n  document.getElementById(id).style.display = 'none';\n}\nfunction unclickAll() {\n  document.getElementById('option1').classList.remove('clicked');\n  document.getElementById('option2').classList.remove('clicked');\n}\nfunction applyClickedStyle(button) {\n  unclickAll();\n  button.classList.add('clicked');\n}\nfunction addPromptButtonAction(button_id, action_fn) {\n  const buttonElement = document.getElementById(button_id);\n  buttonElement.addEventListener('click', action_fn);\n  buttonElement.addEventListener('click', function () {\n    applyClickedStyle(this);\n  });\n}\nfunction removePromptButtonAction(button_id, action_fn) {\n  document.getElementById(button_id).removeEventListener('click', action_fn);\n}\nfunction disable(button_id) {\n  document.querySelector(`#${button_id}`).classList.add('disabled');\n}\nfunction enable(button_id) {\n  document.querySelector(`#${button_id}`).classList.remove('disabled');\n}\nconst Left = {\n  show: function () {\n    showPromptButton('option1');\n  },\n  hide: function () {\n    hidePromptButton('option1');\n  },\n  updateText: function (text) {\n    updatePromptButton('option1', text);\n  },\n  addAction: function (action_fn) {\n    addPromptButtonAction('option1', action_fn);\n  },\n  removeAction: function (action_fn) {\n    removePromptButtonAction('option1', action_fn);\n  },\n  disable: function () {\n    disable('option1');\n  },\n  enable: function () {\n    enable('option1');\n  }\n};\nconst Right = {\n  show: function () {\n    showPromptButton('option2');\n  },\n  hide: function () {\n    hidePromptButton('option2');\n  },\n  updateText: function (text) {\n    updatePromptButton('option2', text);\n  },\n  addAction: function (action_fn) {\n    addPromptButtonAction('option2', action_fn);\n  },\n  removeAction: function (action_fn) {\n    removePromptButtonAction('option2', action_fn);\n  },\n  disable: function () {\n    disable('option2');\n  },\n  enable: function () {\n    enable('option2');\n  }\n};\nconst Buttons = {\n  Left: Left,\n  Right: Right,\n  show: function () {\n    showPromptButton('option1');\n    showPromptButton('option2');\n  },\n  hide: function () {\n    hidePromptButton('option1');\n    hidePromptButton('option2');\n  },\n  reset: unclickAll\n};\n/* harmony default export */ const buttons = (Buttons);\n;// CONCATENATED MODULE: ./src/js/components/prompt/prompt.js\n\n\n\nconst Prompt = {\n  Text: subcomponents_text,\n  Buttons: buttons,\n  hide: function () {\n    subcomponents_text.hide();\n    buttons.hide();\n  },\n  show: function () {\n    subcomponents_text.show();\n    buttons.show();\n  }\n};\n/* harmony default export */ const js_components_prompt_prompt = (Prompt);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/sidebar/sidebar.css\nvar sidebar = __webpack_require__(263);\n;// CONCATENATED MODULE: ./src/js/components/sidebar/sidebar.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar sidebar_options = {};\n\nsidebar_options.styleTagTransform = (styleTagTransform_default());\nsidebar_options.setAttributes = (setAttributesWithoutAttributes_default());\nsidebar_options.insert = insertBySelector_default().bind(null, \"head\");\nsidebar_options.domAPI = (styleDomAPI_default());\nsidebar_options.insertStyleElement = (insertStyleElement_default());\n\nvar sidebar_update = injectStylesIntoStyleTag_default()(sidebar/* default */.A, sidebar_options);\n\n\n\n\n       /* harmony default export */ const sidebar_sidebar = (sidebar/* default */.A && sidebar/* default */.A.locals ? sidebar/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/constants/excel_constants.js\n\n\n// sheets to expect on detail sheet\nconst SHEETS = {\n  'FTE, Salary-Wage, & Benefits': 'personnel',\n  'Overtime & Other Personnel': 'overtime',\n  'Non-Personnel': 'nonpersonnel',\n  'Revenue': 'revenue',\n  'Initiatives Summary': 'new-inits'\n};\n\n// where to find the general fund target\nconst TARGET_CELL_ADDRESS = 'C14';\nconst TOTAL_COLUMNS = {\n  'personnel': 'Total Sal/Wag & Ben Request',\n  'overtime': `FY${FISCAL_YEAR} Total OT/SP/Hol + FICA Request`,\n  'nonpersonnel': `FY${FISCAL_YEAR} Departmental Request Total`,\n  'revenue': `FY${FISCAL_YEAR} Departmental Estimate`,\n  'new-inits': `Total Initiative Request`\n};\nconst NEW_INIT_COLS = {\n  'personnel': 'Personnel Salary & Benefits',\n  'operating': 'Non-Personnel Operating',\n  'capital': 'Non-Personnel Capital',\n  'revenue': 'Revenue',\n  'name': 'Supplemental Initiative',\n  'total': TOTAL_COLUMNS['new-inits']\n};\n;// CONCATENATED MODULE: ./src/js/constants/index.js\n\n\n;// CONCATENATED MODULE: ./src/js/utils/common_utils.js\n// Function to format number as currency\nconst formatCurrency = (amount, return_zero = false) => {\n  var amount = Math.round(parseFloat(amount));\n  if (amount == NaN) {\n    return \"$ -\";\n  }\n  if (amount < 0) {\n    return '($' + amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ')';\n  } else if (amount == 0) {\n    if (return_zero) {\n      return '$0';\n    }\n    return \"$ -\";\n  }\n  return '$' + amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\n// function to convert formatted number to a float\nconst unformatCurrency = formattedAmount => {\n  if (!formattedAmount) {\n    return 0;\n  }\n  ;\n  // Remove any currency symbols and commas\n  let numericalPart = formattedAmount.replace(/[^0-9.-]+/g, \"\");\n  if (numericalPart == '-') {\n    return 0;\n  }\n  return parseFloat(numericalPart);\n};\nfunction displayWithCommas(value) {\n  if (value == 0) {\n    return 0;\n  }\n  return formatCurrency(value).replace('$', '');\n}\nfunction cleanString(str) {\n  return str.toLowerCase().replaceAll(' ', '-');\n}\nfunction removeNewLines(str) {\n  // replace all new lines with spaces\n  str = str.replaceAll(/[\\r\\n]+/g, \" \");\n  // remove any extra spaces or trailing/leading whitespace\n  str = str.replaceAll('  ', ' ');\n  str = str.replaceAll('  ', ' ');\n  str = str.replace(/^\\s+|\\s+$/g, '');\n  return str;\n}\nfunction colSum(table, colName) {\n  // fill with zero until there is something saved in storage\n  if (!table || table == '') {\n    return 0;\n  }\n  const headers = Object.keys(table[0]);\n  if (headers.includes(colName)) {\n    let sum = 0;\n    for (let i = 0; i < table.length; i++) {\n      var value = Math.round(parseFloat(table[i][colName]));\n      // treat NaN (non-numerics) as zeroes\n      if (value) {\n        sum += value;\n      }\n    }\n    return sum;\n  } else {\n    // console.error(`Could not find expected total column in saved data for ${name}. Returning 0. See StoredTable.totalCol() switch.`);\n    return 0;\n  }\n}\nfunction getUniqueValues(data, key) {\n  const values = data.map(obj => obj[key]);\n  return Array.from(new Set(values));\n}\n;// CONCATENATED MODULE: ./src/js/models/fund_lookup_table.js\n\n\nconst FundLookupTable = {\n  retrieve: function () {\n    return JSON.parse(localStorage.getItem('fund-lookup-table')) || {};\n  },\n  save: function (fundDict) {\n    localStorage.setItem('fund-lookup-table', JSON.stringify(fundDict));\n  },\n  update: function (fundData) {\n    // reset\n    this.reset();\n    // fill in with data stored in fundDate\n    const table = this.retrieve();\n    for (let fund of Object.keys(fundData)) {\n      // add to lookup table if not in there already\n      if (!table[fund]) {\n        // get fund name\n        const fundName = fundData[fund][0]['Fund Name'];\n        // add fund to dictionary\n        table[fund] = {};\n        table[fund]['name'] = fundName;\n        table[fund]['viewed'] = false;\n        // build lists of unique cost centers and appropriations\n        table[fund]['approp'] = getUniqueValues(fundData[fund], 'Appropriation Name');\n        table[fund]['cc'] = getUniqueValues(fundData[fund], 'Cost Center Name');\n      }\n    }\n    // save any updates\n    this.save(table);\n  },\n  getAll: function (key) {\n    // function to aggregate all approps or CCs for every fund in one array\n    const funds = this.retrieve();\n    const ret = [];\n    for (const fund in funds) {\n      if (funds.hasOwnProperty(fund)) {\n        for (let i in funds[fund][key]) {\n          ret.push(funds[fund][key][i]);\n        }\n      }\n    }\n    return ret;\n  },\n  getCostCenters: function (extraOption) {\n    // get current fund\n    const fund = current_fund.number();\n    let ret = [];\n    if (this.retrieve()[fund]) {\n      ret = this.retrieve()[fund]['cc'];\n    } else {\n      // if no fund (ie. we're on the new initiative page), return all options\n      ret = this.getAll('cc');\n    }\n    ;\n    // add extra option if given\n    if (extraOption) {\n      ret.push(extraOption);\n    }\n    return ret;\n  },\n  getApprops: function (extraOption) {\n    // get current fund\n    const fund = current_fund.number();\n    let ret = [];\n    if (this.retrieve()[fund]) {\n      ret = this.retrieve()[fund]['approp'];\n    } else {\n      // if no fund (ie. we're on the new initiative page), return all options\n      ret = this.getAll('approp');\n    }\n    ;\n    // add extra option if given\n    if (extraOption) {\n      ret.push(extraOption);\n    }\n    return ret;\n  },\n  reset: function () {\n    this.save({});\n  },\n  getName: function (number) {\n    if (!number || !this.retrieve()) {\n      return '';\n    }\n    ;\n    return this.retrieve()[number]['name'];\n  },\n  listFunds: function () {\n    return Object.keys(this.retrieve());\n  },\n  listFundNames: function () {\n    const funds = this.retrieve();\n    // initialize array\n    var ret = [];\n    Object.keys(funds).forEach(fund_number => {\n      var fund_name = funds[fund_number]['name'];\n      ret.push(fund_name);\n    });\n    return ret;\n  },\n  editFund: function (fund) {\n    const table = this.retrieve();\n    if (table[fund]) {\n      table[fund]['viewed'] = true;\n      this.save(table);\n    } else {\n      console.error('No fund selected.');\n    }\n  },\n  listUneditedFunds: function () {\n    const table = this.retrieve();\n    const ret = [];\n    this.listFunds().forEach(key => {\n      if (!table[key]['viewed']) {\n        ret.push(key);\n      }\n    });\n    return ret;\n  },\n  fundsLeft: function () {\n    return this.listUneditedFunds().length > 0;\n  }\n};\n/* harmony default export */ const fund_lookup_table = (FundLookupTable);\n;// CONCATENATED MODULE: ./src/js/models/current_fund.js\n\nconst CurrentFund = {\n  update: function (fund) {\n    localStorage.setItem('fund', fund);\n  },\n  number: function () {\n    return localStorage.getItem(\"fund\");\n  },\n  name: function () {\n    return fund_lookup_table.getName(this.number());\n  },\n  reset: function () {\n    this.update('');\n  }\n};\n/* harmony default export */ const current_fund = (CurrentFund);\n;// CONCATENATED MODULE: ./src/js/models/account_string.js\n\nconst AccountString = {\n  getNumber: function (input) {\n    // isolate the numerical part of a appropriation/cost center/object\n    const match = input.match(/^\\d+/);\n    return match ? match[0] : null;\n  },\n  build: function (approp, cc, obj = null, fund = null) {\n    // put together account string fund-approp-costcenter[-obj] (w optional object)\n    if (!fund) {\n      fund = current_fund.number();\n    }\n    ;\n    // hits error here\n    approp = this.getNumber(approp);\n    cc = this.getNumber(cc);\n    var string = `${fund}-${approp}-${cc}`;\n    string = obj ? `${string}-${this.getNumber(obj)}` : string;\n    return string;\n  },\n  getAccountStringSection: function (account_string, section) {\n    const sections = account_string.split(\"-\");\n    return sections.length > section ? sections[section] : null;\n  },\n  fund: function (account_string) {\n    return this.getAccountStringSection(account_string, 0);\n  },\n  approp: function (account_string) {\n    return this.getAccountStringSection(account_string, 1);\n  },\n  costCenter: function (account_string) {\n    return this.getAccountStringSection(account_string, 2);\n  },\n  object: function (account_string) {\n    return this.getAccountStringSection(account_string, 3);\n  }\n};\n/* harmony default export */ const account_string = (AccountString);\n;// CONCATENATED MODULE: ./src/js/models/fund.js\n\n\n\n// Helper function to create a unique list of appropriations represented in a table\nfunction fetchValueSet(table, key) {\n  // IF there's no data, return an empty list\n  if (!table) {\n    return [];\n  }\n\n  // Use a Set to store unique values\n  const uniqValues = new Set();\n\n  // Iterate through each object in the table\n  table.forEach(row => {\n    if (row[key]) {\n      uniqValues.add(row[key]);\n    }\n  });\n\n  // Convert the Set to an array if needed\n  return uniqValues;\n}\n\n// Class to hold information on a specific fund and table\nclass StoredTable {\n  constructor(page, fund) {\n    this.name = `${page}_${fund}`;\n    this.page = page;\n    this.table = JSON.parse(localStorage.getItem(this.name));\n    this.approps = fetchValueSet(this.table, 'Appropriation');\n    this.cc = fetchValueSet(this.table, 'Cost Center');\n  }\n  totalCol() {\n    return TOTAL_COLUMNS[this.page];\n  }\n  getSum() {\n    // fill with zero until there is something saved in storage\n    return colSum(this.table, this.totalCol(), this.name);\n  }\n\n  // key is the column to filter on (ie. Cost Center)\n  filter(key, value) {\n    if (this.table) {\n      // reassign underlying data in object if there's data to filter\n      this.table = this.table.filter(row => {\n        return row[key] && row[key] == value;\n      });\n    }\n    return this;\n  }\n}\nclass CostCenter {\n  constructor(fund, approp, cc) {\n    const AppropObj = new Appropriation(fund, approp);\n    this.personnel = AppropObj.personnel.filter('Cost Center', cc);\n    this.nonpersonnel = AppropObj.nonpersonnel.filter('Cost Center', cc);\n    this.overtime = AppropObj.overtime.filter('Cost Center', cc);\n    this.revenue = AppropObj.revenue.filter('Cost Center', cc);\n    this.cc = cc;\n    this.account_string = `${AppropObj.accountString()}-${cc}`;\n  }\n  getPersonnelCost() {\n    return this.personnel.getSum();\n  }\n  getOvertimeCost() {\n    return this.overtime.getSum();\n  }\n  getNonPersonnelCost() {\n    return this.nonpersonnel.getSum();\n  }\n  getRevenue() {\n    return this.revenue.getSum();\n  }\n  getTotal() {\n    // only sum expenditures, not net of revenue\n    return this.getNonPersonnelCost() + this.getOvertimeCost() + this.getPersonnelCost();\n  }\n  getName() {\n    // just grab the value in the approp name column for the first row of the first non-empty table\n    const tables = [this.nonpersonnel.table, this.personnel.table, this.overtime.table, this.revenue.table];\n    for (let table of tables) {\n      if (table.length > 0 && table[0]['Cost Center Name']) {\n        return 'Cost Center ' + table[0]['Cost Center Name'];\n      }\n    }\n\n    // If all tables are empty, return ''\n    return '';\n  }\n  accountString() {\n    return this.account_string;\n  }\n}\nclass Appropriation {\n  constructor(fund, approp) {\n    const fundObj = new Fund(fund);\n    this.personnel = fundObj.personnel.filter('Appropriation', approp);\n    this.nonpersonnel = fundObj.nonpersonnel.filter('Appropriation', approp);\n    this.overtime = fundObj.overtime.filter('Appropriation', approp);\n    this.revenue = fundObj.revenue.filter('Appropriation', approp);\n    // own data\n    this.approp = approp;\n    this.fund = fundObj.fund;\n  }\n  getCostCenters() {\n    // build a set of unique appropriations across all line items for the fund\n    const cc = new Set([...this.personnel.cc, ...this.overtime.cc, ...this.nonpersonnel.cc, ...this.revenue.cc]);\n\n    // initialize a list placeholder for the appropriations objects\n    const ccList = [];\n    // build out list\n    cc.forEach(num => {\n      ccList.push(new CostCenter(this.fund, this.approp, num));\n    });\n    return ccList;\n  }\n  total() {\n    return this.personnel.getSum() + this.overtime.getSum() + this.nonpersonnel.getSum();\n  }\n  name() {\n    // just grab the value in the approp name column for the first row of the first non-empty table\n    const tables = [this.nonpersonnel.table, this.personnel.table, this.overtime.table, this.revenue.table];\n    for (let table of tables) {\n      if (table.length > 0 && table[0]['Appropriation Name']) {\n        return 'Appropriation ' + table[0]['Appropriation Name'];\n      }\n    }\n\n    // If all tables are empty, return ''\n    return '';\n  }\n  accountString() {\n    return `${this.fund}-${this.approp}`;\n  }\n}\n\n// Holds all the detailed data for one fund's budget\nclass Fund {\n  constructor(fund) {\n    this.fund = fund;\n    this.personnel = new StoredTable('personnel', fund);\n    this.overtime = new StoredTable('overtime', fund);\n    this.nonpersonnel = new StoredTable('nonpersonnel', fund);\n    this.revenue = new StoredTable('revenue', fund);\n  }\n  getAppropriations() {\n    // build a set of unique appropriations across all line items for the fund\n    const approps = new Set([...this.personnel.approps, ...this.overtime.approps, ...this.nonpersonnel.approps, ...this.revenue.approps]);\n\n    // initialize a list placeholder for the appropriations objects\n    const appropsList = [];\n    // build out list\n    approps.forEach(approp => {\n      appropsList.push(new Appropriation(this.fund, approp));\n    });\n    return appropsList;\n  }\n  getPersonnelCost() {\n    return this.personnel.getSum();\n  }\n  getOvertimeCost() {\n    return this.overtime.getSum();\n  }\n  getNonPersonnelCost() {\n    return this.nonpersonnel.getSum();\n  }\n  getRevenue() {\n    return this.revenue.getSum();\n  }\n  getTotal() {\n    // only sum expenditures, not net of revenue\n    return this.getNonPersonnelCost() + this.getOvertimeCost() + this.getPersonnelCost();\n  }\n}\n/* harmony default export */ const models_fund = (Fund);\n;// CONCATENATED MODULE: ./src/js/models/baseline.js\n\n\nclass Baseline {\n  // baseline will just contain a list of funds, each with\n  // running tallies for their budgets\n  constructor() {\n    const allFunds = fund_lookup_table.listFunds();\n    this.funds = [];\n    allFunds.forEach(fund => {\n      this.funds.push(new models_fund(fund));\n    });\n  }\n  static target() {\n    return localStorage.getItem('target');\n  }\n  personnel() {\n    let total = 0;\n    this.funds.forEach(fund => {\n      total += fund.getPersonnelCost();\n    });\n    return total;\n  }\n  overtime() {\n    let total = 0;\n    this.funds.forEach(fund => {\n      total += fund.getOvertimeCost();\n    });\n    return total;\n  }\n  nonpersonnel() {\n    let total = 0;\n    this.funds.forEach(fund => {\n      total += fund.getNonPersonnelCost();\n    });\n    return total;\n  }\n  revenue() {\n    let total = 0;\n    this.funds.forEach(fund => {\n      total += fund.getRevenue();\n    });\n    return total;\n  }\n  total() {\n    return this.nonpersonnel() + this.personnel() + this.overtime();\n  }\n  genFundTotal() {\n    const GF = new models_fund(1000);\n    return GF.getTotal();\n  }\n}\n/* harmony default export */ const models_baseline = (Baseline);\n;// CONCATENATED MODULE: ./src/js/models/initiative.js\n// data structure to hold information on new initiatives\n\n\n\nclass Initiative {\n  constructor(row) {\n    this.data = row;\n    this.name = row[NEW_INIT_COLS['name']];\n  }\n  id() {\n    let hash = 5381;\n    for (let i = 0; i < this.name.length; i++) {\n      hash = (hash << 5) + hash + this.name.charCodeAt(i); // hash * 33 + c\n    }\n    return hash >>> 0; // Ensure positive unsigned 32-bit integer\n  }\n  personnel() {\n    if (this.data[NEW_INIT_COLS['personnel']]) {\n      return this.data[NEW_INIT_COLS['personnel']];\n    } else {\n      return 0;\n    }\n  }\n  operating() {\n    if (this.data[NEW_INIT_COLS['operating']]) {\n      return this.data[NEW_INIT_COLS['operating']];\n    } else {\n      return 0;\n    }\n  }\n  capital() {\n    if (this.data[NEW_INIT_COLS['capital']]) {\n      return this.data[NEW_INIT_COLS['capital']];\n    } else {\n      return 0;\n    }\n  }\n  revenue() {\n    if (this.data[NEW_INIT_COLS['revenue']]) {\n      return this.data[NEW_INIT_COLS['revenue']];\n    } else {\n      return 0;\n    }\n  }\n  total() {\n    if (this.data[NEW_INIT_COLS['total']]) {\n      return this.data[NEW_INIT_COLS['total']];\n    } else {\n      return 0;\n    }\n  }\n}\n/* harmony default export */ const initiative = (Initiative);\n;// CONCATENATED MODULE: ./src/js/models/services.js\n// data structure to save the possible service options for the department\nconst Services = {\n  save: function (services) {\n    localStorage.setItem('services-list', JSON.stringify(services));\n  },\n  list: function () {\n    return JSON.parse(localStorage.getItem('services-list')) || {};\n  }\n};\n/* harmony default export */ const services = (Services);\n;// CONCATENATED MODULE: ./src/js/models/supplemental.js\n\n\n\n\n// data structure to hold supplemental requests\nclass Supplemental {\n  constructor() {\n    this.table = JSON.parse(localStorage.getItem('new-inits'));\n    this.initiatives = [];\n    if (this.table) {\n      this.table.forEach(row => {\n        this.initiatives.push(new initiative(row));\n      });\n    }\n  }\n  getInits() {\n    return this.table.map(item => {\n      return item[NEW_INIT_COLS['name']];\n    });\n  }\n  personnel() {\n    return colSum(this.table, NEW_INIT_COLS['personnel']);\n  }\n  operating() {\n    return colSum(this.table, NEW_INIT_COLS['operating']);\n  }\n  capital() {\n    return colSum(this.table, NEW_INIT_COLS['capital']);\n  }\n  revenue() {\n    return colSum(this.table, NEW_INIT_COLS['revenue']);\n  }\n  total() {\n    return colSum(this.table, TOTAL_COLUMNS['new-inits']);\n  }\n}\n/* harmony default export */ const supplemental = (Supplemental);\n;// CONCATENATED MODULE: ./src/js/models/index.js\n// models/index.js\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./src/js/components/sidebar/subcomponents/baseline_section.js\n\n\n\n\nconst BaselineSection = {\n  _data: new models_baseline(),\n  _genFund: new models_fund(1000),\n  get data() {\n    this._data = new models_baseline();\n    return this._data;\n  },\n  set data(newData) {\n    this._data = newData;\n  },\n  get genFund() {\n    this._genFund = new models_fund(1000);\n    return this._genFund;\n  },\n  set genFund(newFund) {\n    this._genFund = newFund;\n  },\n  target_html() {\n    return `\n            <div class='sidebar-stat-line' id=\"target\">\n                <span class=\"stat-label\">FY${FISCAL_YEAR} General Fund baseline target:</span> \n                <span class=\"stat\">${formatCurrency(models_baseline.target())}</span>\n            </div>\n            <div class='sidebar-stat-line' id=\"GF-total\">\n                <span class=\"stat-label\">Current GF baseline:</span> \n                <span class=\"stat\">${formatCurrency(this.genFund.getTotal())}</span>\n            </div>\n            <br>`;\n  },\n  fund_html(fund) {\n    return `\n            <h6>${fund_lookup_table.getName(fund.fund)}</h6>\n            <hr>\n            <div class='sidebar-stat-line revenue'>\n                <span class=\"stat-label\">Projected revenues:</span> \n                <span class=\"stat\">${formatCurrency(fund.getRevenue())}</span>\n                <i class=\"fas fa-edit edit-icon\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line personnel'>\n                <span class=\"stat-label\">Personnel cost:</span> \n                <span class=\"stat\">${formatCurrency(fund.getPersonnelCost())}</span>\n                <i class=\"fas fa-edit edit-icon\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line overtime'>\n                <span class=\"stat-label\">Overtime cost:</span> \n                <span class=\"stat\">${formatCurrency(fund.getOvertimeCost())}</span>\n                <i class=\"fas fa-edit edit-icon\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line nonpersonnel'>\n                <span class=\"stat-label\">Non-personnel cost:</span> \n                <span class=\"stat\">${formatCurrency(fund.getNonPersonnelCost())}</span>\n                <i class=\"fas fa-edit edit-icon\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line fund-total'>\n                <span class=\"stat-label\">Total expenditures:</span> \n                <span class=\"stat\">${formatCurrency(fund.getTotal())}</span>\n            </div>\n            <br>`;\n  },\n  linkEditBtns() {\n    let btns = document.querySelectorAll('.edit-icon');\n    btns.forEach(btn => {\n      // Get the fund from the div the button is in\n      let fund = btn.closest('.fund-div').id.replace('fund_', '');\n      let page = btn.closest('.sidebar-stat-line').classList[1];\n      btn.addEventListener('click', function () {\n        current_fund.update(fund);\n        visitPage(page);\n      });\n    });\n  },\n  update() {\n    const baselineDiv = document.querySelector('#baseline-stats');\n    baselineDiv.innerHTML = this.target_html();\n    this.data.funds.forEach(fund => {\n      var fundDiv = document.createElement('div');\n      fundDiv.id = `fund_${fund.fund}`;\n      fundDiv.classList.add('fund-div');\n      fundDiv.innerHTML = this.fund_html(fund);\n      baselineDiv.appendChild(fundDiv);\n    });\n    if (this.genFund.getTotal() <= models_baseline.target()) {\n      document.querySelector('#GF-total .stat').style.color = \"green\";\n      // document.querySelector('#fund_1000 .sidebar-stat-line:last-of-type .stat').style.color = \"green\";\n    } else {\n      document.querySelector('#GF-total .stat').style.color = \"red\";\n      // document.querySelector('#fund_1000 .sidebar-stat-line:last-of-type .stat').style.color = \"red\";\n    }\n    this.linkEditBtns();\n  }\n};\n;// CONCATENATED MODULE: ./src/js/components/sidebar/subcomponents/supp_section.js\n\n\n\nconst SuppSection = {\n  html() {\n    var supp = new supplemental();\n    return `\n            <div class='sidebar-stat-line' id=\"supp-revenue\">\n                <span class=\"stat-label\">Estimated Revenues:</span> \n                <span class=\"stat\">${formatCurrency(supp.revenue())}</span>\n                <i class=\"fas fa-edit edit-supp\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line' id=\"supp-expenses\">\n                <span class=\"stat-label\">Personnel cost:</span> \n                <span class=\"stat\">${formatCurrency(supp.personnel())}</span>\n                <i class=\"fas fa-edit edit-supp\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line' id=\"supp-expenses\">\n                <span class=\"stat-label\">Non-Personnel Operating:</span> \n                <span class=\"stat\">${formatCurrency(supp.operating())}</span>\n                <i class=\"fas fa-edit edit-supp\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line' id=\"supp-expenses\">\n                <span class=\"stat-label\">Non-Personnel Capital:</span> \n                <span class=\"stat\">${formatCurrency(supp.capital())}</span>\n                <i class=\"fas fa-edit edit-supp\" title=\"Edit\"></i>\n            </div>\n            <div class='sidebar-stat-line' id=\"supp-expenses\">\n                <span class=\"stat-label\">Total expenditures:</span> \n                <span class=\"stat\">${formatCurrency(supp.total())}</span>\n                <i class=\"fas fa-edit edit-supp\" title=\"Edit\"></i>\n            </div>`;\n  },\n  linkEditBtns() {\n    let btns = document.querySelectorAll('.edit-supp');\n    btns.forEach(btn => {\n      btn.addEventListener('click', function () {\n        visitPage('new-inits');\n      });\n    });\n  },\n  update() {\n    const suppDiv = document.querySelector('#supp-stats');\n    suppDiv.innerHTML = this.html();\n    this.linkEditBtns();\n  }\n};\n/* harmony default export */ const supp_section = (SuppSection);\n;// CONCATENATED MODULE: ./src/js/components/sidebar/sidebar.js\n\n\n\n\n// fetch CSS variables saved in :root\nconst root = document.documentElement;\nconst sideBarWidth = getComputedStyle(root).getPropertyValue('--sidebar-width').trim();\nfunction hideSidebar() {\n  document.getElementById('sidebar-panel').style.display = 'none';\n  document.getElementById('main-panel').style.width = '100%';\n  document.querySelector('header').style.width = '100%';\n}\nfunction showSidebar() {\n  const sidebar = document.getElementById('sidebar-panel');\n  const mainPanel = document.getElementById('main-panel');\n  const header = document.querySelector('header');\n\n  // update values\n  updateTotals();\n  sidebar.style.display = 'block'; // Show the sidebar\n\n  // Calculate the remaining width for the main panel and header\n  var contentWidth = document.documentElement.clientWidth;\n  mainPanel.style.width = `${contentWidth - parseInt(sideBarWidth, 10)}px`;\n  header.style.width = `${contentWidth - parseInt(sideBarWidth, 10)}px`;\n\n  // add event listener to resize content if window is adjusted\n  window.addEventListener('resize', showSidebar);\n}\nfunction updateSidebarTitle(new_title) {\n  document.getElementById('sidebar-title').textContent = new_title;\n}\nfunction updateTotals() {\n  supp_section.update();\n  BaselineSection.update();\n}\nfunction resetAll() {\n  localStorage.clear();\n  // reset all stats to 0\n  updateTotals();\n}\nconst Sidebar = {\n  SuppSection: supp_section,\n  BaselineSection: BaselineSection,\n  hide: hideSidebar,\n  show: showSidebar,\n  updateTitle: updateSidebarTitle,\n  updateTotals: updateTotals,\n  reset: resetAll\n};\n/* harmony default export */ const components_sidebar_sidebar = (Sidebar);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/nav_buttons/nav_buttons.css\nvar nav_buttons = __webpack_require__(595);\n;// CONCATENATED MODULE: ./src/js/components/nav_buttons/nav_buttons.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar nav_buttons_options = {};\n\nnav_buttons_options.styleTagTransform = (styleTagTransform_default());\nnav_buttons_options.setAttributes = (setAttributesWithoutAttributes_default());\nnav_buttons_options.insert = insertBySelector_default().bind(null, \"head\");\nnav_buttons_options.domAPI = (styleDomAPI_default());\nnav_buttons_options.insertStyleElement = (insertStyleElement_default());\n\nvar nav_buttons_update = injectStylesIntoStyleTag_default()(nav_buttons/* default */.A, nav_buttons_options);\n\n\n\n\n       /* harmony default export */ const nav_buttons_nav_buttons = (nav_buttons/* default */.A && nav_buttons/* default */.A.locals ? nav_buttons/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/nav_buttons/nav_buttons.js\n// nav_buttons.js\n\n\nfunction initializeNavButtons() {\n  // initialize last button\n  const last_btn = document.getElementById('btn-last');\n  last_btn.addEventListener('click', lastPage);\n  // initialize next button\n  const next_btn = document.getElementById('btn-next');\n  next_btn.addEventListener('click', nextPage);\n}\nfunction nav_buttons_disable(button_id) {\n  const button = document.getElementById(button_id);\n  button.classList.add('disabled');\n  button.disabled = true; // Also disable it at the DOM level\n}\nfunction nav_buttons_enable(button_id) {\n  const button = document.getElementById(button_id);\n  button.classList.remove('disabled');\n  button.disabled = false; // Enable it at the DOM level\n}\nconst Next = {\n  disable: function () {\n    nav_buttons_disable('btn-next');\n  },\n  enable: function () {\n    nav_buttons_enable('btn-next');\n  },\n  addAction: function (fn) {\n    document.querySelector(`#btn-next`).addEventListener('click', fn);\n  },\n  removeAction: function (fn) {\n    document.querySelector(`#btn-next`).removeEventListener('click', fn);\n  }\n};\nconst Last = {\n  disable: function () {\n    nav_buttons_disable('btn-last');\n  },\n  enable: function () {\n    nav_buttons_enable('btn-last');\n  }\n};\nconst NavButtons = {\n  hide: function () {\n    document.getElementById('nav-btns').style.display = 'none';\n  },\n  show: function () {\n    document.getElementById('nav-btns').style.display = 'block';\n    initializeNavButtons();\n  },\n  Next: Next,\n  Last: Last\n};\n/* harmony default export */ const components_nav_buttons_nav_buttons = (NavButtons);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/body/body.css\nvar body = __webpack_require__(9);\n;// CONCATENATED MODULE: ./src/js/components/body/body.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar body_options = {};\n\nbody_options.styleTagTransform = (styleTagTransform_default());\nbody_options.setAttributes = (setAttributesWithoutAttributes_default());\nbody_options.insert = insertBySelector_default().bind(null, \"head\");\nbody_options.domAPI = (styleDomAPI_default());\nbody_options.insertStyleElement = (insertStyleElement_default());\n\nvar body_update = injectStylesIntoStyleTag_default()(body/* default */.A, body_options);\n\n\n\n\n       /* harmony default export */ const body_body = (body/* default */.A && body/* default */.A.locals ? body/* default */.A.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/accordion/accordion.css\nvar accordion = __webpack_require__(995);\n;// CONCATENATED MODULE: ./src/js/components/accordion/accordion.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar accordion_options = {};\n\naccordion_options.styleTagTransform = (styleTagTransform_default());\naccordion_options.setAttributes = (setAttributesWithoutAttributes_default());\naccordion_options.insert = insertBySelector_default().bind(null, \"head\");\naccordion_options.domAPI = (styleDomAPI_default());\naccordion_options.insertStyleElement = (insertStyleElement_default());\n\nvar accordion_update = injectStylesIntoStyleTag_default()(accordion/* default */.A, accordion_options);\n\n\n\n\n       /* harmony default export */ const accordion_accordion = (accordion/* default */.A && accordion/* default */.A.locals ? accordion/* default */.A.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/table/table.css\nvar table = __webpack_require__(279);\n;// CONCATENATED MODULE: ./src/js/components/table/table.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar table_options = {};\n\ntable_options.styleTagTransform = (styleTagTransform_default());\ntable_options.setAttributes = (setAttributesWithoutAttributes_default());\ntable_options.insert = insertBySelector_default().bind(null, \"head\");\ntable_options.domAPI = (styleDomAPI_default());\ntable_options.insertStyleElement = (insertStyleElement_default());\n\nvar table_update = injectStylesIntoStyleTag_default()(table/* default */.A, table_options);\n\n\n\n\n       /* harmony default export */ const table_table = (table/* default */.A && table/* default */.A.locals ? table/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/headers.js\nfunction addTableHeaders(cols) {\n  // Get the table element by its ID\n  const table = document.getElementById('main-table');\n\n  // Create a table header row element\n  const headerRow = document.createElement('tr');\n  cols.forEach(col => {\n    // Create a header cell element\n    const headerCell = document.createElement('th');\n    headerCell.textContent = col['title'];\n    headerCell.classList.add(col['className']);\n\n    // Append the header cell to the header row\n    headerRow.appendChild(headerCell);\n  });\n\n  // Append the header row to the table header\n  let thead = table.querySelector('thead');\n  thead.appendChild(headerRow);\n}\nconst Header = {\n  add: function (header_array) {\n    addTableHeaders(header_array);\n  }\n};\n/* harmony default export */ const headers = (Header);\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/rows.js\n\n\nasync function addNewRow(data_dictionary, columns = []) {\n  // Get the table element by its ID\n  const table = document.getElementById('main-table');\n\n  // check if header has already been added\n  let header_row = table.querySelector('thead tr');\n  if (!header_row) {\n    headers.add(columns);\n    header_row = table.querySelector('thead tr');\n  }\n\n  // initialize new row of data\n  const new_row = document.createElement('tr');\n\n  // go through each header and add the right cell value depending on its class\n  let thElements = header_row.querySelectorAll('th');\n  thElements.forEach(header_cell => {\n    // Create new cell and add it to the row\n    const newCell = document.createElement('td');\n    new_row.appendChild(newCell);\n    // if the data has an appropriate class, add the info to the cell. \n    // Otherwise, keep empty cell\n    Object.keys(data_dictionary).forEach(className => {\n      if (header_cell.classList.contains(className)) {\n        newCell.textContent = data_dictionary[className];\n        newCell.classList.add(className);\n      }\n    });\n  });\n\n  // Append the new row to the table body\n  let tbody = table.querySelector('tbody');\n  tbody.appendChild(new_row);\n}\nfunction saveRowEdits(row) {\n  var cells = row.querySelectorAll('td');\n  cells.forEach(cell => {\n    // save dropdown values\n    if (cell.querySelector('select')) {\n      var serviceSelector = cell.querySelector('select');\n      cell.textContent = serviceSelector.value;\n    } else if (cell.querySelector('input')) {\n      // save new entered value in textbox\n      var textbox = cell.querySelector('input');\n      var enteredValue = textbox.value;\n      // update display and format with currency if relevant\n      if (cell.classList.contains('cost')) {\n        // if cost, remove commas first\n        enteredValue = enteredValue.replaceAll(',', '');\n        cell.textContent = formatCurrency(enteredValue);\n        // set value attribute to the new user input\n        cell.setAttribute('value', enteredValue);\n      } else {\n        cell.textContent = enteredValue;\n      }\n    } else if (cell.querySelector('textarea')) {\n      // save new entered value in textbox\n      var enteredValue = cell.querySelector('textarea').value;\n      cell.textContent = enteredValue;\n    }\n  });\n}\nconst Rows = {\n  add: function (data_dictionary, cols) {\n    addNewRow(data_dictionary, cols);\n  },\n  saveEdits: function (row) {\n    saveRowEdits(row);\n  }\n};\n/* harmony default export */ const rows = (Rows);\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/buttons.js\n\nfunction hideButton(className) {\n  return function () {\n    var buttons = document.getElementsByClassName(className);\n    for (var i = 0; i < buttons.length; i++) {\n      buttons[i].style.display = 'none';\n    }\n  };\n}\nfunction showButton(className) {\n  return function () {\n    var buttons = document.getElementsByClassName(className);\n    for (var i = 0; i < buttons.length; i++) {\n      buttons[i].style.display = 'inline';\n    }\n  };\n}\nfunction updateButtonText(className, text) {\n  document.querySelector(`.${className}`).textContent = text;\n}\nfunction handleRowEdit(actionOnClick, updateCallback = null) {\n  // attach an event listener to each edit button in every row\n  var editButtons = document.getElementsByClassName('btn-edit');\n  for (var i = 0; i < editButtons.length; i++) {\n    editButtons[i].addEventListener('click', async function (event) {\n      // Determine what was clicked on within the table\n      var rowToEdit = event.target.closest('tr');\n      // mark row as being edited\n      rowToEdit.classList.add('active-editing');\n\n      // turn relevant entries into textboxes, usually\n      actionOnClick();\n\n      // hide edit buttons\n      Edit.hide();\n      if (updateCallback) {\n        initializeConfirmButton(updateCallback);\n      }\n    });\n  }\n  ;\n}\nfunction initializeConfirmButton(updateCallback) {\n  // get element and add listener for click\n  var rowToEdit = document.querySelector('.active-editing');\n  const confirm_btn = rowToEdit.querySelector(\".btn-confirm\");\n  // show the row's confirm button\n  confirm_btn.style.display = 'block';\n  confirm_btn.addEventListener('click', function () {\n    ;\n    // save row edits\n    rows.saveEdits(rowToEdit);\n    // update values in sidebar\n    updateCallback();\n    // make row no longer green\n    rowToEdit.classList.remove('active-editing');\n    // show edit buttons and hide confirm buttons\n    Edit.show();\n    Confirm.hide();\n  });\n}\nconst Edit = {\n  html: '<button class=\"btn btn-edit\">Edit row</button>',\n  hide: hideButton('btn-edit'),\n  show: showButton('btn-edit'),\n  init: function (actionOnClick, updateCallback) {\n    handleRowEdit(actionOnClick, updateCallback);\n  }\n};\nconst Delete = {\n  html: '<button class=\"btn btn-delete\">Delete</button>',\n  hide: hideButton('btn-delete'),\n  show: showButton('btn-delete')\n};\nconst Confirm = {\n  html: '<button class=\"btn btn-confirm\">Confirm</button>',\n  hide: hideButton('btn-confirm'),\n  show: showButton('btn-confirm')\n};\nconst AddRow = {\n  hide: hideButton('btn-add'),\n  show: showButton('btn-add'),\n  updateText: function (text) {\n    updateButtonText('btn-add', text);\n  }\n};\nconst buttons_Buttons = {\n  Delete: Delete,\n  Edit: Edit,\n  Confirm: Confirm,\n  AddRow: AddRow,\n  edit_confirm_btns: Edit.html + Confirm.html,\n  all_btns: Delete.html + Edit.html + Confirm.html\n};\n/* harmony default export */ const subcomponents_buttons = (buttons_Buttons);\n;// CONCATENATED MODULE: ./src/js/components/form/subcomponents/dropdown.js\nfunction createDropdown(dataArray) {\n  // Creating a select element\n  const selectElement = document.createElement('select');\n\n  // add a default blank option to the dataArray\n  dataArray = [''].concat(dataArray);\n\n  // Looping through the array and creating an option for each element\n  dataArray.forEach(item => {\n    const optionElement = document.createElement('option');\n    optionElement.value = item;\n    optionElement.textContent = item;\n    selectElement.appendChild(optionElement); // Appending the option to the select\n  });\n\n  // Return the select element so it can be appended to the document\n  return selectElement;\n}\nconst Dropdown = {\n  create: function (dataArray) {\n    return createDropdown(dataArray);\n  }\n};\n/* harmony default export */ const subcomponents_dropdown = (Dropdown);\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/cells.js\n\n\n\n\n// return cell value attribute or 0 if it does not exist\nfunction getCellValue(row, className) {\n  var cell = row.querySelector(`.${className}`);\n  var cellValue = cell ? cell.getAttribute('value') : null;\n  return cellValue ? parseFloat(cellValue) : 0;\n}\n\n// return text in cell\nfunction getCellText(row, className) {\n  var cell = row.querySelector(`.${className}`);\n  if (cell) {\n    return cell.textContent;\n  } else {\n    //console.log(`Error retrieving cell text for class ${className}`);\n    return '';\n  }\n}\nfunction updateTableCell(row, col_class, new_value) {\n  const cell = row.querySelector(`.${col_class}`);\n  cell.setAttribute('value', new_value);\n  cell.textContent = formatCurrency(new_value);\n}\nfunction createEditableCell(cellClass, isCost, type = 'input') {\n  // get cell\n  const cell = document.querySelector(`.active-editing td.${cellClass}`);\n  // Create an input element to edit the value\n  var textbox = document.createElement(type);\n  if (type == 'input') {\n    textbox.type = 'text';\n  }\n  ;\n  if (isCost) {\n    var value = cell.getAttribute('value');\n    textbox.value = displayWithCommas(value);\n  } else {\n    textbox.value = cell.textContent;\n  }\n  // Clear the current content and append the textbox to the cell\n  cell.innerHTML = '';\n  cell.appendChild(textbox);\n}\nfunction cells_createDropdown(cellClass, optionArray) {\n  // get cell\n  const cell = document.querySelector(`.active-editing td.${cellClass}`);\n  // add service dropdown\n  const dropdown = subcomponents_dropdown.create(optionArray);\n  dropdown.value = cell.textContent;\n  // Clear the current content and append the textbox to the cell\n  cell.innerHTML = '';\n  cell.appendChild(dropdown);\n}\nconst Cell = {\n  getValue: function (row, className) {\n    return getCellValue(row, className);\n  },\n  getText: function (row, className) {\n    return getCellText(row, className);\n  },\n  updateValue: function (row, col_class, new_value) {\n    updateTableCell(row, col_class, new_value);\n  },\n  createTextbox: function (className, isCost, type) {\n    createEditableCell(className, isCost, type);\n  },\n  createServiceDropdown: () => {\n    cells_createDropdown('service', services.list());\n  },\n  createDropdown: cells_createDropdown\n};\n/* harmony default export */ const cells = (Cell);\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/columns.js\n\n\n// position is index at which new column will be inserted\nfunction addCol(position, htmlContent = '', headerTitle = '') {\n  // Get the table element by its ID\n  let table = document.getElementById('main-table');\n\n  // Validate position\n  let maxPosition = table.rows[0].cells.length;\n  if (position < 0 || position > maxPosition) {\n    console.error(`Position ${position} is out of bounds.`);\n    return;\n  }\n\n  // Insert the header if provided\n  let thead = table.tHead;\n  if (headerTitle && thead) {\n    let th = document.createElement('th');\n    th.innerHTML = headerTitle; // Use innerHTML to insert HTML content\n    thead.rows[0].insertBefore(th, thead.rows[0].cells[position]);\n  }\n\n  // Insert new cells into each row of the table body\n  let tbody = table.tBodies[0];\n  if (tbody) {\n    for (let i = 0; i < tbody.rows.length; i++) {\n      let row = tbody.rows[i];\n      let td = document.createElement('td');\n      td.innerHTML = htmlContent; // Use innerHTML to insert HTML content\n      row.insertBefore(td, row.cells[position]);\n    }\n  }\n}\nfunction ncols() {\n  const table = document.getElementById('main-table');\n  // Ensure that the row exists before counting the columns\n  return table.rows[0].cells.length;\n}\nfunction addColToEnd(htmlContents = [], headerTitle = '') {\n  // count columns and add new column to the end\n  const position = ncols('main-table');\n  addCol(position, htmlContents, headerTitle);\n}\nfunction assignClassToColumn(headerName, className) {\n  // Get the table element by its ID\n  let table = document.getElementById('main-table');\n\n  // Find the index of the column by its header name\n  const thead = table.tHead;\n  let headerCellIndex = -1;\n  const headerCells = thead.rows[0].cells; // Assuming the first row contains header cells (<th>)\n  for (let i = 0; i < headerCells.length; i++) {\n    if (headerCells[i].textContent.trim() === headerName) {\n      // assign the class to the header cell\n      headerCells[i].classList.add(className);\n      headerCellIndex = i;\n      break;\n    }\n  }\n\n  // error check\n  if (headerCellIndex === -1) {\n    console.error(`No header found with name \"${headerName}\"`);\n    return;\n  }\n\n  // Assign the class to each cell in the specified column index within the tbody\n  let tbody = table.tBodies[0];\n  if (tbody) {\n    let bodyRows = tbody.rows;\n    for (let row of bodyRows) {\n      if (row.cells[headerCellIndex]) {\n        row.cells[headerCellIndex].classList.add(className);\n      }\n    }\n  }\n}\nfunction addCostClass(headerName) {\n  assignClassToColumn(headerName, 'cost');\n\n  // Get all the cells with the specified class name\n  const cells = document.querySelectorAll(`td.cost`);\n  cells.forEach(cell => {\n    // Get the current text content of the cell and assign it to 'value' attribute\n    if (!cell.getAttribute('value')) {\n      const cellText = cell.textContent.trim();\n      const cellValue = isNaN(cellText) || cellText === '' ? 0 : parseFloat(cellText);\n      cell.setAttribute('value', cellValue);\n\n      // Now format the text content like currency and replace it in the cell\n      const formattedCurrency = formatCurrency(parseFloat(cellValue));\n      cell.textContent = formattedCurrency;\n    }\n  });\n}\nfunction assignColumnClasses(columnDefinitions) {\n  columnDefinitions.forEach(column => {\n    // Assign class to column\n    assignClassToColumn(column.title, column.className);\n\n    // If the column is a cost column, add the specific cost class\n    if (column.isCost) {\n      addCostClass(column.title);\n    }\n\n    // show the column\n    if (!column.hide) {\n      showColumnByTitle(column.title);\n    }\n  });\n}\nfunction hideColumn(index) {\n  var table = document.getElementById('main-table');\n  var rows = table.rows;\n  for (var i = 0; i < rows.length; i++) {\n    var cells = rows[i].cells;\n    if (cells.length > index) {\n      cells[index].style.display = 'none';\n    }\n  }\n}\n\n// Function to show a specific column\nfunction showColumn(index) {\n  var table = document.getElementById('main-table');\n  var rows = table.rows;\n  for (var i = 0; i < rows.length; i++) {\n    var cells = rows[i].cells;\n    if (cells.length > index) {\n      cells[index].style.display = 'table-cell';\n    }\n  }\n}\n\n// Function to get the column index by title\nfunction getColumnIndexByTitle(table, title) {\n  var headers = table.querySelectorAll('th');\n  for (var i = 0; i < headers.length; i++) {\n    if (headers[i].innerText === title) {\n      return i;\n    }\n  }\n  return -1; // Column not found\n}\n\n// Function to hide a column by title\nfunction hideColumnByTitle(title) {\n  var table = document.getElementById('main-table');\n  var index = getColumnIndexByTitle(table, title);\n  if (index !== -1) {\n    hideColumn(index);\n  } else {\n    console.log(`Column with title \"${title}\" not found.`);\n  }\n}\n\n// Function to show a column by title\nfunction showColumnByTitle(title) {\n  var table = document.getElementById('main-table');\n  var index = getColumnIndexByTitle(table, title);\n  if (index !== -1) {\n    showColumn(index);\n  } else {\n    console.log(`Column with title \"${title}\" not found.`);\n  }\n}\nconst Column = {\n  add: function (position, htmlContent, headerTitle) {\n    return addCol(position, htmlContent, headerTitle);\n  },\n  addAtEnd: function (htmlContent, headerTitle) {\n    return addColToEnd(htmlContent, headerTitle);\n  },\n  assignClasses: function (column_definitions) {\n    return assignColumnClasses(column_definitions);\n  },\n  hide: function (colName) {\n    hideColumnByTitle(colName);\n  },\n  show: function (colName) {\n    showColumnByTitle(colName);\n  }\n};\n/* harmony default export */ const columns = (Column);\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/data.js\n\n\n\n\nfunction fillTable(data) {\n  try {\n    const table = document.getElementById('main-table');\n    const thead = table.querySelector('thead');\n    const tbody = table.querySelector('tbody');\n\n    // clear existing data\n    thead.innerHTML = '';\n    tbody.innerHTML = '';\n\n    // Create table header row\n    const headerRow = document.createElement('tr');\n    Object.keys(data[0]).forEach(key => {\n      const header = document.createElement('th');\n      header.textContent = key;\n      headerRow.appendChild(header);\n    });\n    thead.appendChild(headerRow);\n\n    // Create table body rows\n    data.forEach(item => {\n      const row = document.createElement('tr');\n      Object.values(item).forEach(val => {\n        const cell = document.createElement('td');\n        cell.innerHTML = val;\n        row.appendChild(cell);\n      });\n      tbody.appendChild(row);\n    });\n  } catch (error) {\n    console.error('No table saved in localStorage:', error);\n  }\n}\nasync function loadFromStorage() {\n  // look up table name in storage\n  if (current_fund.number()) {\n    var key = `${current_page.load()}_${current_fund.number()}`;\n  } else {\n    var key = current_page.load();\n  }\n  // load from local storage\n  const data = localStorage.getItem(key);\n  // if nothing in storage, return a zero\n  if (!data) {\n    return 0;\n  } else {\n    // otherwise, fill table in HTML and return success (1)\n    components_table_table.show();\n    fillTable(await JSON.parse(data));\n    return 1;\n  }\n}\nfunction loadFunds() {\n  // get list of funds from storage\n  const fundDict = fund_lookup_table.retrieve();\n  // build out data in correct format\n  const ret = [];\n  Object.keys(fundDict).forEach(key => {\n    // determine if the fund has already been edited\n    if (fundDict[key]['viewed']) {\n      // todo: add a checkmark here\n      ret.push({\n        'Fund': `<span class = 'viewed-fund'> \n                                    <i class=\"fas fa-check\"></i>\n                                    ${fundDict[key]['name']}\n                                </span>`\n      });\n    } else {\n      ret.push({\n        'Fund': `<span class = 'unviewed-fund'> \n                                    ${fundDict[key]['name']}\n                                </span>`\n      });\n    }\n  });\n  fillTable(ret);\n}\nfunction getColumnIndexByClass(tbody, className) {\n  const firstRow = tbody.rows[0];\n  if (!firstRow) return -1; // Return -1 if there's no row to examine\n  for (let cellIndex = 0; cellIndex < firstRow.cells.length; cellIndex++) {\n    if (firstRow.cells[cellIndex].classList.contains(className)) {\n      return cellIndex;\n    }\n  }\n  return -1; // Return -1 if class name not found\n}\n\n// function sort(primaryClass, secondaryClass) {\n//   const table = document.getElementById('main-table');\n//   const tbody = table.tBodies[0];\n//   const rows = Array.from(tbody.rows);\n\n//   // Get the column indices by class name\n//   const primaryColIndex = getColumnIndexByClass(tbody, primaryClass);\n//   const secondaryColIndex = getColumnIndexByClass(tbody, secondaryClass);\n\n//   // exit if classes don't exist\n//   if (primaryColIndex === -1 ) {\n//       console.error(`Column class ${classA} not found in table`);\n//       return; \n//   } else if (secondaryColIndex === -1) {\n//       console.error(`Column class ${classB} not found in table`);\n//       return; \n//   }\n\n//   // Sort the rows based on the text content of the cells\n//   rows.sort((rowA, rowB) => {\n//       // Primary column comparison\n//       const primaryA = unformatCurrency(rowA.cells[primaryColIndex].textContent);\n//       const primaryB = unformatCurrency(rowB.cells[primaryColIndex].textContent);\n\n//       if (primaryA < primaryB) return -1;\n//       if (primaryA > primaryB) return 1;\n\n//       // Secondary column comparison (if primary is equal)\n//       const secondaryA = unformatCurrency(rowA.cells[secondaryColIndex].textContent);\n//       const secondaryB = unformatCurrency(rowB.cells[secondaryColIndex].textContent);\n\n//       if (secondaryA < secondaryB) return -1;\n//       if (secondaryA > secondaryB) return 1;\n\n//       // If both columns are equal\n//       return 0;\n//   });\n\n//   // Reattach sorted rows to the table body\n//   rows.forEach((row) => tbody.appendChild(row));\n// }\n\nconst Data = {\n  load: loadFromStorage,\n  loadFunds: loadFunds,\n  sort: function (colA, colB) {\n    sort(colA, colB);\n  }\n};\n/* harmony default export */ const data = (Data);\n;// CONCATENATED MODULE: ./src/js/components/table/subcomponents/filters.js\n// Helper functions & constants\n\n// object to hold all current filter statuses\nconst filterSettings = {\n  'approp-name': '',\n  'cc-name': '',\n  'object-name': '',\n  'object-category': ''\n};\n\n// helper function to filter data based on all filters\nfunction filterData() {\n  // Get all rows in the table\n  const rows = document.querySelectorAll('#main-table tbody tr');\n\n  // Iterate through each row and determine if it should be hidden or shown\n  rows.forEach(row => {\n    let isVisible = true;\n\n    // Check each filter setting against the row's cells\n    for (const [filterId, filterValue] of Object.entries(filterSettings)) {\n      const cell = row.querySelector(`.${filterId}`);\n\n      // only show row if values pass through all filters \n      if (filterValue && cell && cell.textContent.trim() !== filterValue) {\n        isVisible = false;\n        break;\n      }\n    }\n\n    // Show or hide the row based on visibility\n    row.classList.toggle('hidden', !isVisible);\n  });\n}\nconst Filter = {\n  html(filterLabel, filterClass) {\n    // basic html with only 'All' option\n    return `<label for=\"filter-${filterClass}\">Filter by ${filterLabel}:</label>\n                <select id=\"filter-${filterClass}\" class=\"filter-dropdown\">\n                    <option value=\"\">All</option>\n                </select>`;\n  },\n  addOption(filterClass, option) {\n    // Add another option to the dropdown for the filter\n    const filterObj = document.querySelector(`#filter-${filterClass}`);\n    const optionObj = document.createElement('option');\n    optionObj.value = option;\n    optionObj.textContent = option;\n    filterObj.appendChild(optionObj);\n  },\n  add(filterLabel, filterClass) {\n    // create a div to contain the html and insert inside filter-container\n    const filterContainer = document.querySelector('#filter-container');\n    const filterDiv = document.createElement('div');\n    filterDiv.innerHTML = this.html(filterLabel, filterClass);\n    filterContainer.appendChild(filterDiv);\n    // add all relevant options from that column in the table\n    this.addAllOptions(filterClass);\n    // Bind change event to the select element\n    filterDiv.querySelector('.filter-dropdown').addEventListener('change', event => {\n      // Update filter settings\n      filterSettings[filterClass] = event.target.value;\n      // Apply all filters\n      filterData();\n    });\n  },\n  addAllOptions(filterClass) {\n    // get matching column from table\n    const column = document.querySelectorAll(`#main-table td.${filterClass}`);\n\n    // Use a Set to store unique values in the column of interest\n    const uniqueValues = new Set();\n\n    // Iterate over the NodeList to get the unique values\n    column.forEach(td => {\n      // Add each textContent to the Set\n      uniqueValues.add(td.textContent.trim());\n    });\n    // add all values as options to the filter dropdown\n    uniqueValues.forEach(option => {\n      this.addOption(filterClass, option);\n    });\n  },\n  deleteAll() {\n    document.querySelector('#filter-container').innerHTML = '';\n  },\n  updateOptions(filterClass) {\n    const filterObj = document.querySelector(`#filter-${filterClass}`);\n    if (filterObj) {\n      // Clear all existing options except for the default 'All' option\n      filterObj.options.length = 1;\n      // Add new options\n      this.addAllOptions(filterClass);\n    }\n  }\n};\n/* harmony default export */ const filters = (Filter);\n;// CONCATENATED MODULE: ./src/js/models/gold_book.js\n// the Gold Book contains a lookup table for each job code, which maps to the BU, the job title, and the fringe rate\n\nconst GoldBook = {\n  init(sheet) {\n    // Convert sheet to JSON, with no automatic header row parsing\n    const rawData = XLSX.utils.sheet_to_json(sheet, {\n      header: 1,\n      defval: ''\n    });\n\n    // Assuming header is the second row (index 1), and data starts at the third row (index 2)\n    const headers = rawData[1];\n    const data = rawData.slice(2);\n\n    // Store headers and data in localStorage\n    localStorage.setItem('goldbook_headers', JSON.stringify(headers));\n    localStorage.setItem('goldbook_data', JSON.stringify(data));\n  },\n  fetch() {\n    const headers = JSON.parse(localStorage.getItem('goldbook_headers'));\n    const data = JSON.parse(localStorage.getItem('goldbook_data'));\n    return {\n      headers,\n      data\n    };\n  },\n  fetchByCode(job_code) {\n    const {\n      headers,\n      data\n    } = this.fetch();\n\n    // Create a map of column names to their respective indices\n    const headerMap = headers.reduce((acc, header, index) => {\n      acc[header] = index;\n      return acc;\n    }, {});\n    return data.filter(row => row[headerMap['Job Code']] == job_code);\n  },\n  getHeaderIX(header_name) {\n    const {\n      headers\n    } = this.fetch();\n    const headerMap = headers.reduce((acc, header, index) => {\n      acc[header] = index;\n      return acc;\n    }, {});\n    return headerMap[header_name];\n  },\n  lookupByJobCode(job_code, header_name) {\n    const codeData = this.fetchByCode(job_code);\n    if (codeData.length > 0) {\n      return codeData[0][this.getHeaderIX(header_name)];\n    }\n    return null;\n  },\n  getTitle(job_code) {\n    return this.lookupByJobCode(job_code, 'Job Description');\n  },\n  getFringeRate(job_code) {\n    return parseFloat(this.lookupByJobCode(job_code, 'Fringe Rate'));\n  },\n  codeExists(job_code) {\n    return this.fetchByCode(job_code).length > 0;\n  },\n  // method to add GoldBook data as a new sheet to the workbook\n  xlsx() {\n    const {\n      headers,\n      data\n    } = this.fetch();\n\n    // Combine headers and data into one array\n    const combinedData = [headers].concat(data);\n\n    // Create a worksheet\n    return XLSX.utils.aoa_to_sheet(combinedData);\n  }\n};\n/* harmony default export */ const gold_book = (GoldBook);\n;// CONCATENATED MODULE: ./src/js/utils/XLSX_handlers.js\n\n\n\n\n\n\n\n// Helper functions\n\n/**\r\n * Deletes the top rows until a row containing complete data is found.\r\n * @param {Array} data - The raw data extracted from the sheet.\r\n * @returns {Array} - The cleaned data with incomplete top rows removed.\r\n */\nfunction deleteTopRowsUntilFullData(data) {\n  let fullDataRowFound = false;\n  while (!fullDataRowFound && data.length > 0) {\n    const row = data[0]; // Get the top row\n    let hasAllData = true;\n    for (const cell of row) {\n      if (cell == null || cell === '') {\n        hasAllData = false;\n        break;\n      }\n    }\n    if (hasAllData && row.length > 1) {\n      fullDataRowFound = true;\n    } else {\n      // delete the top row if it's not the header row\n      data.shift();\n    }\n  }\n  return data;\n}\n\n/**\r\n * Reads the workbook from the provided array buffer.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer containing the workbook data.\r\n * @returns {Object} - The parsed workbook.\r\n */\nfunction readWorkbook(arrayBuffer) {\n  return XLSX.read(arrayBuffer, {\n    type: 'array'\n  });\n}\n\n/**\r\n * Processes sheets to be split by fund and saves the relevant data.\r\n * @param {string} sheetName - The name of the sheet being processed.\r\n * @param {Object} sheet - The sheet object from the workbook.\r\n */\nfunction processSheet(sheetName, sheet) {\n  // Read in sheets\n  const rawData = XLSX.utils.sheet_to_json(sheet, {\n    header: 1,\n    defval: ''\n  });\n\n  // Clean the data by removing top rows with incomplete data\n  const dataRows = deleteTopRowsUntilFullData(rawData);\n\n  // Get new headers\n  const headers = dataRows[0];\n  const fundIndex = headers.indexOf('Fund');\n  if (fundIndex === -1) {\n    console.error(`No 'Fund' column found in sheet ${sheetName}`);\n    return;\n  }\n\n  // Save a dictionary of data for each fund for each sheet\n  const fundData = {};\n  dataRows.forEach(row => {\n    const fund = row[fundIndex];\n    if (fund && fund !== \"Fund\") {\n      if (!fundData[fund]) {\n        fundData[fund] = [];\n      }\n      const rowData = {};\n      headers.forEach((header, index) => {\n        rowData[removeNewLines(header)] = row[index];\n      });\n      fundData[fund].push(rowData);\n    }\n  });\n\n  // Save fund number and name as we go along\n  fund_lookup_table.update(fundData);\n  console.log('updating fund lookup table');\n  Object.keys(fundData).forEach(fund => {\n    const key = `${SHEETS[sheetName]}_${fund}`;\n    localStorage.setItem(key, JSON.stringify(fundData[fund]));\n  });\n}\n\n/**\r\n * Processes the 'Drop-Down Menus' sheet to extract services data.\r\n * @param {Object} sheet - The sheet object from the workbook.\r\n */\nfunction processDropDownMenusSheet(sheet) {\n  const sheetData = XLSX.utils.sheet_to_json(sheet, {\n    header: 1\n  });\n  const headerRow = sheetData[0];\n  const servicesIndex = headerRow.indexOf('Services');\n\n  // save drop down menu for later excel downloads\n  localStorage.setItem('dropdowns', JSON.stringify(sheetData));\n  if (servicesIndex === -1) {\n    console.error('Header \"Services\" not found');\n  } else {\n    const servicesColumn = sheetData.slice(1).map(row => row[servicesIndex]);\n    const cleanedServicesColumn = servicesColumn.filter(value => value != null);\n    services.save(cleanedServicesColumn);\n  }\n}\n\n/**\r\n * Processes the 'Dept Summary' sheet to get and save the target for the general fund.\r\n * @param {Object} sheet - The sheet object from the workbook.\r\n */\nfunction processDeptSummarySheet(sheet) {\n  if (sheet[TARGET_CELL_ADDRESS]) {\n    const cellValue = sheet[TARGET_CELL_ADDRESS].v; // Access the cell value\n    localStorage.setItem('target', cellValue);\n  } else {\n    console.error(`Cell ${TARGET_CELL_ADDRESS} not found`);\n  }\n\n  // save the sheet to add to future excel downloads\n  const sheetData = XLSX.utils.sheet_to_json(sheet, {\n    header: 1\n  });\n  // TODO: remove excess empty rows\n  const newSheetData = sheetData.map(row => row.slice(0, 3));\n  localStorage.setItem('dept-summary', JSON.stringify(newSheetData));\n}\n\n/**\r\n * Processes the 'FY{FISCAL_YEAR} Gold Book' sheet to initialize the Gold Book.\r\n * @param {Object} sheet - The sheet object from the workbook.\r\n */\nfunction processGoldBookSheet(sheet) {\n  gold_book.init(sheet);\n}\nfunction processNewInitsSheet(sheet) {\n  // Read in sheets\n  const rawData = XLSX.utils.sheet_to_json(sheet, {\n    header: 1,\n    defval: ''\n  });\n\n  // Clean the data by removing top rows with incomplete data\n  const dataRows = deleteTopRowsUntilFullData(rawData);\n\n  // Get new headers\n  const headers = dataRows[0];\n  // final data output\n  let fullData = [];\n\n  // Convert data to JSON form and filter out rows where first value is missing\n  dataRows.slice(1).forEach(row => {\n    // Skip headers row\n    // skip any empty rows at the end\n    if (row[0] != '' && row[0] != '-') {\n      const rowData = {};\n      headers.forEach((header, index) => {\n        rowData[removeNewLines(header)] = row[index];\n      });\n      // only keep supplemental initiatives \n      if (rowData['Baseline or Supplemental'].includes('Supplemental')) {\n        fullData.push(rowData);\n      }\n    }\n  });\n  // save in local storage\n  localStorage.setItem('new-inits', JSON.stringify(fullData));\n}\n\n// Main function to read and process the workbook\nfunction processWorkbook(arrayBuffer) {\n  const workbook = readWorkbook(arrayBuffer);\n  workbook.SheetNames.forEach(sheetName => {\n    // Only convert sheets we need; treat new inits separately because they shouldn't save by fund\n    if (sheetName == Object.keys(SHEETS)[4]) {\n      const sheet = workbook.Sheets[sheetName];\n      processNewInitsSheet(sheet);\n    } else if (Object.keys(SHEETS).includes(sheetName)) {\n      const sheet = workbook.Sheets[sheetName];\n      processSheet(sheetName, sheet);\n    } else if (sheetName === 'Drop-Down Menus') {\n      const sheet = workbook.Sheets[sheetName];\n      processDropDownMenusSheet(sheet);\n    } else if (sheetName === 'Dept Summary') {\n      const sheet = workbook.Sheets[sheetName];\n      processDeptSummarySheet(sheet);\n    } else if (sheetName === `FY${FISCAL_YEAR} Gold Book`) {\n      const sheet = workbook.Sheets[sheetName];\n      processGoldBookSheet(sheet);\n    }\n  });\n  console.log('all excel data saved');\n}\n\n// Utility function to append a sheet to the workbook if data is present\nfunction appendSheetToWorkbook(workbook, data, sheetName) {\n  if (data.length > 0) {\n    const sheet = XLSX.utils.json_to_sheet(data);\n    XLSX.utils.book_append_sheet(workbook, sheet, sheetName);\n  }\n}\nfunction downloadXLSX() {\n  // grab data from baseline object\n  const baseline = new models_baseline();\n  const workbook = XLSX.utils.book_new(); // Create a new workbook\n\n  // Initialize sheet data based on the names of each tab in the Excel doc\n  const sheetData = Object.keys(SHEETS).reduce((acc, key) => {\n    acc[key] = [];\n    return acc;\n  }, {});\n\n  // Aggregate all rows across funds and combine for each tab\n  baseline.funds.forEach(fund => {\n    Object.keys(SHEETS).forEach(sheetName => {\n      if (fund[SHEETS[sheetName]] && fund[SHEETS[sheetName]].table) {\n        sheetData[sheetName].push(...fund[SHEETS[sheetName]].table);\n      }\n    });\n  });\n\n  // Add initiatives data (which isn't stored by fund)\n  sheetData[Object.keys(SHEETS)[4]] = JSON.parse(localStorage.getItem('new-inits'));\n\n  // Create a tab for each table\n  Object.keys(sheetData).forEach(sheetName => {\n    appendSheetToWorkbook(workbook, sheetData[sheetName], sheetName);\n  });\n\n  // Add a tab for the GoldBook\n  XLSX.utils.book_append_sheet(workbook, gold_book.xlsx(), `FY${FISCAL_YEAR} Gold Book`);\n\n  // add a tab for the drop downs and dept summary (just targets)\n  writeJSONtoNewTab('dropdowns', 'Drop-Down Menus', workbook);\n  writeJSONtoNewTab('dept-summary', 'Dept Summary', workbook);\n\n  // Generate a downloadable file\n  const wbout = XLSX.write(workbook, {\n    bookType: 'xlsx',\n    type: 'array'\n  });\n  const blob = new Blob([wbout], {\n    type: 'application/octet-stream'\n  });\n\n  // Create a link and trigger the download\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = \"Filled_Detail_Sheet.xlsx\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\nfunction writeJSONtoNewTab(storage_key, tab_name, workbook) {\n  const data = JSON.parse(localStorage.getItem(storage_key));\n  console.log(data);\n  const worksheet = XLSX.utils.aoa_to_sheet(data);\n  XLSX.utils.book_append_sheet(workbook, worksheet, tab_name);\n}\nfunction excelSerialDateToJSDate(serial) {\n  if (!serial) {\n    return null;\n  }\n  ;\n  // Excel considers 1900-01-01 as day 1, but JavaScript's Date considers\n  // 1970-01-01 as day 0. Therefore, we calculate the number of milliseconds\n  // between 1900-01-01 and 1970-01-01.\n  const excelEpoch = new Date(Date.UTC(1899, 11, 30)); // JavaScript Consider December month as '11'\n\n  // Calculate the JS date by adding serial days to the epoch date\n  const date = new Date(excelEpoch.getTime() + serial * 24 * 60 * 60 * 1000);\n\n  // Set the time part to zero (midnight)\n  date.setUTCHours(0, 0, 0, 0);\n\n  // Return the date part of the ISO string\n  return date.toISOString().split('T')[0];\n}\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/tooltip/tooltip.css\nvar tooltip = __webpack_require__(843);\n;// CONCATENATED MODULE: ./src/js/components/tooltip/tooltip.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar tooltip_options = {};\n\ntooltip_options.styleTagTransform = (styleTagTransform_default());\ntooltip_options.setAttributes = (setAttributesWithoutAttributes_default());\ntooltip_options.insert = insertBySelector_default().bind(null, \"head\");\ntooltip_options.domAPI = (styleDomAPI_default());\ntooltip_options.insertStyleElement = (insertStyleElement_default());\n\nvar tooltip_update = injectStylesIntoStyleTag_default()(tooltip/* default */.A, tooltip_options);\n\n\n\n\n       /* harmony default export */ const tooltip_tooltip = (tooltip/* default */.A && tooltip/* default */.A.locals ? tooltip/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/tooltip/tooltip.js\n\n\n\n\n\n\nfunction hideTooltip() {\n  document.getElementById('tooltip').style.visibility = 'hidden';\n}\nfunction showTooltip() {\n  document.getElementById('tooltip').style.visibility = 'visible';\n}\nfunction editTooltipText(newText) {\n  // edit text to display inside tooltip\n  const tooltip = document.getElementById('tooltip');\n  tooltip.innerHTML = newText;\n}\nfunction showAccountString(row) {\n  const approp = cells.getText(row, 'approp-name');\n  const cc = cells.getText(row, 'cc-name');\n  const obj = cells.getText(row, 'object-name');\n  const fund = cells.getText(row, 'fund-name');\n  var message = `<strong>Fund</strong>: ${fund}<br>\n        <strong>Appropriation</strong>: ${approp}<br>\n        <strong>Cost Center</strong>: ${cc}`;\n  if (obj) {\n    message += `<br><strong>Object</strong>: ${obj}`;\n  }\n  message += `<br> If you believe this account string is incorrect, please leave a comment \n        in the comment column.`;\n  editTooltipText(message);\n}\nfunction showSalaryProjection(row) {\n  const general_increase = cells.getText(row, 'general-increase-rate');\n  const merit_increase = cells.getText(row, 'merit-increase-rate');\n  const current_salary = cells.getValue(row, 'current-salary');\n  const proj_salary = cells.getValue(row, 'avg-salary');\n  if (current_salary) {\n    var message = `The average salary/wage for this position was \n            ${formatCurrency(current_salary)} as of September 20${FISCAL_YEAR - 2}. \n            Given a ${general_increase * 100}% general increase rate and a ${merit_increase * 100}% \n            merit increase, the FY${FISCAL_YEAR} projection for this position's average \n            annual salary/wage is ${formatCurrency(proj_salary)}. This projection takes into \n            account the number of vacant vs. full positions.`;\n  } else {\n    var message = `The average salary/wage for this position was \n            unknown as of September 20${FISCAL_YEAR - 2}, or the position\n            did not exist. The FY${FISCAL_YEAR} projection for this position's \n            average annual salary/wage is ${formatCurrency(proj_salary)}.`;\n  }\n  editTooltipText(message);\n}\nfunction showFinalPersonnelCost(row) {\n  const proj_salary = cells.getValue(row, 'avg-salary');\n  const ftes = cells.getText(row, 'baseline-ftes');\n  const fringe = parseFloat(cells.getText(row, 'fringe'));\n  const avg_benefits = proj_salary * fringe;\n  const message = `The total cost captures ${ftes} position(s) at\n                    an annual salary/wage of ${formatCurrency(proj_salary)}, \n                    plus fringe benefits that cost ${formatCurrency(avg_benefits)} \n                    per position per year, on average.`;\n  editTooltipText(message);\n}\nfunction showFICA(row) {\n  const fica = parseFloat(cells.getText(row, 'fica'));\n  const ficaPercentage = (fica * 100).toFixed(2);\n  const message = `This total is overtime / holiday / shift premium pay, plus FICA (payroll tax), \n                     which is ${ficaPercentage}% for this cost center.`;\n  editTooltipText(message);\n}\nfunction showCPA(row) {\n  const cpa = parseFloat(cells.getText(row, 'cpa'));\n  const description = cells.getText(row, 'cpa-description');\n  const vendor = cells.getText(row, 'vendor');\n  var contract_end = cells.getText(row, 'contract-end');\n  // convert to normal date format from excel \n  contract_end = excelSerialDateToJSDate(contract_end);\n  const remaining = cells.getValue(row, 'remaining');\n  if (cpa) {\n    var message = `<strong>CPA #${cpa}</strong>`;\n  } else {\n    var message = `No CPA`;\n  }\n  if (vendor) {\n    message += `<br><strong>Vendor</strong>: ${vendor}`;\n  }\n  ;\n  if (description) {\n    message += `<br><strong>Description</strong>: ${description}`;\n  }\n  ;\n  if (contract_end) {\n    message += `<br><strong>Contract End Date</strong>: ${contract_end}`;\n  }\n  if (remaining) {\n    message += `<br><strong>Amount Remaining on Contract</strong>: ${formatCurrency(remaining)}`;\n  }\n  editTooltipText(message);\n}\nfunction tooltip_link(element, displayFn) {\n  // add class to show cell with an underline, etc\n  element.classList.add('tooltip-cell');\n\n  // Create and append (detail)\n  const detail = document.createElement('span');\n  detail.classList.add('detail');\n  detail.textContent = '(detail)';\n  element.appendChild(detail);\n\n  // add event listener to show tooltip on mouseover\n  element.addEventListener('click', function (event) {\n    const row = event.target.closest('tr');\n    displayFn(row);\n    showTooltip();\n  });\n  // and hide when mouse moves off\n  element.addEventListener('mouseout', function () {\n    hideTooltip();\n  });\n  // Update tooltip position on mouse move\n  element.addEventListener('mousemove', function (event) {\n    const tooltip = document.getElementById('tooltip');\n    tooltip.style.top = event.clientY + 10 + 'px';\n    tooltip.style.left = event.clientX + 10 + 'px';\n  });\n}\nfunction linkAccountStringCol() {\n  // get all relevant cells\n  document.querySelectorAll('td.account-string').forEach(cell => {\n    tooltip_link(cell, showAccountString);\n  });\n}\nfunction linkSalaryCol() {\n  // get all relevant cells\n  document.querySelectorAll('td.avg-salary').forEach(cell => {\n    tooltip_link(cell, showSalaryProjection);\n  });\n}\nfunction linkTotalPersonnelCostCol() {\n  // get all relevant cells\n  document.querySelectorAll('td.total-baseline').forEach(cell => {\n    tooltip_link(cell, showFinalPersonnelCost);\n  });\n}\nfunction linkTotalOTCol() {\n  // get all relevant cells\n  document.querySelectorAll('td.total').forEach(cell => {\n    tooltip_link(cell, showFICA);\n  });\n}\nfunction linkCPACol() {\n  // get all relevant cells\n  document.querySelectorAll('td.cpa').forEach(cell => {\n    tooltip_link(cell, showCPA);\n  });\n}\nconst Tooltip = {\n  hide: hideTooltip,\n  show: showTooltip,\n  linkAll: () => {\n    linkAccountStringCol();\n    switch (current_page.load()) {\n      case 'personnel':\n        // linkAccountStringCol();\n        linkSalaryCol();\n        linkTotalPersonnelCostCol();\n        break;\n      case 'overtime':\n        linkTotalOTCol();\n        // linkAccountStringCol();\n        break;\n      case 'nonpersonnel':\n        // linkAccountStringCol();\n        linkCPACol();\n        break;\n      // case 'revenue':\n      //     linkAccountStringCol();\n      //     break;\n      // case 'new-inits':\n      //     linkAccountStringCol();\n      //     break;\n      default:\n        break;\n    }\n  },\n  unlink: function () {\n    let details = document.querySelectorAll('.detail');\n    details.forEach(span => {\n      span.remove();\n    });\n  }\n};\n/* harmony default export */ const components_tooltip_tooltip = (Tooltip);\n;// CONCATENATED MODULE: ./src/js/utils/JSON_data_handlers.js\nasync function fetchJSON(jsonFilePath) {\n  return fetch(jsonFilePath).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  });\n}\nfunction convertToJSON(table, colsToRemove = []) {\n  const rows = table.rows;\n  // Extract headers from the first row\n  const headerRow = rows[0].cells;\n  const headers = [];\n  for (let j = 0; j < headerRow.length; j++) {\n    headers.push(headerRow[j].innerText);\n  }\n\n  // initialize data\n  var tableData = [];\n  for (var i = 1; i < rows.length; i++) {\n    const cols = rows[i].cells;\n    const rowData = {};\n    headers.forEach((header, index) => {\n      if (colsToRemove.includes(header)) {\n        return;\n      } else if (cols[index].classList.contains('cost')) {\n        rowData[header] = cols[index].getAttribute('value');\n      } else {\n        rowData[header] = cols[index].innerText;\n      }\n    });\n    tableData.push(rowData);\n  }\n  return JSON.stringify(tableData);\n}\n;// CONCATENATED MODULE: ./src/js/components/table/table.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction adjustTableWidth(width_pct) {\n  const table = document.getElementById('main-table');\n  table.style.width = width_pct;\n}\nfunction showTable() {\n  const tableContainer = document.querySelector('.table-container');\n  tableContainer.innerHTML = Table.html;\n  const table = document.getElementById('main-table');\n  table.style.display = 'table';\n}\nfunction hideTable() {\n  // delete table object from table container\n  const tableContainer = document.querySelector('.table-container');\n  tableContainer.innerHTML = '';\n  subcomponents_buttons.AddRow.hide();\n}\nfunction saveTableData() {\n  // remove the detail text\n  components_tooltip_tooltip.unlink();\n  // get table\n  var table = document.getElementById('main-table');\n  // determine save_as name\n  if (current_fund.number()) {\n    var save_as = `${current_page.load()}_${current_fund.number()}`;\n  } else {\n    var save_as = current_page.load();\n  }\n  localStorage.setItem(save_as, convertToJSON(table, ['Edit']));\n  // update sidebar with new data\n  components_sidebar_sidebar.updateTotals();\n  // relink, depending on page\n  components_tooltip_tooltip.linkAll();\n}\nconst Table = {\n  html: `\n        <table class=\"table table-bordered mt-3 display\" id=\"main-table\">\n            <thead class=\"thead-dark\"></thead>\n            <tbody></tbody>\n        </table>`,\n  Buttons: subcomponents_buttons,\n  Cell: cells,\n  Columns: columns,\n  Header: headers,\n  Rows: rows,\n  Data: data,\n  Filter: filters,\n  // functions\n  adjustWidth: function (width_pct) {\n    adjustTableWidth(width_pct);\n  },\n  clear: hideTable,\n  hide: hideTable,\n  show: showTable,\n  save: saveTableData\n};\n/* harmony default export */ const components_table_table = (Table);\n;// CONCATENATED MODULE: ./src/js/components/accordion/accordion.js\n\n\n\n\n\nfunction redirectForEdit() {\n  const row = document.querySelector(`.active-editing`);\n  const table = row.parentElement;\n  const section = table.closest('.summary-container');\n  // new initiative edits should all redirect to the new-inits page\n  if (section.id == 'supp-accordion') {\n    visitPage('new-inits');\n  } else {\n    // Split the string into parts using '-' as the delimiter; retain fund as 1st numeric segment\n    const fund = table.id.split('-')[1];\n    current_fund.update(fund);\n    const lineItem = row.querySelector('.line-item').textContent;\n    // visit the correct page for editing\n    switch (lineItem) {\n      case 'Personnel Expenditures':\n        visitPage('personnel');\n        break;\n      case 'Non-Personnel Expenditures':\n        visitPage('nonpersonnel');\n        break;\n      case 'Revenues':\n        visitPage('revenue');\n        break;\n      case 'Overtime Expenditures':\n        visitPage('overtime');\n        break;\n      default:\n        console.error('Name of line item in table does not match a page destination.');\n    }\n  }\n}\nconst ExpenseTable = {\n  table_id: account_string => {\n    return `table-${account_string}`;\n  },\n  init(account_string) {\n    // create empty table and put it in the accordion\n    var table = document.createElement('table');\n    table.id = this.table_id(account_string);\n    table.classList.add('accordion-table');\n    var parent = document.querySelector(`#string_${account_string}_content .accordion-body`);\n    parent.appendChild(table);\n  },\n  createNewCell(content, row, className) {\n    const newCell = document.createElement('td');\n    newCell.innerHTML = content;\n    newCell.classList.add(className);\n    row.appendChild(newCell);\n  },\n  addRow(account_string, row_name, number) {\n    var table = document.getElementById(this.table_id(account_string));\n    var new_row = document.createElement('tr');\n    table.appendChild(new_row);\n    // Create a cell for the line item label\n    this.createNewCell(row_name, new_row, 'line-item');\n    // create a cell for the amount\n    this.createNewCell(formatCurrency(number), new_row, 'cost');\n    // create Edit button \n    var button = '';\n    if (row_name != 'Net Expenditures (Revenues)') {\n      button = components_table_table.Buttons.Edit.html;\n    }\n    this.createNewCell(button, new_row);\n  },\n  fillFromFund(fund) {\n    // use just fund as account string to initialize table inside accordion\n    this.init(fund);\n    const fundObject = new models_fund(fund);\n\n    // Add a row for each appropriation in the fund\n    const id = cleanString(fund);\n    fundObject.getAppropriations().forEach(appropObj => {\n      // if the total for the appropriation is > $0, add an accordion for all the CCs\n      if (appropObj.total() != 0) {\n        Item.add(appropObj.accountString(), `#string_${id}_content .accordion-body`);\n        Item.updateHeader(appropObj.name(), appropObj.accountString(), appropObj.total());\n        this.fillFromApprop(appropObj);\n      }\n    });\n  },\n  fillFromApprop(appropObj) {\n    // initialize the table object\n    this.init(appropObj.accountString());\n    // add a collapsible row for each cost center\n    appropObj.getCostCenters().forEach(ccObj => {\n      if (ccObj.getTotal() != 0) {\n        Item.add(ccObj.accountString(), `#string_${appropObj.accountString()}_content .accordion-body`);\n        Item.updateHeader(ccObj.getName(), ccObj.accountString(), ccObj.getTotal());\n        this.fillFromCC(ccObj);\n      }\n    });\n  },\n  fillFromCC(ccObj) {\n    // initialize a table and summarize the line items\n    this.init(ccObj.accountString());\n    this.addRow(ccObj.accountString(), 'Personnel Expenditures', ccObj.getPersonnelCost());\n    this.addRow(ccObj.accountString(), 'Overtime Expenditures', ccObj.getOvertimeCost());\n    this.addRow(ccObj.accountString(), 'Non-Personnel Expenditures', ccObj.getNonPersonnelCost());\n    this.addRow(ccObj.accountString(), 'Revenues', ccObj.getRevenue());\n    this.addRow(ccObj.accountString(), 'Net Expenditures (Revenues)', ccObj.getTotal());\n  },\n  fillFromInit(program) {\n    // Fill out info for each supplemental init\n    this.init(program.id());\n    this.addRow(program.id(), 'Estimated Revenue', program.revenue());\n    this.addRow(program.id(), 'Personnel Expenditures', program.personnel());\n    this.addRow(program.id(), 'Non-Personnel Operating', program.operating());\n    this.addRow(program.id(), 'Non-Personnel Capital', program.capital());\n    this.addRow(program.id(), 'Total Expenditures', program.total());\n  }\n};\nconst Item = {\n  accountString(fund, approp = '', cc = '') {\n    var account_string = cleanString(fund);\n    if (approp) {\n      account_string += approp;\n    }\n    ;\n    if (cc) {\n      account_string += cc;\n    }\n    ;\n    return account_string;\n  },\n  html(account_string) {\n    return `<h2 class=\"accordion-header\" id=\"string_${account_string}_header\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#string_${account_string}_content\" aria-expanded=\"false\" aria-controls=\"string_${account_string}\">\n                        <span class=\"name\"></span>\n                        <span class=\"amount\"></span>\n                    </button>\n                </h2>\n                <div id=\"string_${account_string}_content\" class=\"accordion-collapse collapse\" aria-labelledby=\"string_${account_string}_header\">\n                    <div class=\"accordion-body\"></div>\n                </div>`;\n  },\n  add: function (account_string, accordion_query) {\n    // get accordion and add a new item to it\n    const parent = document.querySelector(accordion_query);\n    const item_element = document.createElement('div');\n    item_element.classList.add('accordion-item');\n    item_element.innerHTML = this.html(account_string);\n    parent.appendChild(item_element);\n  },\n  ExpenseTable: ExpenseTable,\n  updateHeader: function (title, account_string, new_amount) {\n    const header_btn = document.querySelector(`#string_${account_string}_header button`);\n    header_btn.querySelector('span.name').textContent = title;\n    header_btn.querySelector('span.amount').textContent = formatCurrency(new_amount);\n  }\n};\nconst AddInitButton = {\n  init() {\n    const btn = document.querySelector('.btn-add-init');\n    btn.addEventListener('click', function () {\n      visitPage('new-inits');\n    });\n  }\n};\nconst Accordion = {\n  Item: Item,\n  AddInitButton: AddInitButton,\n  hide: function () {\n    document.querySelector('#accordion-div').style.display = 'none';\n    // reset to delete content\n    document.querySelector('#baseline-accordion .summary-accordion').innerHTML = '';\n    document.querySelector('#supp-accordion .summary-accordion').innerHTML = '';\n  },\n  show: function () {\n    document.querySelector('#accordion-div').style.display = 'block';\n  },\n  async createBaseline() {\n    var funds = fund_lookup_table.listFunds();\n    funds.forEach(fund => {\n      Item.add(fund, '#baseline-accordion .summary-accordion');\n      Item.ExpenseTable.fillFromFund(fund);\n      const fundObject = new models_fund(fund);\n      Item.updateHeader(`Fund ${fund_lookup_table.getName(fund)}`, fund, fundObject.getTotal());\n    });\n\n    // color-code GF baseline\n    const GF = new models_fund(1000);\n    // text to color code\n    let topline = document.querySelector('#string_1000_header .amount');\n    if (GF.getTotal() <= models_baseline.target()) {\n      topline.style.color = 'green';\n      topline.style.weight = 4;\n    } else {\n      topline.style.color = 'red';\n    }\n  },\n  createSupp() {\n    const supp = new supplemental();\n    supp.initiatives.forEach(program => {\n      Item.add(program.id(), '#supp-accordion .summary-accordion');\n      Item.ExpenseTable.fillFromInit(program);\n      Item.updateHeader(program.name, program.id(), program.total());\n    });\n  },\n  updateTopLines() {\n    // adjuse baseline\n    // const baseline = new Baseline;\n    const baseline = new models_baseline();\n    const baselineAmount = document.querySelector('#baseline-title .top-line-amount');\n    baselineAmount.textContent = formatCurrency(baseline.total());\n    // adjust supplementals\n    const supp = new supplemental();\n    const suppAmount = document.querySelector('#supp-title .top-line-amount');\n    suppAmount.textContent = formatCurrency(supp.total());\n  },\n  build() {\n    this.createBaseline();\n    this.createSupp();\n    // initialize edit buttons\n    components_table_table.Buttons.Edit.init(redirectForEdit);\n    this.AddInitButton.init();\n    this.updateTopLines();\n  }\n};\n/* harmony default export */ const components_accordion_accordion = (Accordion);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/file_upload/file_upload.css\nvar file_upload = __webpack_require__(39);\n;// CONCATENATED MODULE: ./src/js/components/file_upload/file_upload.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar file_upload_options = {};\n\nfile_upload_options.styleTagTransform = (styleTagTransform_default());\nfile_upload_options.setAttributes = (setAttributesWithoutAttributes_default());\nfile_upload_options.insert = insertBySelector_default().bind(null, \"head\");\nfile_upload_options.domAPI = (styleDomAPI_default());\nfile_upload_options.insertStyleElement = (insertStyleElement_default());\n\nvar file_upload_update = injectStylesIntoStyleTag_default()(file_upload/* default */.A, file_upload_options);\n\n\n\n\n       /* harmony default export */ const file_upload_file_upload = (file_upload/* default */.A && file_upload/* default */.A.locals ? file_upload/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/file_upload/file_upload.js\n// file_upload.js\n\n\n\nconst FileUpload = {\n  init: function () {\n    components_nav_buttons_nav_buttons.Next.disable();\n    const inputObject = document.getElementById('file-input');\n    inputObject.addEventListener('change', function (event) {\n      readXL(event);\n    });\n  },\n  show: function () {\n    const inputObject = document.getElementById('file-input');\n    inputObject.style.display = '';\n  },\n  hide: function () {\n    const inputObject = document.getElementById('file-input');\n    inputObject.style.display = 'none';\n  }\n};\nfunction readXL(event) {\n  const file = event.target.files[0]; // read uploaded file\n  const spinner = document.getElementById('upload-spinner'); // get the spinner element\n\n  if (file) {\n    // Show the spinner\n    spinner.style.display = 'block';\n\n    // read in new data\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const arrayBuffer = e.target.result;\n      try {\n        processWorkbook(arrayBuffer);\n\n        // Hide the spinner once processing is done\n        spinner.style.display = 'none';\n        components_nav_buttons_nav_buttons.Next.enable(); // Enable the next button after processing\n      } catch (error) {\n        console.error('Error processing workbook:', error);\n\n        // Hide the spinner in case of an error\n        spinner.style.display = 'none';\n        components_nav_buttons_nav_buttons.Next.enable(); // Ensure the button is re-enabled in case of an error\n      }\n    };\n    reader.onerror = function (err) {\n      console.error('Error reading file:', err);\n\n      // Hide the spinner in case of an error\n      spinner.style.display = 'none';\n      components_nav_buttons_nav_buttons.Next.enable(); // Ensure the button is re-enabled in case of an error\n    };\n    reader.readAsArrayBuffer(file); // Read the file as an ArrayBuffer\n  }\n}\n/* harmony default export */ const components_file_upload_file_upload = (FileUpload);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/modal/modal.css\nvar modal = __webpack_require__(95);\n;// CONCATENATED MODULE: ./src/js/components/modal/modal.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar modal_options = {};\n\nmodal_options.styleTagTransform = (styleTagTransform_default());\nmodal_options.setAttributes = (setAttributesWithoutAttributes_default());\nmodal_options.insert = insertBySelector_default().bind(null, \"head\");\nmodal_options.domAPI = (styleDomAPI_default());\nmodal_options.insertStyleElement = (insertStyleElement_default());\n\nvar modal_update = injectStylesIntoStyleTag_default()(modal/* default */.A, modal_options);\n\n\n\n\n       /* harmony default export */ const modal_modal = (modal/* default */.A && modal/* default */.A.locals ? modal/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/modal/modal.js\n\nfunction clearModal() {\n  updateModalTitle('');\n  document.getElementById('modal-body').innerHTML = '';\n}\nfunction hideModal() {\n  $('#main-modal').modal('hide');\n}\nfunction showModal() {\n  $('#main-modal').modal('show');\n}\nfunction showModalHandler() {\n  showModal('main-modal');\n}\nconst Submit = {\n  handler: null,\n  init: function (onSubmit) {\n    const modal = document.getElementById('main-modal');\n\n    // Deinitialize first to avoid multiple bindings\n    this.deinit();\n    this.handler = function (event) {\n      event.preventDefault();\n      onSubmit(event);\n    };\n\n    // Adding the handler as the event listener\n    modal.addEventListener('submit', this.handler);\n\n    // add event listener to enable close x\n    const x = modal.querySelector('#modal-close-x');\n    x.addEventListener('click', hideModal);\n  },\n  deinit: function () {\n    const modal = document.getElementById('main-modal');\n    if (this.handler !== null) {\n      // Removing the event listener and clear the handler\n      modal.removeEventListener('submit', this.handler);\n      this.handler = null;\n    }\n\n    // remove event listener to enable close x\n    const x = modal.querySelector('#modal-close-x');\n    x.removeEventListener('click', hideModal);\n  }\n};\nconst Link = {\n  add: function (button_id) {\n    document.getElementById(button_id).addEventListener('click', showModalHandler);\n  },\n  remove: function (button_id) {\n    document.getElementById(button_id).removeEventListener('click', showModalHandler);\n  }\n};\nfunction updateModalTitle(title) {\n  document.getElementById('modal-title').textContent = title;\n}\nconst Title = {\n  update: function (title) {\n    updateModalTitle(title);\n  }\n};\nconst Modal = {\n  hide: hideModal,\n  show: showModal,\n  clear: clearModal,\n  Title: Title,\n  Link: Link,\n  Submit: Submit\n};\n/* harmony default export */ const components_modal_modal = (Modal);\n;// CONCATENATED MODULE: ./src/js/components/body/body.js\n\n\n\n\n\n\n\n\n\n\nfunction resetPage() {\n  // hide everything in the body\n  components_welcome_welcome.hide();\n  components_modal_modal.clear();\n  components_modal_modal.hide();\n  components_nav_buttons_nav_buttons.hide();\n  js_components_prompt_prompt.hide();\n  components_table_table.hide();\n  components_sidebar_sidebar.hide();\n  components_accordion_accordion.hide();\n  components_file_upload_file_upload.hide();\n  components_tooltip_tooltip.hide();\n\n  // reset filter dropdowns\n  components_table_table.Filter.deleteAll();\n  js_components_prompt_prompt.Buttons.reset();\n  // disable submit button\n  components_modal_modal.Submit.deinit();\n}\nconst Body = {\n  reset: resetPage\n};\n/* harmony default export */ const components_body_body = (Body);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/header/header.css\nvar header = __webpack_require__(107);\n;// CONCATENATED MODULE: ./src/js/components/header/header.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar header_options = {};\n\nheader_options.styleTagTransform = (styleTagTransform_default());\nheader_options.setAttributes = (setAttributesWithoutAttributes_default());\nheader_options.insert = insertBySelector_default().bind(null, \"head\");\nheader_options.domAPI = (styleDomAPI_default());\nheader_options.insertStyleElement = (insertStyleElement_default());\n\nvar header_update = injectStylesIntoStyleTag_default()(header/* default */.A, header_options);\n\n\n\n\n       /* harmony default export */ const header_header = (header/* default */.A && header/* default */.A.locals ? header/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/header/header.js\n\n\n\nconst header_Title = {\n  update: function (title) {\n    document.getElementById(\"title\").textContent = title;\n  },\n  default() {\n    this.update(`FY${FISCAL_YEAR} Budget Request`);\n  }\n};\nconst Subtitle = {\n  update: function (subtitle) {\n    // get current fund\n    var fund = current_fund.name();\n    if (fund) {\n      var subtitle = `${subtitle}: ${fund}`;\n    }\n    document.getElementById(\"subtitle\").textContent = subtitle;\n  }\n};\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/js/components/form/form.css\nvar form_form = __webpack_require__(109);\n;// CONCATENATED MODULE: ./src/js/components/form/form.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar form_options = {};\n\nform_options.styleTagTransform = (styleTagTransform_default());\nform_options.setAttributes = (setAttributesWithoutAttributes_default());\nform_options.insert = insertBySelector_default().bind(null, \"head\");\nform_options.domAPI = (styleDomAPI_default());\nform_options.insertStyleElement = (insertStyleElement_default());\n\nvar form_update = injectStylesIntoStyleTag_default()(form_form/* default */.A, form_options);\n\n\n\n\n       /* harmony default export */ const components_form_form = (form_form/* default */.A && form_form/* default */.A.locals ? form_form/* default */.A.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/js/components/form/subcomponents/fields.js\n// function to add questions to forms\n\n\n\n// inputType is for validation ('number' or 'text', etc)\nfunction appendFormElement(label, inputEl, inputId, required) {\n  // change if we want forms elsewhere\n  const form = document.getElementById('new-form');\n\n  // create outer wrapper for element\n  const wrapper = document.createElement('div');\n\n  // label question\n  const labelEl = document.createElement('label');\n  labelEl.textContent = label;\n\n  // mark as required if applicable\n  inputEl.required = required;\n\n  // If an ID is provided, set it on the element\n  if (inputId) {\n    //inputEl.id = `input-${inputId}`;\n    inputEl.id = inputId;\n  }\n\n  // create validation text/ a place to display errors\n  const validationText = document.createElement('p');\n  validationText.id = `${inputId}-validation`;\n  validationText.classList.add('error-message');\n  validationText.style.color = 'red';\n\n  // add elements\n  wrapper.appendChild(labelEl);\n  wrapper.appendChild(inputEl);\n  wrapper.appendChild(validationText);\n  form.appendChild(wrapper);\n}\nconst NewField = {\n  shortText: function (label, inputId, required = false) {\n    const inputEl = document.createElement('input');\n    inputEl.type = 'text';\n    appendFormElement(label, inputEl, inputId, required);\n  },\n  longText: function (label, inputId, required = false) {\n    const inputEl = document.createElement('textarea');\n    appendFormElement(label, inputEl, inputId, required);\n  },\n  numericInput: function (label, inputId, required = false) {\n    const inputEl = document.createElement('input');\n    inputEl.type = 'number';\n    appendFormElement(label, inputEl, inputId, required);\n  },\n  dropdown: function (label, inputId, optionArray, required = false) {\n    var inputEl = subcomponents_dropdown.create(optionArray);\n    appendFormElement(label, inputEl, inputId, required);\n  }\n};\n/* harmony default export */ const fields = (NewField);\n;// CONCATENATED MODULE: ./src/js/components/form/subcomponents/submit.js\nfunction addSubmitButtonToForm(form_id) {\n  // Find the form by its ID\n  const form = document.getElementById(form_id);\n\n  // Create the container `div` for the button\n  const buttonContainer = document.createElement('div');\n  buttonContainer.id = 'submit-btn-container';\n\n  // Create the submit input\n  const submitInput = document.createElement('input');\n  submitInput.className = 'btn btn-submit'; // Use appropriate class for your design\n  submitInput.type = 'submit';\n  submitInput.value = 'Submit';\n\n  // Append the submit input to the container\n  buttonContainer.appendChild(submitInput);\n\n  // Append the container to the form\n  form.appendChild(buttonContainer);\n}\nconst SubmitButton = {\n  add: function () {\n    addSubmitButtonToForm('new-form');\n  }\n};\n/* harmony default export */ const subcomponents_submit = (SubmitButton);\n;// CONCATENATED MODULE: ./src/js/components/form/form.js\n\n\n\n\nfunction fetchAllResponses(event) {\n  // Assuming `event.target` is the form itself\n  const form = event.target;\n\n  // Initialize an empty array to hold the input values\n  let formData = {};\n\n  // Loop through each form element\n  for (let i = 0; i < form.elements.length; i++) {\n    const element = form.elements[i];\n\n    // Exclude elements that aren't inputs, textareas, or select\n    if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA' || element.tagName === 'SELECT') {\n      // Exclude input types that are not considered for submission (such as `submit`)\n      if (element.type !== 'submit' && element.type !== 'button') {\n        formData[element.id] = element.value;\n      }\n    }\n  }\n  form.reset();\n  return formData;\n}\nfunction addForm(element_id = 'modal-body', form_id = 'new-form') {\n  const target_elem = document.getElementById(element_id);\n\n  // create form\n  const form = document.createElement('form');\n  form.setAttribute('id', form_id);\n\n  // Append the form to the modal body\n  target_elem.appendChild(form);\n}\nconst Form = {\n  new: function (parent_elem_id) {\n    addForm(parent_elem_id, 'new-form');\n  },\n  fetchAllResponses: function (event) {\n    return fetchAllResponses(event);\n  },\n  NewField: fields,\n  Dropdown: subcomponents_dropdown,\n  SubmitButton: subcomponents_submit\n};\n/* harmony default export */ const js_components_form_form = (Form);\n;// CONCATENATED MODULE: ./src/js/views/view_class.js\n\n\n\n\n\n\n\n\n\nclass View {\n  constructor() {\n    // page state in local storage\n    this.page_state = '';\n\n    // whether to display\n    this.navButtons = true;\n    this.sidebar = true;\n\n    // text to show in the prompt area\n    this.prompt = null;\n\n    // subtitle text\n    this.subtitle = '';\n\n    // table object of class ViewTable or null\n    this.table = null;\n  }\n  visit() {\n    // update page state\n    current_page.update(this.page_state);\n\n    // start with a blank page\n    components_body_body.reset();\n\n    // add default title\n    header_Title.default();\n\n    // default to showing navbuttons\n    if (this.navButtons) {\n      components_nav_buttons_nav_buttons.show();\n    }\n    ;\n\n    // default to showing sidebar\n    if (this.sidebar) {\n      components_sidebar_sidebar.show();\n    }\n    ;\n\n    // initialize prompt text and buttons\n    if (this.prompt) {\n      js_components_prompt_prompt.Text.update(this.prompt);\n    }\n    ;\n\n    // initialize table\n    if (this.table) {\n      this.table.build();\n    }\n\n    // show page subtitle\n    if (this.subtitle) {\n      Subtitle.update(this.subtitle);\n    }\n    ;\n  }\n  cleanup() {\n    return;\n  }\n}\nclass ViewTable {\n  constructor() {\n    // Ensure methods retain the correct `this` context\n    this.submitNewRow = this.submitNewRow.bind(this);\n    this.columns = [{\n      title: 'Account String',\n      className: 'account-string'\n    }, {\n      title: 'Appropriation Name',\n      className: 'approp-name',\n      hide: true\n    }, {\n      title: 'Appropriation',\n      className: 'approp',\n      hide: true\n    }, {\n      title: 'Cost Center Name',\n      className: 'cc-name',\n      hide: true\n    }, {\n      title: 'Cost Center',\n      className: 'cc',\n      hide: true\n    }, {\n      title: 'Fund Name',\n      className: 'fund-name',\n      hide: true\n    }, {\n      title: 'Fund',\n      className: 'fund',\n      hide: true\n    }, {\n      title: 'Edit',\n      className: 'edit'\n    }];\n\n    // whether to add an edit column\n    this.addEdit = true;\n\n    // message to show if there's no saved data\n    this.noDataMessage = null;\n\n    // text to show for new row button\n    this.addButtonText = null;\n\n    // whether to show as a datatable\n    this.dataTable = true;\n  }\n  async refreshData() {\n    // check for data\n    await components_table_table.Data.load();\n\n    // create a datatable object\n    if (this.dataTable) {\n      this.initDataTable();\n    }\n\n    // add an edit column if needed\n    if (this.addEdit) {\n      components_table_table.Columns.addAtEnd(components_table_table.Buttons.edit_confirm_btns, 'Edit');\n      // activate edit buttons\n      components_table_table.Buttons.Edit.init(this.actionOnEdit, this.updateTable);\n    }\n\n    // assign the correct classes based on the table columns\n    components_table_table.Columns.assignClasses(this.columns);\n\n    // Apply any update function to make sure sidebar is up to date\n    this.updateTable();\n    // add any newly created cc or approp to the filters\n    this.updateFilters();\n  }\n  async build() {\n    // build table from local storage and initialize edit buttons\n\n    // add the add new row button if needed\n    if (this.addButtonText) {\n      this.setUpForm();\n    }\n\n    // check for data\n    if (await components_table_table.Data.load()) {\n      // if there's data, update the table and add filters  \n      this.addFilters();\n      await this.refreshData();\n    } else {\n      // show a message if there's no saved table data for the selected fund\n      if (this.noDataMessage) {\n        js_components_prompt_prompt.Text.update(this.noDataMessage);\n      }\n    }\n  }\n  addFilters() {\n    // Add all relevant filters to table\n    if (this.columns.some(column => column.className === 'approp-name')) {\n      components_table_table.Filter.add('Appropriation', 'approp-name');\n    }\n    if (this.columns.some(column => column.className === 'cc-name')) {\n      components_table_table.Filter.add('Cost Center', 'cc-name');\n    }\n    if (this.columns.some(column => column.className === 'object-name')) {\n      components_table_table.Filter.add('Object', 'object-name');\n    }\n    ;\n    if (this.columns.some(column => column.className === 'object-category')) {\n      components_table_table.Filter.add('Object Category', 'object-category');\n    }\n  }\n  updateFilters() {\n    // update filters with any new values\n    if (this.columns.some(column => column.className === 'approp-name')) {\n      components_table_table.Filter.updateOptions('Appropriation', 'approp-name');\n    }\n    if (this.columns.some(column => column.className === 'cc-name')) {\n      components_table_table.Filter.updateOptions('Cost Center', 'cc-name');\n    }\n    if (this.columns.some(column => column.className === 'object-name')) {\n      components_table_table.Filter.updateOptions('object-name');\n    }\n    ;\n    if (this.columns.some(column => column.className === 'object-category')) {\n      components_table_table.Filter.updateOptions('object-category');\n    }\n  }\n  initDataTable() {\n    components_table_table.adjustWidth('100%');\n    // Initialize Datatables\n    if (!$.fn.dataTable.isDataTable('#main-table')) {\n      $('#main-table').DataTable({\n        paging: false,\n        // Disable pagination\n        info: false,\n        // Disable table information display\n        searching: false // Disable the search bar\n      });\n    }\n    ;\n  }\n\n  // placeholder for action on row edit click\n  actionOnEdit() {\n    return;\n  }\n\n  // update function for the sidebar; default to just saving the table\n  updateTable() {\n    components_table_table.save();\n  }\n\n  // extra questions of the form to add a new row\n  addCustomQuestions() {\n    return;\n  }\n  addValidationListener(inputId, fieldLabel, validationId, length) {\n    const inputElement = document.getElementById(inputId);\n    inputElement.addEventListener('change', function () {\n      if (inputElement.value === 'Add new') {\n        // Add a new field after the selected element\n        js_components_form_form.NewField.shortText(`Type new ${fieldLabel}:`, inputId.slice(0, -5), true);\n        let newInputElement = document.getElementById(inputId.slice(0, -5)); // Remove '-name' suffix\n        inputElement.parentElement.insertAdjacentElement('afterend', newInputElement.parentElement);\n\n        // Add an event listener for validation on the new input field\n        newInputElement.addEventListener('blur', function () {\n          let validationText = document.getElementById(validationId);\n          validationText.textContent = '';\n          if (newInputElement.value.length !== length) {\n            validationText.textContent = `${fieldLabel} codes must be exactly ${length} numbers.`;\n          } else if (isNaN(Number(newInputElement.value))) {\n            validationText.textContent = `${fieldLabel} codes must be numeric.`;\n          }\n        });\n      } else {\n        // Remove the new input field if 'Add new' is not selected\n        let newInputElement = document.getElementById(inputId.slice(0, -5));\n        if (newInputElement) {\n          newInputElement.parentElement.innerHTML = '';\n        }\n      }\n    });\n  }\n\n  // Modified addModalValidation method\n  addModalValidation() {\n    this.addValidationListener('approp-name', 'Appropriation', 'approp-validation', 5);\n    this.addValidationListener('cc-name', 'Cost Center', 'cc-validation', 6);\n  }\n  setUpForm() {\n    // show add button\n    components_table_table.Buttons.AddRow.show();\n    components_table_table.Buttons.AddRow.updateText(this.addButtonText);\n\n    // set up modal for form when add button is pressed\n    components_modal_modal.clear();\n    components_modal_modal.Link.add('add-btn');\n    components_modal_modal.Title.update(this.addButtonText);\n\n    // create form\n    js_components_form_form.new('modal-body');\n\n    // add custom questions\n    this.addCustomQuestions();\n    // any validation or special functions\n    this.addModalValidation();\n    // add submit button\n    js_components_form_form.SubmitButton.add();\n\n    // Initialize form submission to table data\n    components_modal_modal.Submit.init(this.submitNewRow);\n  }\n  editColumns(responses) {\n    // if a new appropriation was entered, fix it\n    if (responses['approp']) {\n      responses['approp-name'] = `${responses['approp']} - New`;\n    }\n    ;\n    // same for cost center\n    if (responses['cc']) {\n      responses['cc-name'] = `${responses['cc']} - New`;\n    }\n    ;\n\n    // get numbers from account string names\n    if (responses['fund-name']) {\n      responses['fund'] = account_string.getNumber(responses['fund-name']);\n    }\n    ;\n    if (responses['approp-name']) {\n      responses['approp'] = account_string.getNumber(responses['approp-name']);\n    }\n    ;\n    if (responses['cc-name']) {\n      responses['cc'] = account_string.getNumber(responses['cc-name']);\n    }\n    ;\n    if (responses['object-name']) {\n      responses['object'] = account_string.getNumber(responses['object-name']);\n    }\n    ;\n    responses['account-string'] = account_string.build(responses['approp-name'], responses['cc-name'], responses['object-name'], responses['fund']);\n    return responses;\n  }\n  submitNewRow(event) {\n    // get answers from form, hide form, show answers in table\n    var responses = js_components_form_form.fetchAllResponses(event);\n\n    // edit inputs from modal\n    responses = this.editColumns(responses);\n\n    // make sure it's not an empty response\n    if (Object.values(responses)[0] != '') {\n      // change page view\n      components_modal_modal.hide();\n\n      // add data to table\n      components_table_table.Rows.add(responses, this.columns);\n      components_table_table.save();\n\n      // rebuild table\n      this.refreshData();\n    }\n  }\n}\n;// CONCATENATED MODULE: ./src/js/views/00_welcome.js\n\n\n\n\nclass WelcomeView extends View {\n  constructor() {\n    super();\n    this.page_state = 'welcome';\n    this.subtitle = 'Welcome';\n    this.sidebar = false;\n    this.navButtons = false;\n    this.prompt = `This tool will help you prepare your budget request submission for fiscal year \n            20${FISCAL_YEAR}. Start by uploading the detail sheet sent to you by your budget analyst. This\n            tool will use the data in that sheet to pre-fill your submission with last year's request.\n            <br><br>\n            Then, you will be guided through each fund to make any adjustments from last year's request. \n            As you \n            make these adjustments, you will see a sidebar tracking your total expenditures by fund and your target\n            baseline for the general fund. \n            <br><br>\n            Once you get through all funds and set your request at or below the \n            target, you will be able to download a filled version of the Excel detail sheet. Downloading \n            this file is the only permanent way to save your progress.`;\n  }\n  visit() {\n    super.visit();\n\n    // show welcome section\n    components_welcome_welcome.show();\n\n    // initialize links in buttons\n    document.getElementById('step-upload').addEventListener('click', () => visitPage('upload'));\n    // document.getElementById('step-initiatives').addEventListener('click', () => visitPage('new-inits'));\n    // document.getElementById('step-revenue').addEventListener('click', () => visitPage('baseline-landing'));\n    // document.getElementById('step-finish').addEventListener('click', () => visitPage('summary'));\n  }\n}\n/* harmony default export */ const _00_welcome = (WelcomeView);\n;// CONCATENATED MODULE: ./src/js/views/01_upload.js\n\n\nclass UploadView extends View {\n  constructor() {\n    super();\n    this.page_state = 'upload';\n    this.prompt = `Upload the baseline detail sheet given by your budget analyst.`;\n    this.subtitle = 'Excel Upload';\n    this.sidebar = false;\n  }\n  visit() {\n    super.visit();\n    components_file_upload_file_upload.show();\n    components_file_upload_file_upload.init();\n  }\n}\n/* harmony default export */ const _01_upload = (UploadView);\n;// CONCATENATED MODULE: ./src/js/views/02_baseline_landing.js\n\n\n\n\nclass FundView extends View {\n  constructor() {\n    super();\n    this.page_state = 'baseline-landing';\n    this.prompt = `We will now ask you a series of questions about your BASELINE budget request.\n            At the end, we will ask you about any new initiatives (ie. supplemental requests).\n            Select one of your funds then click continue.`;\n    this.subtitle = 'Baseline Budget Request';\n    this.table = new FundTable();\n    this.sidebar = false;\n    this.dataTable = false;\n  }\n  visit() {\n    // remove fund selection\n    localStorage.setItem(\"fund\", '');\n    super.visit();\n  }\n}\nclass FundTable extends ViewTable {\n  constructor() {\n    super();\n\n    // add additional revenue columns to the table\n    this.columns = [{\n      title: 'Fund',\n      className: 'fund-name'\n    }];\n    this.noDataMessage = 'No funds found.';\n    this.addEdit = false;\n  }\n  build() {\n    // load in fund data\n    components_table_table.show();\n    components_table_table.Data.loadFunds();\n    components_table_table.Columns.assignClasses(this.columns);\n    components_table_table.adjustWidth('30%');\n\n    // disable next button until a fund is selected\n    components_nav_buttons_nav_buttons.Next.disable();\n    allowRowSelection();\n  }\n}\nfunction allowRowSelection() {\n  var tableRows = document.querySelectorAll(\"tbody tr\");\n\n  // enable highlight on hover and on select\n  tableRows.forEach(function (row) {\n    row.addEventListener('mouseover', function () {\n      this.classList.add('hover-effect');\n    });\n    row.addEventListener('mouseout', function () {\n      this.classList.remove('hover-effect');\n    });\n    row.addEventListener('click', function () {\n      selectFund(tableRows, this);\n    });\n  });\n}\nfunction selectFund(tableRows, selected_row) {\n  // remove selected class from any other rows\n  tableRows.forEach(function (tableRow) {\n    tableRow.classList = '';\n  });\n\n  // add selected class to clicked row\n  selected_row.classList.add('selected');\n\n  // get fund and save selected fund\n  var fund = selected_row.querySelector('.fund-name').textContent;\n  var fundNumber = parseInt(fund);\n  current_fund.update(fundNumber);\n\n  // enable next step\n  components_nav_buttons_nav_buttons.Next.enable();\n}\n/* harmony default export */ const _02_baseline_landing = (FundView);\n;// CONCATENATED MODULE: ./src/js/views/03_revenue.js\n\n\nclass RevenueView extends View {\n  constructor(fiscal_year) {\n    super();\n    this.page_state = 'revenue';\n    this.prompt = `Review and edit revenue line items. If you change the estimate or \n            notice an error in an account string, please note it in the notes column. Click edit \n            to change values in a row.`;\n    this.subtitle = 'Revenues';\n    this.table = new RevenueTable(fiscal_year);\n  }\n}\nclass RevenueTable extends ViewTable {\n  constructor(fiscal_year) {\n    super();\n\n    // add additional revenue columns to the table\n    this.columns = this.columns.concat([{\n      title: 'Recurring or One-Time',\n      className: 'recurring'\n    }, {\n      title: 'Object Category',\n      className: 'object-category'\n    }, {\n      title: `FY${fiscal_year} Departmental Estimate Total`,\n      className: 'request',\n      isCost: true\n    }, {\n      title: 'Departmental Estimate Notes',\n      className: 'notes'\n    },\n    // hidden\n    {\n      title: 'Object Name',\n      className: 'object-name',\n      hide: true\n    }, {\n      title: 'Object',\n      className: 'object',\n      hide: true\n    }]);\n    this.noDataMessage = 'No revenues for this fund.';\n  }\n\n  // action on row edit click: make cells editable\n  actionOnEdit() {\n    // only allow edits in the notes box\n    components_table_table.Cell.createTextbox('notes', false, 'textarea');\n  }\n}\n/* harmony default export */ const _03_revenue = (RevenueView);\n;// CONCATENATED MODULE: ./src/js/views/04_personnel.js\n\n\n\n\n\n\n\nclass PersonnelView extends View {\n  constructor(fiscal_year) {\n    super();\n    this.page_state = 'personnel';\n    this.prompt = `\n            This table displays the number of FTEs in each job code for in your department's \n            current (amended) FY25 budget. To make edits to the number of positions, click the\n            \"Edit\" button on the row you would like to edit. The \"Total Cost\" column and the \n            summary sidebar will also update to reflect any edits.`;\n    this.subtitle = 'Personnel';\n    this.table = new PersonnelTable(fiscal_year);\n  }\n}\nclass PersonnelTable extends ViewTable {\n  constructor(fiscal_year) {\n    super();\n    this.fiscal_year = fiscal_year;\n    // add additional personnel columns to the table\n    this.columns = this.columns.concat([{\n      title: 'Job Title',\n      className: 'job-name'\n    }, {\n      title: 'Job Code',\n      className: 'job-code'\n    }, {\n      title: 'Employee Type',\n      className: 'employee-type'\n    }, {\n      title: 'Service',\n      className: 'service'\n    }, {\n      title: `FY${this.fiscal_year} Requested FTE`,\n      className: 'baseline-ftes'\n    }, {\n      title: `FY${this.fiscal_year} Projected Average Salary/Wage`,\n      className: 'avg-salary',\n      isCost: true\n    }, {\n      title: 'Total Sal/Wag & Ben Request',\n      className: 'total-baseline',\n      isCost: true\n    }, {\n      title: 'Departmental Request Notes',\n      className: 'notes'\n    },\n    // hidden columns\n    {\n      title: 'Fringe Benefits Rate',\n      className: 'fringe',\n      hide: true\n    }, {\n      title: 'General Increase Rate',\n      className: 'general-increase-rate',\n      hide: true\n    }, {\n      title: 'Step/Merit Increase Rate',\n      className: 'merit-increase-rate',\n      hide: true\n    }, {\n      title: `Average Salary/Wage as of 9/1/20${this.fiscal_year - 2}`,\n      className: 'current-salary',\n      isCost: true,\n      hide: true\n    }]);\n    this.noDataMessage = 'No personnel expenditures for this fund.';\n    this.addButtonText = 'Add new job';\n  }\n\n  // action on row edit click: make cells editable\n  actionOnEdit() {\n    components_table_table.Cell.createTextbox('baseline-ftes');\n    components_table_table.Cell.createServiceDropdown(services.list());\n    components_table_table.Cell.createTextbox('notes', false, 'textarea');\n  }\n  updateTable() {\n    // calculate for each row\n    let rows = document.getElementsByTagName('tr');\n    for (let i = 1; i < rows.length; i++) {\n      // fetch values for calculations\n      let avg_salary = components_table_table.Cell.getValue(rows[i], 'avg-salary');\n      let fringe = parseFloat(components_table_table.Cell.getText(rows[i], 'fringe'));\n      let baseline_ftes = components_table_table.Cell.getText(rows[i], 'baseline-ftes');\n\n      // calcuate #FTEs x average salary + COLA adjustments + merit adjustments + fringe\n      let total_baseline_cost = avg_salary * baseline_ftes * (1 + fringe);\n\n      // update total column\n      components_table_table.Cell.updateValue(rows[i], 'total-baseline', total_baseline_cost);\n    }\n\n    // Save the table after all updates are done\n    components_table_table.save();\n  }\n  addCustomQuestions() {\n    // form questions to add a new job\n    js_components_form_form.NewField.shortText('Job Code:', 'job-code', true);\n    js_components_form_form.NewField.shortText('Job Title:', 'job-name', true);\n    js_components_form_form.NewField.dropdown('Employee Type:', 'employee-type', EMPLOYEE_TYPES, true), js_components_form_form.NewField.dropdown('Appropriation:', 'approp-name', fund_lookup_table.getApprops('Add new'), true);\n    js_components_form_form.NewField.dropdown('Cost Center:', 'cc-name', fund_lookup_table.getCostCenters('Add new'), true);\n    js_components_form_form.NewField.dropdown('Service', 'service', services.list(), true);\n    js_components_form_form.NewField.shortText('Number of FTEs requested:', 'baseline-ftes', true);\n    js_components_form_form.NewField.shortText(`Projected average salary IN FISCAL YEAR ${this.fiscal_year}:`, 'avg-salary', true);\n    //Form.NewField.shortText(`Expected fringe rate (as a percentage)`, 'fringe', true);\n  }\n  addModalValidation() {\n    super.addModalValidation();\n\n    // lock the job description \n    const jobDescription = document.getElementById('job-name');\n    jobDescription.readOnly = true;\n    // give a message if attempt to edit\n    const nameValidationText = document.getElementById('job-name-validation');\n    jobDescription.addEventListener('click', function () {\n      nameValidationText.textContent = 'This field is not editable and will auto-fill from the job code above.';\n    });\n    // hide message on blur\n    jobDescription.addEventListener('blur', function () {\n      nameValidationText.textContent = '';\n    });\n\n    // confirm that entered job code is in the gold book\n    const jobCodeInput = document.getElementById('job-code');\n    jobCodeInput.addEventListener('blur', function () {\n      // get entered job code\n      const jobCode = jobCodeInput.value;\n      // get validation text element\n      const validationText = document.getElementById('job-code-validation');\n      if (!gold_book.codeExists(jobCode)) {\n        // if the job code doesn't exist, show an error message\n        validationText.textContent = 'This job code does not exist in the current Gold Book. Please enter another code.';\n        // and clear any previous entry in the job title \n        jobDescription.value = '';\n      } else {\n        // if it does exist, change the job title accordingly\n        jobDescription.value = gold_book.getTitle(jobCode);\n        // and clear any error messages\n        validationText.textContent = '';\n      }\n    });\n  }\n  editColumns(responses) {\n    responses = super.editColumns(responses);\n    // edit inputs from modal\n    responses['avg-salary'] = unformatCurrency(responses['avg-salary']);\n    // use gold book to look up info based on job code\n    responses['job-name'] = gold_book.getTitle(responses['job-code']);\n    responses['fringe'] = gold_book.getFringeRate(responses['job-code']);\n    return responses;\n  }\n}\n/* harmony default export */ const _04_personnel = (PersonnelView);\n;// CONCATENATED MODULE: ./src/js/views/05_overtime.js\n\n\n\n\n\n\nclass OvertimeView extends View {\n  constructor(fiscal_year) {\n    super();\n    this.page_state = 'overtime';\n    this.prompt = `\n            Please see your baseline overtime / holiday pay / shift premiums in the table below.\n            Make any edits and continue.`;\n    this.subtitle = 'Overtime Estimates';\n    this.table = new OvertimeTable(fiscal_year);\n  }\n}\nclass OvertimeTable extends ViewTable {\n  constructor(fiscal_year) {\n    super();\n\n    // add additional OT columns to the table\n    this.columns = this.columns.concat([{\n      title: 'Service',\n      className: 'service'\n    }, {\n      title: 'Recurring or One-Time',\n      className: 'recurring'\n    }, {\n      title: 'Departmental Request OT/SP/Hol',\n      className: 'OT-pay',\n      isCost: true\n    }, {\n      title: `FY${fiscal_year} Total OT/SP/Hol + FICA Request`,\n      className: 'total',\n      isCost: true\n    }, {\n      title: 'Object Name',\n      className: 'object-name'\n    }, {\n      title: 'Departmental Request Notes',\n      className: 'notes'\n    },\n    // hidden columns\n    {\n      title: 'FICA Rate',\n      className: 'fica',\n      hide: true\n    }]);\n    this.noDataMessage = 'No overtime expenditures for this fund.';\n    this.addButtonText = 'Add new cost center';\n  }\n\n  // action on row edit click: make cells editable\n  actionOnEdit() {\n    components_table_table.Cell.createTextbox('OT-pay', true);\n    components_table_table.Cell.createServiceDropdown(services.list());\n    components_table_table.Cell.createDropdown('recurring', ['One-Time', 'Recurring']);\n    components_table_table.Cell.createDropdown('object-name', OT_OBJECTS);\n    components_table_table.Cell.createTextbox('notes');\n  }\n  updateTable() {\n    // calculate for each row\n    let rows = document.getElementsByTagName('tr');\n    for (let i = 1; i < rows.length; i++) {\n      // fetch values for calculations\n      let OT_salary = components_table_table.Cell.getValue(rows[i], 'OT-pay');\n      let fica_rate = components_table_table.Cell.getText(rows[i], 'fica');\n\n      // add salary and wages and fringe benefits (FICA)\n      let row_total = OT_salary * (1 + parseFloat(fica_rate));\n\n      // update total\n      components_table_table.Cell.updateValue(rows[i], 'total', row_total);\n    }\n\n    // Save the table after all updates are done\n    components_table_table.save();\n  }\n  addCustomQuestions() {\n    // form questions to add a new job\n    js_components_form_form.NewField.dropdown('Appropriation:', 'approp-name', fund_lookup_table.getApprops('Add new'), true);\n    js_components_form_form.NewField.dropdown('Cost Center:', 'cc-name', fund_lookup_table.getCostCenters('Add new'), true);\n    js_components_form_form.NewField.dropdown('Object (salary or wage):', 'object-name', OT_OBJECTS, true);\n    js_components_form_form.NewField.dropdown('Service', 'service', services.list(), true);\n    js_components_form_form.NewField.dropdown('Recurring or One-Time', 'recurring', ['Recurring', 'One-Time'], true);\n    js_components_form_form.NewField.shortText('Overtime amount requested:', 'OT-pay', true);\n  }\n  editColumns(responses) {\n    responses = super.editColumns(responses);\n    // edit inputs from modal\n    responses['OT-pay'] = unformatCurrency(responses['OT-pay']);\n    responses['fica'] = 0.0765;\n    return responses;\n  }\n}\n/* harmony default export */ const _05_overtime = (OvertimeView);\n;// CONCATENATED MODULE: ./src/js/views/06_nonpersonnel.js\n\n\n\n\n\n\nclass NonPersonnelView extends View {\n  constructor(fiscal_year) {\n    super();\n    this.page_state = 'nonpersonnel';\n    this.prompt = `Review and edit non-personnel line items. The CPA numbers are the \n            Contract and Procurement Account numbers. Click on the 'detail' link for a CPA \n            to see the contract details. Some line items won't have a CPA number.`;\n    this.subtitle = 'Non-Personnel';\n    this.table = new NonPersonnelTable(fiscal_year);\n  }\n}\nclass NonPersonnelTable extends ViewTable {\n  constructor(fiscal_year) {\n    super();\n\n    // add additional personnel columns to the table\n    this.columns = this.columns.concat([{\n      title: `FY${fiscal_year} Departmental Request Total`,\n      className: 'request',\n      isCost: true\n    }, {\n      title: 'Service',\n      className: 'service'\n    }, {\n      title: 'Recurring or One-Time',\n      className: 'recurring'\n    }, {\n      title: 'Vendor Name',\n      className: 'vendor'\n    }, {\n      title: 'CPA #',\n      className: 'cpa'\n    },\n    // hidden columns\n    {\n      title: 'End Date',\n      className: 'contract-end',\n      hide: true\n    }, {\n      title: 'BPA/CPA Amount Remaining',\n      className: 'remaining',\n      isCost: true,\n      hide: true\n    }, {\n      title: 'Object Name',\n      className: 'object-name',\n      hide: true\n    }, {\n      title: 'Object',\n      className: 'object',\n      hide: true\n    }, {\n      title: 'Object Category',\n      className: 'object-category',\n      hide: true\n    }, {\n      title: 'BPA/CPA Description',\n      className: 'cpa-description',\n      hide: true\n    }, {\n      title: 'Departmental Request Notes',\n      className: 'notes'\n    }]);\n    this.noDataMessage = 'No non-personnel expenditures for this fund.';\n    this.addButtonText = 'Add new non-personnel item';\n  }\n\n  // action on row edit click: make cells editable\n  actionOnEdit() {\n    components_table_table.Cell.createTextbox('request', true);\n    components_table_table.Cell.createServiceDropdown();\n    components_table_table.Cell.createDropdown('recurring', ['One-Time', 'Recurring']);\n    components_table_table.Cell.createTextbox('notes');\n  }\n  addCustomQuestions() {\n    // form questions to add a new row\n    js_components_form_form.NewField.dropdown('Appropriation:', 'approp-name', fund_lookup_table.getApprops('Add new'), true);\n    js_components_form_form.NewField.dropdown('Cost Center:', 'cc-name', fund_lookup_table.getCostCenters('Add new'), true);\n    js_components_form_form.NewField.dropdown('Object Category:', 'object-category', OBJ_CATEGORIES.list, true);\n    // TODO: maybe give dropdown based on selected obj category\n    js_components_form_form.NewField.shortText('Object Number (if known):', 'object', false);\n    js_components_form_form.NewField.dropdown('Service', 'service', services.list(), true);\n    js_components_form_form.NewField.longText('Describe your new request:', 'cpa-description', true);\n    js_components_form_form.NewField.dropdown('Recurring or One-Time', 'recurring', ['Recurring', 'One-Time'], true);\n    js_components_form_form.NewField.shortText('Amount requested:', 'request', true);\n  }\n  editColumns(responses) {\n    responses = super.editColumns(responses);\n    responses['avg-salary'] = unformatCurrency(responses['avg-salary']);\n    responses['fringe'] = parseFloat(responses['fringe']) / 100;\n    return responses;\n  }\n}\n/* harmony default export */ const _06_nonpersonnel = (NonPersonnelView);\n;// CONCATENATED MODULE: ./src/js/views/07_new_initiatives.js\n\n\n\n\n\n\nconst dropdownOptions = ['N/A', 'One-Time', 'Recurring'];\n\n// set up page and initialize all buttons\nclass InitiativesView extends View {\n  constructor() {\n    super();\n    this.page_state = 'new-inits';\n    this.prompt = `\n            This is the place to propose new initiatives for FY${FISCAL_YEAR}.\n            New initiative submissions will count as supplemental line items and will be the starting \n            point for a conversation with both OB and ODFS, who will help with the details.`;\n    this.subtitle = 'New Initiatives';\n    this.table = new InitiativesTable();\n  }\n  visit() {\n    // remove fund selection\n    localStorage.setItem(\"fund\", '');\n    super.visit();\n  }\n}\nclass InitiativesTable extends ViewTable {\n  constructor() {\n    super();\n\n    // add additional columns to the table\n    this.columns = [{\n      title: 'Fund',\n      className: 'fund'\n    }, {\n      title: 'Supplemental Initiative',\n      className: 'init-name'\n    }, {\n      title: 'Total Initiative Request',\n      className: 'total',\n      isCost: true\n    },\n    // { title: 'Personnel FTE', className: 'ftes'},\n    {\n      title: 'Personnel Salary & Benefits',\n      className: 'personnel',\n      isCost: true\n    }, {\n      title: 'Non-Personnel Operating',\n      className: 'nonpersonnel',\n      isCost: true\n    }, {\n      title: 'Non-Personnel Capital',\n      className: 'nonpersonnel-capital',\n      isCost: true\n    },\n    // { title: 'Revenue', className: 'revenue', isCost: true },\n    // { title: 'Revenue Type', className: 'rev-type' },\n    {\n      title: 'Description & Justification',\n      className: 'notes'\n    }, {\n      title: 'Recurring or One-Time',\n      className: 'rev-type'\n    }, {\n      title: 'Edit',\n      className: 'edit'\n    }];\n    this.addButtonText = 'Add new initiative';\n  }\n  addCustomQuestions() {\n    // general questions\n    js_components_form_form.NewField.shortText('Initiative Name:', 'init-name', true);\n    js_components_form_form.NewField.longText('What is the business case for the Initiative?', 'q1', true);\n    js_components_form_form.NewField.longText(`Why is the initiative needed? What is the value-add to residents? \n            What is the Department’s plan for implementing the Initiative?`, 'q2', true);\n    js_components_form_form.NewField.longText(`Why can’t the Initiative be funded with the Department’s baseline budget?`, 'q3', true);\n    js_components_form_form.NewField.dropdown(`Is this initiative one-time or recurring?`, 'rev-type', dropdownOptions);\n\n    // Account string info\n    js_components_form_form.NewField.dropdown('Fund:', 'fund-name', fund_lookup_table.listFundNames(), true);\n\n    // Numbers\n    js_components_form_form.NewField.numericInput('What is your ballpark estimate of TOTAL ADDITONAL expenses associated with this initiative?', 'total', false);\n    js_components_form_form.NewField.numericInput('Estimate of ADDITONAL personnel cost?', 'personnel', false);\n    js_components_form_form.NewField.numericInput('Estimate of ADDITONAL nonpersonnel operating cost?', 'nonpersonnel', false);\n    js_components_form_form.NewField.numericInput('Estimate of ADDITONAL nonpersonnel capital costs?', 'nonpersonnel-capital', false);\n    js_components_form_form.NewField.numericInput('Estimate of ADDITONAL revenue (if applicable)?', 'revenue', false);\n  }\n  editColumns(responses) {\n    responses['fund'] = account_string.getNumber(responses['fund-name']);\n    responses['notes'] = `${responses['q1']} ${responses['q2']} ${responses['q3']}`;\n    return responses;\n  }\n  addModalValidation() {\n    return;\n  }\n\n  // action on row edit click: make cells editable\n  actionOnEdit() {\n    components_table_table.Cell.createTextbox('total', true);\n    // Table.Cell.createTextbox('revenue', true);\n    components_table_table.Cell.createTextbox('personnel', true);\n    components_table_table.Cell.createTextbox('nonpersonnel', true);\n    components_table_table.Cell.createTextbox('init-name');\n    components_table_table.Cell.createDropdown('rev-type', dropdownOptions);\n    components_table_table.Cell.createTextbox('notes');\n  }\n}\n/* harmony default export */ const _07_new_initiatives = (InitiativesView);\n;// CONCATENATED MODULE: ./src/js/views/08_summary.js\n\n\n\n\n\n\n\n\nfunction compareToTarget() {\n  const baseline = new models_baseline();\n  if (baseline.genFundTotal() <= models_baseline.target()) {\n    js_components_prompt_prompt.Text.update(`Congrats! Your General Fund budget is below your target! \n            Edit any line items below or download your completed Excel.`);\n  } else {\n    js_components_prompt_prompt.Text.update(`Your General Fund budget is above your GF target of ${formatCurrency(models_baseline.target())}. \n            Please expand the summary table below and edit line items until you meet your target. \n            When you meet the target, you will be able to download the Excel sheet.`);\n    js_components_prompt_prompt.Buttons.Right.disable();\n  }\n  js_components_prompt_prompt.show();\n}\nfunction returnToWelcome() {\n  const welcome = new _00_welcome();\n  const left = document.getElementById('option1');\n  welcome.visit();\n}\n;\nclass SummaryView extends View {\n  constructor() {\n    super();\n    this.page_state = 'summary';\n    this.subtitle = 'Summary';\n    this.sidebar = false;\n  }\n  visit() {\n    super.visit();\n\n    // reset fund\n    current_fund.reset();\n\n    // show summary accordion\n    Accordion.build();\n    Accordion.show();\n\n    // add prompt buttons\n    js_components_prompt_prompt.Buttons.Right.updateText('Download Excel');\n    js_components_prompt_prompt.Buttons.Left.updateText('Start over with new Excel upload');\n    // add button links\n    js_components_prompt_prompt.Buttons.Left.addAction(returnToWelcome);\n    js_components_prompt_prompt.Buttons.Right.addAction(downloadXLSX);\n\n    // update prompt text depending on target matching\n    compareToTarget();\n  }\n  cleanup() {\n    // delete event listeners\n    js_components_prompt_prompt.Buttons.Left.removeAction(returnToWelcome);\n    js_components_prompt_prompt.Buttons.Right.removeAction(downloadXLSX);\n    js_components_prompt_prompt.Buttons.Right.enable();\n  }\n}\n/* harmony default export */ const _08_summary = (SummaryView);\n;// CONCATENATED MODULE: ./src/js/views/view_logic.js\n\n\n\n\n\n\n\n\n\n\n\n\n// Initialize pages globally once\nconst PAGES = {\n  'welcome': new _00_welcome(),\n  'upload': new _01_upload(),\n  'baseline-landing': new _02_baseline_landing(),\n  'revenue': new _03_revenue(FISCAL_YEAR),\n  'personnel': new _04_personnel(FISCAL_YEAR),\n  'overtime': new _05_overtime(FISCAL_YEAR),\n  'nonpersonnel': new _06_nonpersonnel(FISCAL_YEAR),\n  'new-inits': new _07_new_initiatives(),\n  'summary': new _08_summary()\n};\nfunction visitPage(new_page_key) {\n  var page_state = current_page.load();\n\n  // Perform cleanup from the current page\n  if (PAGES[page_state]) {\n    PAGES[page_state].cleanup();\n  }\n  if (PAGES[new_page_key]) {\n    PAGES[new_page_key].visit();\n  } else {\n    console.error(`No page initializer found for state: ${new_page_key}`);\n  }\n}\nfunction nextPage() {\n  var page_state = current_page.load();\n  const keys = Object.keys(PAGES);\n  const currentIndex = keys.indexOf(page_state);\n  const returnPages = ['revenue', 'nonpersonnel', 'new-inits', 'overtime', 'personnel'];\n  if (!fund_lookup_table.fundsLeft() && returnPages.includes(current_page.load())) {\n    visitPage('summary');\n    return;\n  }\n  if (current_page.load() == 'nonpersonnel') {\n    fund_lookup_table.editFund(current_fund.number());\n    if (fund_lookup_table.fundsLeft()) {\n      visitPage('baseline-landing');\n      return;\n    }\n  }\n  if (currentIndex >= 0 && currentIndex < keys.length - 1) {\n    const nextKey = keys[currentIndex + 1];\n    visitPage(nextKey);\n  }\n}\nfunction lastPage() {\n  var page_state = current_page.load();\n  const keys = Object.keys(PAGES);\n  const currentIndex = keys.indexOf(page_state);\n  if (current_page.load() == 'new-inits') {\n    visitPage('baseline-landing');\n    return;\n  }\n  if (currentIndex >= 1) {\n    const lastKey = keys[currentIndex - 1];\n    visitPage(lastKey);\n  }\n}\n;// CONCATENATED MODULE: ./src/js/models/current_page.js\n\nconst CurrentPage = {\n  update: function (page) {\n    localStorage.setItem('page_state', page);\n  },\n  load: function () {\n    const pageState = localStorage.getItem('page_state');\n    return pageState !== null ? pageState : 'welcome';\n  },\n  visit: function () {\n    visitPage(this.load());\n  }\n};\n/* harmony default export */ const current_page = (CurrentPage);\n;// CONCATENATED MODULE: ./src/js/utils/storage_utils.js\nfunction getLocalStorageSize() {\n  let total = 0;\n  for (let key in localStorage) {\n    if (localStorage.hasOwnProperty(key)) {\n      let keySize = key.length * 2; // each character is 2 bytes\n      let valueSize = localStorage[key].length * 2; // each character is 2 bytes\n      total += keySize + valueSize;\n    }\n  }\n  return formatBytes(total);\n}\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n;// CONCATENATED MODULE: ./src/js/init.js\n// Import styles\n\n\n// Import functions\n\n\n\n// Initialize only once when the document is fully loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  current_page.visit();\n  console.log('Local Storage Used:', getLocalStorageSize());\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///863\n")},404:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    /* colors */\r\n    --orange: #FB6523;\r\n    --yellow: #D99733;\r\n    --blue: #43748E;\r\n    --lightBlue: #b7c9e2;\r\n    --darkGray: #373A37;\r\n    --mediumGray: #D0D0D0;\r\n    --lightGray: #F2F2F2;\r\n    --white: #FBFDFB;\r\n    --black: #212121;\r\n    --green: #71BC78;\r\n    --citygreen: #004445;\r\n    --spiritgreen: #279989;\r\n    --palegreen: #9FD5B3;\r\n    --verypalegreen: #DFF5E3;\r\n    --accentyellow: #feb70d;\r\n    --nearblack: #18252a;\r\n    /* fonts */\r\n    font-family: \'Nunito\', sans-serif;\r\n    font-size: 14px;\r\n    /* spacing */\r\n    --header-height : 105px;\r\n    --sidebar-width: 300px;\r\n}\r\n\r\n/* Button styling */\r\n\r\n.btn {\r\n    cursor: pointer;\r\n    padding: 6px;\r\n    margin-top: 5px;\r\n    margin-right : 2px;\r\n    margin-left: 2px;\r\n    border-radius: 10px;\r\n    background-color: gray;\r\n    color: white; \r\n}\r\n\r\n/* Font application for all text  */\r\nbody, button, input, textarea, select, .sidebar, table {\r\n    font-family: var(--font-family), sans-serif;\r\n  }\r\n\r\n#main-panel {\r\n    /* display: flex; */\r\n    /* flex-direction: column; */\r\n    justify-content: center; /* This will center content vertically */\r\n    min-height: calc(100vh - var(--header-height)) ; \r\n    /* max-width: calc(100vw - var(--sidebar-width));  */\r\n    padding-top: 25px;\r\n    padding-bottom: 25px;\r\n    margin: 0;\r\n}\r\n\r\n/* Font awesome */\r\n\r\ni.fas.fa-check { \r\n    font-size: 1.5em;\r\n    color: var(--spiritgreen);\r\n    margin-right: 10px;\r\n}\r\n`, "",{"version":3,"sources":["webpack://./src/css/common.css"],"names":[],"mappings":"AAAA;IACI,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,oBAAoB;IACpB,mBAAmB;IACnB,qBAAqB;IACrB,oBAAoB;IACpB,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;IAChB,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,wBAAwB;IACxB,uBAAuB;IACvB,oBAAoB;IACpB,UAAU;IACV,iCAAiC;IACjC,eAAe;IACf,YAAY;IACZ,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA,mBAAmB;;AAEnB;IACI,eAAe;IACf,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;AAChB;;AAEA,mCAAmC;AACnC;IACI,2CAA2C;EAC7C;;AAEF;IACI,mBAAmB;IACnB,4BAA4B;IAC5B,uBAAuB,EAAE,wCAAwC;IACjE,+CAA+C;IAC/C,oDAAoD;IACpD,iBAAiB;IACjB,oBAAoB;IACpB,SAAS;AACb;;AAEA,iBAAiB;;AAEjB;IACI,gBAAgB;IAChB,yBAAyB;IACzB,kBAAkB;AACtB","sourcesContent":[":root {\\r\\n    /* colors */\\r\\n    --orange: #FB6523;\\r\\n    --yellow: #D99733;\\r\\n    --blue: #43748E;\\r\\n    --lightBlue: #b7c9e2;\\r\\n    --darkGray: #373A37;\\r\\n    --mediumGray: #D0D0D0;\\r\\n    --lightGray: #F2F2F2;\\r\\n    --white: #FBFDFB;\\r\\n    --black: #212121;\\r\\n    --green: #71BC78;\\r\\n    --citygreen: #004445;\\r\\n    --spiritgreen: #279989;\\r\\n    --palegreen: #9FD5B3;\\r\\n    --verypalegreen: #DFF5E3;\\r\\n    --accentyellow: #feb70d;\\r\\n    --nearblack: #18252a;\\r\\n    /* fonts */\\r\\n    font-family: \'Nunito\', sans-serif;\\r\\n    font-size: 14px;\\r\\n    /* spacing */\\r\\n    --header-height : 105px;\\r\\n    --sidebar-width: 300px;\\r\\n}\\r\\n\\r\\n/* Button styling */\\r\\n\\r\\n.btn {\\r\\n    cursor: pointer;\\r\\n    padding: 6px;\\r\\n    margin-top: 5px;\\r\\n    margin-right : 2px;\\r\\n    margin-left: 2px;\\r\\n    border-radius: 10px;\\r\\n    background-color: gray;\\r\\n    color: white; \\r\\n}\\r\\n\\r\\n/* Font application for all text  */\\r\\nbody, button, input, textarea, select, .sidebar, table {\\r\\n    font-family: var(--font-family), sans-serif;\\r\\n  }\\r\\n\\r\\n#main-panel {\\r\\n    /* display: flex; */\\r\\n    /* flex-direction: column; */\\r\\n    justify-content: center; /* This will center content vertically */\\r\\n    min-height: calc(100vh - var(--header-height)) ; \\r\\n    /* max-width: calc(100vw - var(--sidebar-width));  */\\r\\n    padding-top: 25px;\\r\\n    padding-bottom: 25px;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n/* Font awesome */\\r\\n\\r\\ni.fas.fa-check { \\r\\n    font-size: 1.5em;\\r\\n    color: var(--spiritgreen);\\r\\n    margin-right: 10px;\\r\\n}\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDA0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2J1ZGdldC1yZXF1ZXN0LWZvcm0vLi9zcmMvY3NzL2NvbW1vbi5jc3M/ZjdjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgOnJvb3Qge1xyXG4gICAgLyogY29sb3JzICovXHJcbiAgICAtLW9yYW5nZTogI0ZCNjUyMztcclxuICAgIC0teWVsbG93OiAjRDk5NzMzO1xyXG4gICAgLS1ibHVlOiAjNDM3NDhFO1xyXG4gICAgLS1saWdodEJsdWU6ICNiN2M5ZTI7XHJcbiAgICAtLWRhcmtHcmF5OiAjMzczQTM3O1xyXG4gICAgLS1tZWRpdW1HcmF5OiAjRDBEMEQwO1xyXG4gICAgLS1saWdodEdyYXk6ICNGMkYyRjI7XHJcbiAgICAtLXdoaXRlOiAjRkJGREZCO1xyXG4gICAgLS1ibGFjazogIzIxMjEyMTtcclxuICAgIC0tZ3JlZW46ICM3MUJDNzg7XHJcbiAgICAtLWNpdHlncmVlbjogIzAwNDQ0NTtcclxuICAgIC0tc3Bpcml0Z3JlZW46ICMyNzk5ODk7XHJcbiAgICAtLXBhbGVncmVlbjogIzlGRDVCMztcclxuICAgIC0tdmVyeXBhbGVncmVlbjogI0RGRjVFMztcclxuICAgIC0tYWNjZW50eWVsbG93OiAjZmViNzBkO1xyXG4gICAgLS1uZWFyYmxhY2s6ICMxODI1MmE7XHJcbiAgICAvKiBmb250cyAqL1xyXG4gICAgZm9udC1mYW1pbHk6ICdOdW5pdG8nLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgLyogc3BhY2luZyAqL1xyXG4gICAgLS1oZWFkZXItaGVpZ2h0IDogMTA1cHg7XHJcbiAgICAtLXNpZGViYXItd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG4vKiBCdXR0b24gc3R5bGluZyAqL1xyXG5cclxuLmJ0biB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiA2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQgOiAycHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbiAgICBjb2xvcjogd2hpdGU7IFxyXG59XHJcblxyXG4vKiBGb250IGFwcGxpY2F0aW9uIGZvciBhbGwgdGV4dCAgKi9cclxuYm9keSwgYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCwgLnNpZGViYXIsIHRhYmxlIHtcclxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseSksIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG5cclxuI21haW4tcGFuZWwge1xyXG4gICAgLyogZGlzcGxheTogZmxleDsgKi9cclxuICAgIC8qIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICovXHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogVGhpcyB3aWxsIGNlbnRlciBjb250ZW50IHZlcnRpY2FsbHkgKi9cclxuICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSB2YXIoLS1oZWFkZXItaGVpZ2h0KSkgOyBcclxuICAgIC8qIG1heC13aWR0aDogY2FsYygxMDB2dyAtIHZhcigtLXNpZGViYXItd2lkdGgpKTsgICovXHJcbiAgICBwYWRkaW5nLXRvcDogMjVweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyNXB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiBGb250IGF3ZXNvbWUgKi9cclxuXHJcbmkuZmFzLmZhLWNoZWNrIHsgXHJcbiAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvY29tbW9uLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsb0JBQW9CO0lBQ3BCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsd0JBQXdCO0lBQ3hCLHVCQUF1QjtJQUN2QixvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGlDQUFpQztJQUNqQyxlQUFlO0lBQ2YsWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixzQkFBc0I7QUFDMUI7O0FBRUEsbUJBQW1COztBQUVuQjtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCOztBQUVBLG1DQUFtQztBQUNuQztJQUNJLDJDQUEyQztFQUM3Qzs7QUFFRjtJQUNJLG1CQUFtQjtJQUNuQiw0QkFBNEI7SUFDNUIsdUJBQXVCLEVBQUUsd0NBQXdDO0lBQ2pFLCtDQUErQztJQUMvQyxvREFBb0Q7SUFDcEQsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixTQUFTO0FBQ2I7O0FBRUEsaUJBQWlCOztBQUVqQjtJQUNJLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXHJcXG4gICAgLyogY29sb3JzICovXFxyXFxuICAgIC0tb3JhbmdlOiAjRkI2NTIzO1xcclxcbiAgICAtLXllbGxvdzogI0Q5OTczMztcXHJcXG4gICAgLS1ibHVlOiAjNDM3NDhFO1xcclxcbiAgICAtLWxpZ2h0Qmx1ZTogI2I3YzllMjtcXHJcXG4gICAgLS1kYXJrR3JheTogIzM3M0EzNztcXHJcXG4gICAgLS1tZWRpdW1HcmF5OiAjRDBEMEQwO1xcclxcbiAgICAtLWxpZ2h0R3JheTogI0YyRjJGMjtcXHJcXG4gICAgLS13aGl0ZTogI0ZCRkRGQjtcXHJcXG4gICAgLS1ibGFjazogIzIxMjEyMTtcXHJcXG4gICAgLS1ncmVlbjogIzcxQkM3ODtcXHJcXG4gICAgLS1jaXR5Z3JlZW46ICMwMDQ0NDU7XFxyXFxuICAgIC0tc3Bpcml0Z3JlZW46ICMyNzk5ODk7XFxyXFxuICAgIC0tcGFsZWdyZWVuOiAjOUZENUIzO1xcclxcbiAgICAtLXZlcnlwYWxlZ3JlZW46ICNERkY1RTM7XFxyXFxuICAgIC0tYWNjZW50eWVsbG93OiAjZmViNzBkO1xcclxcbiAgICAtLW5lYXJibGFjazogIzE4MjUyYTtcXHJcXG4gICAgLyogZm9udHMgKi9cXHJcXG4gICAgZm9udC1mYW1pbHk6ICdOdW5pdG8nLCBzYW5zLXNlcmlmO1xcclxcbiAgICBmb250LXNpemU6IDE0cHg7XFxyXFxuICAgIC8qIHNwYWNpbmcgKi9cXHJcXG4gICAgLS1oZWFkZXItaGVpZ2h0IDogMTA1cHg7XFxyXFxuICAgIC0tc2lkZWJhci13aWR0aDogMzAwcHg7XFxyXFxufVxcclxcblxcclxcbi8qIEJ1dHRvbiBzdHlsaW5nICovXFxyXFxuXFxyXFxuLmJ0biB7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgcGFkZGluZzogNnB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiA1cHg7XFxyXFxuICAgIG1hcmdpbi1yaWdodCA6IDJweDtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDJweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcXHJcXG4gICAgY29sb3I6IHdoaXRlOyBcXHJcXG59XFxyXFxuXFxyXFxuLyogRm9udCBhcHBsaWNhdGlvbiBmb3IgYWxsIHRleHQgICovXFxyXFxuYm9keSwgYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCwgLnNpZGViYXIsIHRhYmxlIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5KSwgc2Fucy1zZXJpZjtcXHJcXG4gIH1cXHJcXG5cXHJcXG4jbWFpbi1wYW5lbCB7XFxyXFxuICAgIC8qIGRpc3BsYXk6IGZsZXg7ICovXFxyXFxuICAgIC8qIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICovXFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBUaGlzIHdpbGwgY2VudGVyIGNvbnRlbnQgdmVydGljYWxseSAqL1xcclxcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gdmFyKC0taGVhZGVyLWhlaWdodCkpIDsgXFxyXFxuICAgIC8qIG1heC13aWR0aDogY2FsYygxMDB2dyAtIHZhcigtLXNpZGViYXItd2lkdGgpKTsgICovXFxyXFxuICAgIHBhZGRpbmctdG9wOiAyNXB4O1xcclxcbiAgICBwYWRkaW5nLWJvdHRvbTogMjVweDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBGb250IGF3ZXNvbWUgKi9cXHJcXG5cXHJcXG5pLmZhcy5mYS1jaGVjayB7IFxcclxcbiAgICBmb250LXNpemU6IDEuNWVtO1xcclxcbiAgICBjb2xvcjogdmFyKC0tc3Bpcml0Z3JlZW4pO1xcclxcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///404\n')},995:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.summary-accordion {\r\n    width: 60%;\r\n    margin: auto;\r\n}\r\n\r\n.accordion-title {\r\n    margin-left: 20%;\r\n    font-weight: bold;\r\n    /* font-size: 20px; */\r\n    padding-bottom: 10px;\r\n    padding-left: 15px;\r\n    padding-top: 30px;\r\n}\r\n\r\n.accordion-button:active, .accordion-button:not(.collapsed) {\r\n    background-color: var(--palegreen);\r\n    color: var(--citygreen);\r\n    /* font-size: 20px; */\r\n}\r\n\r\n.accordion-table { \r\n    width: 100%;\r\n    font-size: 1.2em;\r\n    /* border-collapse: separate; This is required for rounded corners */\r\n}\r\n\r\n.accordion-table td:last-child {\r\n    text-align: right;\r\n    padding-right: 15px;\r\n    padding-bottom: 5px\r\n}\r\n\r\n.accordion-table tr {\r\n    border-bottom: 1px solid black;\r\n    border-top: none;\r\n    border-right: none;\r\n    border-left: none;\r\n}\r\n\r\n.accordion-table tr:last-child {\r\n    border-bottom: none;\r\n    background-color: var(--mediumGray);\r\n    height : 50px;\r\n}\r\n\r\nspan.amount {\r\n    font-weight: bold;\r\n    position: absolute;\r\n    right: 0;\r\n    margin-right: 60px;\r\n}\r\n\r\n.accordion-header button {\r\n    font-size: 0.8em;\r\n}\r\n\r\n.btn-add-init {\r\n    background-color: var(--spiritgreen);\r\n    border-color: var(--citygreen);\r\n    /* position: absolute; */\r\n    right: 0;\r\n    /* margin-left: 20px; */\r\n    /* margin-right: calc(20vw + 15px); */\r\n    margin-top: 15px;\r\n}\r\n\r\n#supp-title {\r\n   margin-top: 20px;\r\n}\r\n\r\n.btn-add-init:hover {\r\n    background-color: var(--palegreen);\r\n}\r\n.add-init-btn-div{\r\n    text-align: center;\r\n}\r\n\r\nspan.top-line-amount {\r\n    font-weight: bold;\r\n    position: absolute;\r\n    right: 0;\r\n    margin-right: calc(20vw + 20px);\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/accordion/accordion.css"],"names":[],"mappings":"AAAA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,kCAAkC;IAClC,uBAAuB;IACvB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,oEAAoE;AACxE;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB;AACJ;;AAEA;IACI,8BAA8B;IAC9B,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,mCAAmC;IACnC,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,8BAA8B;IAC9B,wBAAwB;IACxB,QAAQ;IACR,uBAAuB;IACvB,qCAAqC;IACrC,gBAAgB;AACpB;;AAEA;GACG,gBAAgB;AACnB;;AAEA;IACI,kCAAkC;AACtC;AACA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,QAAQ;IACR,+BAA+B;AACnC","sourcesContent":[".summary-accordion {\\r\\n    width: 60%;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.accordion-title {\\r\\n    margin-left: 20%;\\r\\n    font-weight: bold;\\r\\n    /* font-size: 20px; */\\r\\n    padding-bottom: 10px;\\r\\n    padding-left: 15px;\\r\\n    padding-top: 30px;\\r\\n}\\r\\n\\r\\n.accordion-button:active, .accordion-button:not(.collapsed) {\\r\\n    background-color: var(--palegreen);\\r\\n    color: var(--citygreen);\\r\\n    /* font-size: 20px; */\\r\\n}\\r\\n\\r\\n.accordion-table { \\r\\n    width: 100%;\\r\\n    font-size: 1.2em;\\r\\n    /* border-collapse: separate; This is required for rounded corners */\\r\\n}\\r\\n\\r\\n.accordion-table td:last-child {\\r\\n    text-align: right;\\r\\n    padding-right: 15px;\\r\\n    padding-bottom: 5px\\r\\n}\\r\\n\\r\\n.accordion-table tr {\\r\\n    border-bottom: 1px solid black;\\r\\n    border-top: none;\\r\\n    border-right: none;\\r\\n    border-left: none;\\r\\n}\\r\\n\\r\\n.accordion-table tr:last-child {\\r\\n    border-bottom: none;\\r\\n    background-color: var(--mediumGray);\\r\\n    height : 50px;\\r\\n}\\r\\n\\r\\nspan.amount {\\r\\n    font-weight: bold;\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    margin-right: 60px;\\r\\n}\\r\\n\\r\\n.accordion-header button {\\r\\n    font-size: 0.8em;\\r\\n}\\r\\n\\r\\n.btn-add-init {\\r\\n    background-color: var(--spiritgreen);\\r\\n    border-color: var(--citygreen);\\r\\n    /* position: absolute; */\\r\\n    right: 0;\\r\\n    /* margin-left: 20px; */\\r\\n    /* margin-right: calc(20vw + 15px); */\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n#supp-title {\\r\\n   margin-top: 20px;\\r\\n}\\r\\n\\r\\n.btn-add-init:hover {\\r\\n    background-color: var(--palegreen);\\r\\n}\\r\\n.add-init-btn-div{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nspan.top-line-amount {\\r\\n    font-weight: bold;\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    margin-right: calc(20vw + 20px);\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTk1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWRnZXQtcmVxdWVzdC1mb3JtLy4vc3JjL2pzL2NvbXBvbmVudHMvYWNjb3JkaW9uL2FjY29yZGlvbi5jc3M/ZjBmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnN1bW1hcnktYWNjb3JkaW9uIHtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5hY2NvcmRpb24tdGl0bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwJTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgLyogZm9udC1zaXplOiAyMHB4OyAqL1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcclxufVxyXG5cclxuLmFjY29yZGlvbi1idXR0b246YWN0aXZlLCAuYWNjb3JkaW9uLWJ1dHRvbjpub3QoLmNvbGxhcHNlZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcGFsZWdyZWVuKTtcclxuICAgIGNvbG9yOiB2YXIoLS1jaXR5Z3JlZW4pO1xyXG4gICAgLyogZm9udC1zaXplOiAyMHB4OyAqL1xyXG59XHJcblxyXG4uYWNjb3JkaW9uLXRhYmxlIHsgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAvKiBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyBUaGlzIGlzIHJlcXVpcmVkIGZvciByb3VuZGVkIGNvcm5lcnMgKi9cclxufVxyXG5cclxuLmFjY29yZGlvbi10YWJsZSB0ZDpsYXN0LWNoaWxkIHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1cHhcclxufVxyXG5cclxuLmFjY29yZGlvbi10YWJsZSB0ciB7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gICAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbn1cclxuXHJcbi5hY2NvcmRpb24tdGFibGUgdHI6bGFzdC1jaGlsZCB7XHJcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWVkaXVtR3JheSk7XHJcbiAgICBoZWlnaHQgOiA1MHB4O1xyXG59XHJcblxyXG5zcGFuLmFtb3VudCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA2MHB4O1xyXG59XHJcblxyXG4uYWNjb3JkaW9uLWhlYWRlciBidXR0b24ge1xyXG4gICAgZm9udC1zaXplOiAwLjhlbTtcclxufVxyXG5cclxuLmJ0bi1hZGQtaW5pdCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zcGlyaXRncmVlbik7XHJcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWNpdHlncmVlbik7XHJcbiAgICAvKiBwb3NpdGlvbjogYWJzb2x1dGU7ICovXHJcbiAgICByaWdodDogMDtcclxuICAgIC8qIG1hcmdpbi1sZWZ0OiAyMHB4OyAqL1xyXG4gICAgLyogbWFyZ2luLXJpZ2h0OiBjYWxjKDIwdncgKyAxNXB4KTsgKi9cclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbn1cclxuXHJcbiNzdXBwLXRpdGxlIHtcclxuICAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmJ0bi1hZGQtaW5pdDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wYWxlZ3JlZW4pO1xyXG59XHJcbi5hZGQtaW5pdC1idG4tZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5zcGFuLnRvcC1saW5lLWFtb3VudCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBjYWxjKDIwdncgKyAyMHB4KTtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2pzL2NvbXBvbmVudHMvYWNjb3JkaW9uL2FjY29yZGlvbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksa0NBQWtDO0lBQ2xDLHVCQUF1QjtJQUN2QixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLG9FQUFvRTtBQUN4RTs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkI7QUFDSjs7QUFFQTtJQUNJLDhCQUE4QjtJQUM5QixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixtQ0FBbUM7SUFDbkMsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyw4QkFBOEI7SUFDOUIsd0JBQXdCO0lBQ3hCLFFBQVE7SUFDUix1QkFBdUI7SUFDdkIscUNBQXFDO0lBQ3JDLGdCQUFnQjtBQUNwQjs7QUFFQTtHQUNHLGdCQUFnQjtBQUNuQjs7QUFFQTtJQUNJLGtDQUFrQztBQUN0QztBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsK0JBQStCO0FBQ25DXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zdW1tYXJ5LWFjY29yZGlvbiB7XFxyXFxuICAgIHdpZHRoOiA2MCU7XFxyXFxuICAgIG1hcmdpbjogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuLmFjY29yZGlvbi10aXRsZSB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAyMCU7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcclxcbiAgICAvKiBmb250LXNpemU6IDIwcHg7ICovXFxyXFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XFxyXFxuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYWNjb3JkaW9uLWJ1dHRvbjphY3RpdmUsIC5hY2NvcmRpb24tYnV0dG9uOm5vdCguY29sbGFwc2VkKSB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBhbGVncmVlbik7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1jaXR5Z3JlZW4pO1xcclxcbiAgICAvKiBmb250LXNpemU6IDIwcHg7ICovXFxyXFxufVxcclxcblxcclxcbi5hY2NvcmRpb24tdGFibGUgeyBcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS4yZW07XFxyXFxuICAgIC8qIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7IFRoaXMgaXMgcmVxdWlyZWQgZm9yIHJvdW5kZWQgY29ybmVycyAqL1xcclxcbn1cXHJcXG5cXHJcXG4uYWNjb3JkaW9uLXRhYmxlIHRkOmxhc3QtY2hpbGQge1xcclxcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcXHJcXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcXHJcXG4gICAgcGFkZGluZy1ib3R0b206IDVweFxcclxcbn1cXHJcXG5cXHJcXG4uYWNjb3JkaW9uLXRhYmxlIHRyIHtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xcclxcbiAgICBib3JkZXItdG9wOiBub25lO1xcclxcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XFxyXFxuICAgIGJvcmRlci1sZWZ0OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4uYWNjb3JkaW9uLXRhYmxlIHRyOmxhc3QtY2hpbGQge1xcclxcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tZWRpdW1HcmF5KTtcXHJcXG4gICAgaGVpZ2h0IDogNTBweDtcXHJcXG59XFxyXFxuXFxyXFxuc3Bhbi5hbW91bnQge1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICByaWdodDogMDtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiA2MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYWNjb3JkaW9uLWhlYWRlciBidXR0b24ge1xcclxcbiAgICBmb250LXNpemU6IDAuOGVtO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuLWFkZC1pbml0IHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3Bpcml0Z3JlZW4pO1xcclxcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWNpdHlncmVlbik7XFxyXFxuICAgIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cXHJcXG4gICAgcmlnaHQ6IDA7XFxyXFxuICAgIC8qIG1hcmdpbi1sZWZ0OiAyMHB4OyAqL1xcclxcbiAgICAvKiBtYXJnaW4tcmlnaHQ6IGNhbGMoMjB2dyArIDE1cHgpOyAqL1xcclxcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4jc3VwcC10aXRsZSB7XFxyXFxuICAgbWFyZ2luLXRvcDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0bi1hZGQtaW5pdDpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBhbGVncmVlbik7XFxyXFxufVxcclxcbi5hZGQtaW5pdC1idG4tZGl2e1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbnNwYW4udG9wLWxpbmUtYW1vdW50IHtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgcmlnaHQ6IDA7XFxyXFxuICAgIG1hcmdpbi1yaWdodDogY2FsYygyMHZ3ICsgMjBweCk7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///995\n')},9:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\r\n    background-color: var(--lightGray);\r\n    margin: 0;\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/body/body.css"],"names":[],"mappings":"AAAA;IACI,kCAAkC;IAClC,SAAS;AACb","sourcesContent":["body {\\r\\n    background-color: var(--lightGray);\\r\\n    margin: 0;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2J1ZGdldC1yZXF1ZXN0LWZvcm0vLi9zcmMvanMvY29tcG9uZW50cy9ib2R5L2JvZHkuY3NzPzM2ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHRHcmF5KTtcclxuICAgIG1hcmdpbjogMDtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2pzL2NvbXBvbmVudHMvYm9keS9ib2R5LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtDQUFrQztJQUNsQyxTQUFTO0FBQ2JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxpZ2h0R3JheSk7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n')},39:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#file-input {\r\n    margin-left: 40%;\r\n}\r\n\r\n/* Spinner Styles */\r\n.spinner {\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 150px;\r\n    border: 20px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 50%;\r\n    border-top-color: var(--spiritgreen);\r\n    animation: spin 1s ease-in-out infinite;\r\n    position: fixed; /* Ensures it stays fixed relative to the viewport */\r\n    top: 20%; /* Center vertically */\r\n    left: 43%; /* Center horizontally */\r\n    transform: translate(-50%, -50%); /* Centralize the spinner exactly */\r\n    z-index: 9999; /* Ensures it appears in front of other elements */\r\n    background-color: rgba(255, 255, 255, 0.8); /* Optional: light background */\r\n    padding: 20px; /* Optional: extra padding for better visibility */\r\n  }\r\n  \r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }`, "",{"version":3,"sources":["webpack://./src/js/components/file_upload/file_upload.css"],"names":[],"mappings":"AAAA;IACI,gBAAgB;AACpB;;AAEA,mBAAmB;AACnB;IACI,qBAAqB;IACrB,YAAY;IACZ,aAAa;IACb,qCAAqC;IACrC,kBAAkB;IAClB,oCAAoC;IACpC,uCAAuC;IACvC,eAAe,EAAE,oDAAoD;IACrE,QAAQ,EAAE,sBAAsB;IAChC,SAAS,EAAE,wBAAwB;IACnC,gCAAgC,EAAE,mCAAmC;IACrE,aAAa,EAAE,kDAAkD;IACjE,0CAA0C,EAAE,+BAA+B;IAC3E,aAAa,EAAE,kDAAkD;EACnE;;EAEA;IACE;MACE,uBAAuB;IACzB;IACA;MACE,yBAAyB;IAC3B;EACF","sourcesContent":["#file-input {\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n/* Spinner Styles */\\r\\n.spinner {\\r\\n    display: inline-block;\\r\\n    width: 150px;\\r\\n    height: 150px;\\r\\n    border: 20px solid rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 50%;\\r\\n    border-top-color: var(--spiritgreen);\\r\\n    animation: spin 1s ease-in-out infinite;\\r\\n    position: fixed; /* Ensures it stays fixed relative to the viewport */\\r\\n    top: 20%; /* Center vertically */\\r\\n    left: 43%; /* Center horizontally */\\r\\n    transform: translate(-50%, -50%); /* Centralize the spinner exactly */\\r\\n    z-index: 9999; /* Ensures it appears in front of other elements */\\r\\n    background-color: rgba(255, 255, 255, 0.8); /* Optional: light background */\\r\\n    padding: 20px; /* Optional: extra padding for better visibility */\\r\\n  }\\r\\n  \\r\\n  @keyframes spin {\\r\\n    0% {\\r\\n      transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      transform: rotate(360deg);\\r\\n    }\\r\\n  }"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL3NyYy9qcy9jb21wb25lbnRzL2ZpbGVfdXBsb2FkL2ZpbGVfdXBsb2FkLmNzcz9jNTU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAjZmlsZS1pbnB1dCB7XHJcbiAgICBtYXJnaW4tbGVmdDogNDAlO1xyXG59XHJcblxyXG4vKiBTcGlubmVyIFN0eWxlcyAqL1xyXG4uc3Bpbm5lciB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgYm9yZGVyOiAyMHB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlci10b3AtY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICAgIGFuaW1hdGlvbjogc3BpbiAxcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogRW5zdXJlcyBpdCBzdGF5cyBmaXhlZCByZWxhdGl2ZSB0byB0aGUgdmlld3BvcnQgKi9cclxuICAgIHRvcDogMjAlOyAvKiBDZW50ZXIgdmVydGljYWxseSAqL1xyXG4gICAgbGVmdDogNDMlOyAvKiBDZW50ZXIgaG9yaXpvbnRhbGx5ICovXHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgLyogQ2VudHJhbGl6ZSB0aGUgc3Bpbm5lciBleGFjdGx5ICovXHJcbiAgICB6LWluZGV4OiA5OTk5OyAvKiBFbnN1cmVzIGl0IGFwcGVhcnMgaW4gZnJvbnQgb2Ygb3RoZXIgZWxlbWVudHMgKi9cclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTsgLyogT3B0aW9uYWw6IGxpZ2h0IGJhY2tncm91bmQgKi9cclxuICAgIHBhZGRpbmc6IDIwcHg7IC8qIE9wdGlvbmFsOiBleHRyYSBwYWRkaW5nIGZvciBiZXR0ZXIgdmlzaWJpbGl0eSAqL1xyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIHNwaW4ge1xyXG4gICAgMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgfVxyXG4gIH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9qcy9jb21wb25lbnRzL2ZpbGVfdXBsb2FkL2ZpbGVfdXBsb2FkLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQSxtQkFBbUI7QUFDbkI7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGFBQWE7SUFDYixxQ0FBcUM7SUFDckMsa0JBQWtCO0lBQ2xCLG9DQUFvQztJQUNwQyx1Q0FBdUM7SUFDdkMsZUFBZSxFQUFFLG9EQUFvRDtJQUNyRSxRQUFRLEVBQUUsc0JBQXNCO0lBQ2hDLFNBQVMsRUFBRSx3QkFBd0I7SUFDbkMsZ0NBQWdDLEVBQUUsbUNBQW1DO0lBQ3JFLGFBQWEsRUFBRSxrREFBa0Q7SUFDakUsMENBQTBDLEVBQUUsK0JBQStCO0lBQzNFLGFBQWEsRUFBRSxrREFBa0Q7RUFDbkU7O0VBRUE7SUFDRTtNQUNFLHVCQUF1QjtJQUN6QjtJQUNBO01BQ0UseUJBQXlCO0lBQzNCO0VBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiI2ZpbGUtaW5wdXQge1xcclxcbiAgICBtYXJnaW4tbGVmdDogNDAlO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBTcGlubmVyIFN0eWxlcyAqL1xcclxcbi5zcGlubmVyIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aWR0aDogMTUwcHg7XFxyXFxuICAgIGhlaWdodDogMTUwcHg7XFxyXFxuICAgIGJvcmRlcjogMjBweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tc3Bpcml0Z3JlZW4pO1xcclxcbiAgICBhbmltYXRpb246IHNwaW4gMXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDsgLyogRW5zdXJlcyBpdCBzdGF5cyBmaXhlZCByZWxhdGl2ZSB0byB0aGUgdmlld3BvcnQgKi9cXHJcXG4gICAgdG9wOiAyMCU7IC8qIENlbnRlciB2ZXJ0aWNhbGx5ICovXFxyXFxuICAgIGxlZnQ6IDQzJTsgLyogQ2VudGVyIGhvcml6b250YWxseSAqL1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgLyogQ2VudHJhbGl6ZSB0aGUgc3Bpbm5lciBleGFjdGx5ICovXFxyXFxuICAgIHotaW5kZXg6IDk5OTk7IC8qIEVuc3VyZXMgaXQgYXBwZWFycyBpbiBmcm9udCBvZiBvdGhlciBlbGVtZW50cyAqL1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7IC8qIE9wdGlvbmFsOiBsaWdodCBiYWNrZ3JvdW5kICovXFxyXFxuICAgIHBhZGRpbmc6IDIwcHg7IC8qIE9wdGlvbmFsOiBleHRyYSBwYWRkaW5nIGZvciBiZXR0ZXIgdmlzaWJpbGl0eSAqL1xcclxcbiAgfVxcclxcbiAgXFxyXFxuICBAa2V5ZnJhbWVzIHNwaW4ge1xcclxcbiAgICAwJSB7XFxyXFxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XFxyXFxuICAgIH1cXHJcXG4gICAgMTAwJSB7XFxyXFxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcXHJcXG4gICAgfVxcclxcbiAgfVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///39\n')},109:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `textarea {height: 100px; width: 100%;}\r\n\r\ntextarea, input, select {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.btn-submit {\r\n    margin-top: 20px;\r\n    width: 60%;\r\n    margin-left: 20%;\r\n    background-color: var(--spiritgreen);\r\n}\r\n\r\n#new-form label {\r\n    display: block; /* Ensure label is on its own line */\r\n    margin-bottom: 0.25em; \r\n}\r\n\r\n#new-form select {\r\n    min-width: 300px;\r\n}\r\n\r\n/* Thicker red border when focused */\r\ninput[readonly]:focus {\r\n    border: 2px solid red;\r\n    outline: none; /* Remove the default outline */\r\n}\r\n\r\n.error-message {\r\n    color: red;\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/form/form.css"],"names":[],"mappings":"AAAA,UAAU,aAAa,EAAE,WAAW,CAAC;;AAErC;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,UAAU;IACV,gBAAgB;IAChB,oCAAoC;AACxC;;AAEA;IACI,cAAc,EAAE,oCAAoC;IACpD,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;AACpB;;AAEA,oCAAoC;AACpC;IACI,qBAAqB;IACrB,aAAa,EAAE,+BAA+B;AAClD;;AAEA;IACI,UAAU;AACd","sourcesContent":["textarea {height: 100px; width: 100%;}\\r\\n\\r\\ntextarea, input, select {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.btn-submit {\\r\\n    margin-top: 20px;\\r\\n    width: 60%;\\r\\n    margin-left: 20%;\\r\\n    background-color: var(--spiritgreen);\\r\\n}\\r\\n\\r\\n#new-form label {\\r\\n    display: block; /* Ensure label is on its own line */\\r\\n    margin-bottom: 0.25em; \\r\\n}\\r\\n\\r\\n#new-form select {\\r\\n    min-width: 300px;\\r\\n}\\r\\n\\r\\n/* Thicker red border when focused */\\r\\ninput[readonly]:focus {\\r\\n    border: 2px solid red;\\r\\n    outline: none; /* Remove the default outline */\\r\\n}\\r\\n\\r\\n.error-message {\\r\\n    color: red;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL3NyYy9qcy9jb21wb25lbnRzL2Zvcm0vZm9ybS5jc3M/ZTM4YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgdGV4dGFyZWEge2hlaWdodDogMTAwcHg7IHdpZHRoOiAxMDAlO31cclxuXHJcbnRleHRhcmVhLCBpbnB1dCwgc2VsZWN0IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLmJ0bi1zdWJtaXQge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgICBtYXJnaW4tbGVmdDogMjAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3Bpcml0Z3JlZW4pO1xyXG59XHJcblxyXG4jbmV3LWZvcm0gbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7IC8qIEVuc3VyZSBsYWJlbCBpcyBvbiBpdHMgb3duIGxpbmUgKi9cclxuICAgIG1hcmdpbi1ib3R0b206IDAuMjVlbTsgXHJcbn1cclxuXHJcbiNuZXctZm9ybSBzZWxlY3Qge1xyXG4gICAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuLyogVGhpY2tlciByZWQgYm9yZGVyIHdoZW4gZm9jdXNlZCAqL1xyXG5pbnB1dFtyZWFkb25seV06Zm9jdXMge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG4gICAgb3V0bGluZTogbm9uZTsgLyogUmVtb3ZlIHRoZSBkZWZhdWx0IG91dGxpbmUgKi9cclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2Uge1xyXG4gICAgY29sb3I6IHJlZDtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2pzL2NvbXBvbmVudHMvZm9ybS9mb3JtLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxVQUFVLGFBQWEsRUFBRSxXQUFXLENBQUM7O0FBRXJDO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksY0FBYyxFQUFFLG9DQUFvQztJQUNwRCxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUEsb0NBQW9DO0FBQ3BDO0lBQ0kscUJBQXFCO0lBQ3JCLGFBQWEsRUFBRSwrQkFBK0I7QUFDbEQ7O0FBRUE7SUFDSSxVQUFVO0FBQ2RcIixcInNvdXJjZXNDb250ZW50XCI6W1widGV4dGFyZWEge2hlaWdodDogMTAwcHg7IHdpZHRoOiAxMDAlO31cXHJcXG5cXHJcXG50ZXh0YXJlYSwgaW5wdXQsIHNlbGVjdCB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0bi1zdWJtaXQge1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgICB3aWR0aDogNjAlO1xcclxcbiAgICBtYXJnaW4tbGVmdDogMjAlO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zcGlyaXRncmVlbik7XFxyXFxufVxcclxcblxcclxcbiNuZXctZm9ybSBsYWJlbCB7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrOyAvKiBFbnN1cmUgbGFiZWwgaXMgb24gaXRzIG93biBsaW5lICovXFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDAuMjVlbTsgXFxyXFxufVxcclxcblxcclxcbiNuZXctZm9ybSBzZWxlY3Qge1xcclxcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4vKiBUaGlja2VyIHJlZCBib3JkZXIgd2hlbiBmb2N1c2VkICovXFxyXFxuaW5wdXRbcmVhZG9ubHldOmZvY3VzIHtcXHJcXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xcclxcbiAgICBvdXRsaW5lOiBub25lOyAvKiBSZW1vdmUgdGhlIGRlZmF1bHQgb3V0bGluZSAqL1xcclxcbn1cXHJcXG5cXHJcXG4uZXJyb3ItbWVzc2FnZSB7XFxyXFxuICAgIGNvbG9yOiByZWQ7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///109\n')},107:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\r\nh1 {\r\n    text-align: center;\r\n    font-size: 30px;\r\n}\r\n\r\nh2 {\r\n    color: var(--darkGray);\r\n    text-align: center;\r\n    font-size: 20px;\r\n}\r\n\r\nheader {\r\n    align-items: center;\r\n    background-color: white;\r\n    padding: 5px;\r\n    border-bottom: 1px solid var(--citygreen); \r\n    /* border: 1px solid var(--citygreen);  */\r\n    height: var(--header-height);\r\n    /* width: calc(100vw - var(--sidebar-width)); */\r\n    padding-left: 20px;\r\n}\r\n\r\n/* Logo styling */\r\n#logo {\r\n    height: 50px; /* Or your desired size */\r\n    margin-right: 20px; /* Optional: space between logo and title */\r\n    margin-bottom: -50px;\r\n    margin-top: 10px;\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/header/header.css"],"names":[],"mappings":";AACA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,yCAAyC;IACzC,yCAAyC;IACzC,4BAA4B;IAC5B,+CAA+C;IAC/C,kBAAkB;AACtB;;AAEA,iBAAiB;AACjB;IACI,YAAY,EAAE,yBAAyB;IACvC,kBAAkB,EAAE,2CAA2C;IAC/D,oBAAoB;IACpB,gBAAgB;AACpB","sourcesContent":["\\r\\nh1 {\\r\\n    text-align: center;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    color: var(--darkGray);\\r\\n    text-align: center;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\nheader {\\r\\n    align-items: center;\\r\\n    background-color: white;\\r\\n    padding: 5px;\\r\\n    border-bottom: 1px solid var(--citygreen); \\r\\n    /* border: 1px solid var(--citygreen);  */\\r\\n    height: var(--header-height);\\r\\n    /* width: calc(100vw - var(--sidebar-width)); */\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n/* Logo styling */\\r\\n#logo {\\r\\n    height: 50px; /* Or your desired size */\\r\\n    margin-right: 20px; /* Optional: space between logo and title */\\r\\n    margin-bottom: -50px;\\r\\n    margin-top: 10px;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2J1ZGdldC1yZXF1ZXN0LWZvcm0vLi9zcmMvanMvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNzcz8yZjRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBcclxuaDEge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBjb2xvcjogdmFyKC0tZGFya0dyYXkpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG5oZWFkZXIge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWNpdHlncmVlbik7IFxyXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY2l0eWdyZWVuKTsgICovXHJcbiAgICBoZWlnaHQ6IHZhcigtLWhlYWRlci1oZWlnaHQpO1xyXG4gICAgLyogd2lkdGg6IGNhbGMoMTAwdncgLSB2YXIoLS1zaWRlYmFyLXdpZHRoKSk7ICovXHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbi8qIExvZ28gc3R5bGluZyAqL1xyXG4jbG9nbyB7XHJcbiAgICBoZWlnaHQ6IDUwcHg7IC8qIE9yIHlvdXIgZGVzaXJlZCBzaXplICovXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IC8qIE9wdGlvbmFsOiBzcGFjZSBiZXR3ZWVuIGxvZ28gYW5kIHRpdGxlICovXHJcbiAgICBtYXJnaW4tYm90dG9tOiAtNTBweDtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9qcy9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1oseUNBQXlDO0lBQ3pDLHlDQUF5QztJQUN6Qyw0QkFBNEI7SUFDNUIsK0NBQStDO0lBQy9DLGtCQUFrQjtBQUN0Qjs7QUFFQSxpQkFBaUI7QUFDakI7SUFDSSxZQUFZLEVBQUUseUJBQXlCO0lBQ3ZDLGtCQUFrQixFQUFFLDJDQUEyQztJQUMvRCxvQkFBb0I7SUFDcEIsZ0JBQWdCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcclxcbmgxIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBmb250LXNpemU6IDMwcHg7XFxyXFxufVxcclxcblxcclxcbmgyIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWRhcmtHcmF5KTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBmb250LXNpemU6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbmhlYWRlciB7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1jaXR5Z3JlZW4pOyBcXHJcXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY2l0eWdyZWVuKTsgICovXFxyXFxuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWhlaWdodCk7XFxyXFxuICAgIC8qIHdpZHRoOiBjYWxjKDEwMHZ3IC0gdmFyKC0tc2lkZWJhci13aWR0aCkpOyAqL1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbi8qIExvZ28gc3R5bGluZyAqL1xcclxcbiNsb2dvIHtcXHJcXG4gICAgaGVpZ2h0OiA1MHB4OyAvKiBPciB5b3VyIGRlc2lyZWQgc2l6ZSAqL1xcclxcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IC8qIE9wdGlvbmFsOiBzcGFjZSBiZXR3ZWVuIGxvZ28gYW5kIHRpdGxlICovXFxyXFxuICAgIG1hcmdpbi1ib3R0b206IC01MHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///107\n')},95:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWRnZXQtcmVxdWVzdC1mb3JtLy4vc3JjL2pzL2NvbXBvbmVudHMvbW9kYWwvbW9kYWwuY3NzPzZhY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W10sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIlwiLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///95\n')},595:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#nav-btns {\r\n    margin: 20px;\r\n    text-align: center;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    /* position: absolute; or \'absolute\' depending on use-case */\r\n    /* top: 100px; Distance from the top of the viewport or the closest positioned ancestor */\r\n}\r\n\r\n#btn-next, #btn-last {\r\n    background-color: var(--darkGray);\r\n}\r\n\r\n#btn-next:hover, #btn-last:hover {\r\n    background-color: var(--yellow);\r\n    color: var(--darkGray);\r\n}\r\n\r\n/* Add style for when you cannot click the next button */\r\n#btn-next.disabled, #btn-last.disabled,\r\n#btn-next.disabled:hover, #btn-last.disabled:hover {\r\n    background-color: gray;\r\n    color: white;\r\n    pointer-events: none;\r\n    \r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/nav_buttons/nav_buttons.css"],"names":[],"mappings":"AAAA;IACI,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,4DAA4D;IAC5D,yFAAyF;AAC7F;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,+BAA+B;IAC/B,sBAAsB;AAC1B;;AAEA,wDAAwD;AACxD;;IAEI,sBAAsB;IACtB,YAAY;IACZ,oBAAoB;;AAExB","sourcesContent":["#nav-btns {\\r\\n    margin: 20px;\\r\\n    text-align: center;\\r\\n    margin-top: 5px;\\r\\n    margin-bottom: 5px;\\r\\n    /* position: absolute; or \'absolute\' depending on use-case */\\r\\n    /* top: 100px; Distance from the top of the viewport or the closest positioned ancestor */\\r\\n}\\r\\n\\r\\n#btn-next, #btn-last {\\r\\n    background-color: var(--darkGray);\\r\\n}\\r\\n\\r\\n#btn-next:hover, #btn-last:hover {\\r\\n    background-color: var(--yellow);\\r\\n    color: var(--darkGray);\\r\\n}\\r\\n\\r\\n/* Add style for when you cannot click the next button */\\r\\n#btn-next.disabled, #btn-last.disabled,\\r\\n#btn-next.disabled:hover, #btn-last.disabled:hover {\\r\\n    background-color: gray;\\r\\n    color: white;\\r\\n    pointer-events: none;\\r\\n    \\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWRnZXQtcmVxdWVzdC1mb3JtLy4vc3JjL2pzL2NvbXBvbmVudHMvbmF2X2J1dHRvbnMvbmF2X2J1dHRvbnMuY3NzPzkwNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYCNuYXYtYnRucyB7XHJcbiAgICBtYXJnaW46IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAvKiBwb3NpdGlvbjogYWJzb2x1dGU7IG9yICdhYnNvbHV0ZScgZGVwZW5kaW5nIG9uIHVzZS1jYXNlICovXHJcbiAgICAvKiB0b3A6IDEwMHB4OyBEaXN0YW5jZSBmcm9tIHRoZSB0b3Agb2YgdGhlIHZpZXdwb3J0IG9yIHRoZSBjbG9zZXN0IHBvc2l0aW9uZWQgYW5jZXN0b3IgKi9cclxufVxyXG5cclxuI2J0bi1uZXh0LCAjYnRuLWxhc3Qge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFya0dyYXkpO1xyXG59XHJcblxyXG4jYnRuLW5leHQ6aG92ZXIsICNidG4tbGFzdDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS15ZWxsb3cpO1xyXG4gICAgY29sb3I6IHZhcigtLWRhcmtHcmF5KTtcclxufVxyXG5cclxuLyogQWRkIHN0eWxlIGZvciB3aGVuIHlvdSBjYW5ub3QgY2xpY2sgdGhlIG5leHQgYnV0dG9uICovXHJcbiNidG4tbmV4dC5kaXNhYmxlZCwgI2J0bi1sYXN0LmRpc2FibGVkLFxyXG4jYnRuLW5leHQuZGlzYWJsZWQ6aG92ZXIsICNidG4tbGFzdC5kaXNhYmxlZDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICBcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2pzL2NvbXBvbmVudHMvbmF2X2J1dHRvbnMvbmF2X2J1dHRvbnMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLDREQUE0RDtJQUM1RCx5RkFBeUY7QUFDN0Y7O0FBRUE7SUFDSSxpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSwrQkFBK0I7SUFDL0Isc0JBQXNCO0FBQzFCOztBQUVBLHdEQUF3RDtBQUN4RDs7SUFFSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLG9CQUFvQjs7QUFFeEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiI25hdi1idG5zIHtcXHJcXG4gICAgbWFyZ2luOiAyMHB4O1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi10b3A6IDVweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcclxcbiAgICAvKiBwb3NpdGlvbjogYWJzb2x1dGU7IG9yICdhYnNvbHV0ZScgZGVwZW5kaW5nIG9uIHVzZS1jYXNlICovXFxyXFxuICAgIC8qIHRvcDogMTAwcHg7IERpc3RhbmNlIGZyb20gdGhlIHRvcCBvZiB0aGUgdmlld3BvcnQgb3IgdGhlIGNsb3Nlc3QgcG9zaXRpb25lZCBhbmNlc3RvciAqL1xcclxcbn1cXHJcXG5cXHJcXG4jYnRuLW5leHQsICNidG4tbGFzdCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcmtHcmF5KTtcXHJcXG59XFxyXFxuXFxyXFxuI2J0bi1uZXh0OmhvdmVyLCAjYnRuLWxhc3Q6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS15ZWxsb3cpO1xcclxcbiAgICBjb2xvcjogdmFyKC0tZGFya0dyYXkpO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBBZGQgc3R5bGUgZm9yIHdoZW4geW91IGNhbm5vdCBjbGljayB0aGUgbmV4dCBidXR0b24gKi9cXHJcXG4jYnRuLW5leHQuZGlzYWJsZWQsICNidG4tbGFzdC5kaXNhYmxlZCxcXHJcXG4jYnRuLW5leHQuZGlzYWJsZWQ6aG92ZXIsICNidG4tbGFzdC5kaXNhYmxlZDpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxyXFxuICAgIFxcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///595\n')},225:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div#prompt-div {\r\n    display: none;\r\n    width: 80%;\r\n    margin: auto;\r\n    text-align: center;\r\n}\r\n\r\nh3#prompt {\r\n    text-align: center;\r\n    font-size : 1.2em;\r\n}\r\n\r\n#option1, #option2 { \r\n    font-size: 1.5em;\r\n    border-color: var(--citygreen); \r\n    border-width: 2px;\r\n    background-color: var(--white);\r\n    color: var(--citygreen);\r\n}\r\n\r\n#option1:hover, #option2:hover { \r\n    background-color: var(--spiritgreen);\r\n    color: white;\r\n}\r\n\r\n#option2.clicked, #option1.clicked {\r\n    font-weight: bold;\r\n    background-color: var(--spiritgreen);\r\n    color: white;\r\n    border-width: 3;\r\n}\r\n\r\n#option1.disabled, #option2.disabled, #option1.disabled:hover, #option2.disabled:hover {\r\n    background-color: lightgray;\r\n    color: gray;\r\n    pointer-events: none;\r\n    border-color: gray;\r\n}\r\n\r\n`, "",{"version":3,"sources":["webpack://./src/js/components/prompt/prompt.css"],"names":[],"mappings":"AAAA;IACI,aAAa;IACb,UAAU;IACV,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,8BAA8B;IAC9B,iBAAiB;IACjB,8BAA8B;IAC9B,uBAAuB;AAC3B;;AAEA;IACI,oCAAoC;IACpC,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,oCAAoC;IACpC,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,2BAA2B;IAC3B,WAAW;IACX,oBAAoB;IACpB,kBAAkB;AACtB","sourcesContent":["div#prompt-div {\\r\\n    display: none;\\r\\n    width: 80%;\\r\\n    margin: auto;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nh3#prompt {\\r\\n    text-align: center;\\r\\n    font-size : 1.2em;\\r\\n}\\r\\n\\r\\n#option1, #option2 { \\r\\n    font-size: 1.5em;\\r\\n    border-color: var(--citygreen); \\r\\n    border-width: 2px;\\r\\n    background-color: var(--white);\\r\\n    color: var(--citygreen);\\r\\n}\\r\\n\\r\\n#option1:hover, #option2:hover { \\r\\n    background-color: var(--spiritgreen);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#option2.clicked, #option1.clicked {\\r\\n    font-weight: bold;\\r\\n    background-color: var(--spiritgreen);\\r\\n    color: white;\\r\\n    border-width: 3;\\r\\n}\\r\\n\\r\\n#option1.disabled, #option2.disabled, #option1.disabled:hover, #option2.disabled:hover {\\r\\n    background-color: lightgray;\\r\\n    color: gray;\\r\\n    pointer-events: none;\\r\\n    border-color: gray;\\r\\n}\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL3NyYy9qcy9jb21wb25lbnRzL3Byb21wdC9wcm9tcHQuY3NzP2U2OTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGRpdiNwcm9tcHQtZGl2IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5oMyNwcm9tcHQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplIDogMS4yZW07XHJcbn1cclxuXHJcbiNvcHRpb24xLCAjb3B0aW9uMiB7IFxyXG4gICAgZm9udC1zaXplOiAxLjVlbTtcclxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2l0eWdyZWVuKTsgXHJcbiAgICBib3JkZXItd2lkdGg6IDJweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdoaXRlKTtcclxuICAgIGNvbG9yOiB2YXIoLS1jaXR5Z3JlZW4pO1xyXG59XHJcblxyXG4jb3B0aW9uMTpob3ZlciwgI29wdGlvbjI6aG92ZXIgeyBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuI29wdGlvbjIuY2xpY2tlZCwgI29wdGlvbjEuY2xpY2tlZCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci13aWR0aDogMztcclxufVxyXG5cclxuI29wdGlvbjEuZGlzYWJsZWQsICNvcHRpb24yLmRpc2FibGVkLCAjb3B0aW9uMS5kaXNhYmxlZDpob3ZlciwgI29wdGlvbjIuZGlzYWJsZWQ6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG4gICAgY29sb3I6IGdyYXk7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIGJvcmRlci1jb2xvcjogZ3JheTtcclxufVxyXG5cclxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvanMvY29tcG9uZW50cy9wcm9tcHQvcHJvbXB0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixVQUFVO0lBQ1YsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsOEJBQThCO0lBQzlCLGlCQUFpQjtJQUNqQiw4QkFBOEI7SUFDOUIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksb0NBQW9DO0lBQ3BDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsb0NBQW9DO0lBQ3BDLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxvQkFBb0I7SUFDcEIsa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImRpdiNwcm9tcHQtZGl2IHtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG4gICAgd2lkdGg6IDgwJTtcXHJcXG4gICAgbWFyZ2luOiBhdXRvO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbmgzI3Byb21wdCB7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgZm9udC1zaXplIDogMS4yZW07XFxyXFxufVxcclxcblxcclxcbiNvcHRpb24xLCAjb3B0aW9uMiB7IFxcclxcbiAgICBmb250LXNpemU6IDEuNWVtO1xcclxcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWNpdHlncmVlbik7IFxcclxcbiAgICBib3JkZXItd2lkdGg6IDJweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2hpdGUpO1xcclxcbiAgICBjb2xvcjogdmFyKC0tY2l0eWdyZWVuKTtcXHJcXG59XFxyXFxuXFxyXFxuI29wdGlvbjE6aG92ZXIsICNvcHRpb24yOmhvdmVyIHsgXFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4jb3B0aW9uMi5jbGlja2VkLCAjb3B0aW9uMS5jbGlja2VkIHtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbiAgICBib3JkZXItd2lkdGg6IDM7XFxyXFxufVxcclxcblxcclxcbiNvcHRpb24xLmRpc2FibGVkLCAjb3B0aW9uMi5kaXNhYmxlZCwgI29wdGlvbjEuZGlzYWJsZWQ6aG92ZXIsICNvcHRpb24yLmRpc2FibGVkOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xcclxcbiAgICBjb2xvcjogZ3JheTtcXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogZ3JheTtcXHJcXG59XFxyXFxuXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///225\n')},263:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#sidebar-panel {\r\n    background-color: lightgrey;  \r\n    /* min-height: 100vh; Full height of viewport */\r\n  }\r\n\r\n#supp-total .stat {\r\n    color: var(--yellow);\r\n}\r\n\r\n.stat {\r\n    font-weight: bold;\r\n}\r\n\r\n#sidebar-panel {\r\n    height: 100%; /* Full height of the viewport */\r\n    position: fixed; /* Fixed Sidebar (stay in place on scroll) */\r\n    z-index: 1; /* Stay on top */\r\n    top: 0; /* Stay at the top */\r\n    right: 0; /* Sidebar appears on the left */\r\n    background-color: #FFFFFF; /* White background color */\r\n    overflow-x: hidden; /* Disable horizontal scroll */\r\n    padding: 20px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Add shadow for some depth */\r\n    border-right: 2px solid #DDDDDD; /* Right border */\r\n    border-radius: 0px 0px 0px 15px; /* Rounded corners on the left */\r\n    /* margin-top: var(--header-height); */\r\n    width: var(--sidebar-width);\r\n    margin: 0px;\r\n  }\r\n  \r\n.sidebar a {\r\n    padding: 10px 15px;\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    color: #818181;\r\n    display: block;\r\n    transition: 0.3s;\r\n}\r\n\r\n#sidebar-title {\r\n  color: var(--darkGray);\r\n  font-weight: bold;\r\n  border-bottom: 1px solid var(--citygreen);\r\n}\r\n\r\nhr {\r\n  margin-top: -5px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\nh6 {\r\n  font-weight: 600;\r\n}\r\n\r\n.section-header {\r\n  background-color: var(--mediumGray);\r\n}\r\n\r\n.sidebar-stat-line {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between; /* Distribute space between children */\r\n  padding: 2px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.edit-icon, .edit-supp {\r\n  color: var(--spiritgreen);\r\n  cursor: pointer;\r\n  font-size: 16px; /* Adjust the size as needed */\r\n  margin-left: 10px;\r\n}\r\n\r\n.edit-icon:hover .edit-supp:hover {\r\n  color: var(--citygreen);\r\n}\r\n\r\n.stat-label {\r\n  margin-right: auto; /* Push next elements to the right */\r\n}\r\n\r\n.stat {\r\n  margin-left: 5px; /* Optional: Add some space between currency and edit icon */\r\n}\r\n\r\n.sidebar-stat-line.fund-total .stat {\r\n  margin-right: 05px; /* 25px lines up with lines above (with edit symbol) */\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/sidebar/sidebar.css"],"names":[],"mappings":"AAAA;IACI,2BAA2B;IAC3B,+CAA+C;EACjD;;AAEF;IACI,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY,EAAE,gCAAgC;IAC9C,eAAe,EAAE,4CAA4C;IAC7D,UAAU,EAAE,gBAAgB;IAC5B,MAAM,EAAE,oBAAoB;IAC5B,QAAQ,EAAE,gCAAgC;IAC1C,yBAAyB,EAAE,2BAA2B;IACtD,kBAAkB,EAAE,8BAA8B;IAClD,aAAa;IACb,wCAAwC,EAAE,8BAA8B;IACxE,+BAA+B,EAAE,iBAAiB;IAClD,+BAA+B,EAAE,gCAAgC;IACjE,sCAAsC;IACtC,2BAA2B;IAC3B,WAAW;EACb;;AAEF;IACI,kBAAkB;IAClB,qBAAqB;IACrB,eAAe;IACf,cAAc;IACd,cAAc;IACd,gBAAgB;AACpB;;AAEA;EACE,sBAAsB;EACtB,iBAAiB;EACjB,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B,EAAE,sCAAsC;EACtE,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,yBAAyB;EACzB,eAAe;EACf,eAAe,EAAE,8BAA8B;EAC/C,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,kBAAkB,EAAE,oCAAoC;AAC1D;;AAEA;EACE,gBAAgB,EAAE,4DAA4D;AAChF;;AAEA;EACE,kBAAkB,EAAE,sDAAsD;AAC5E","sourcesContent":["#sidebar-panel {\\r\\n    background-color: lightgrey;  \\r\\n    /* min-height: 100vh; Full height of viewport */\\r\\n  }\\r\\n\\r\\n#supp-total .stat {\\r\\n    color: var(--yellow);\\r\\n}\\r\\n\\r\\n.stat {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n#sidebar-panel {\\r\\n    height: 100%; /* Full height of the viewport */\\r\\n    position: fixed; /* Fixed Sidebar (stay in place on scroll) */\\r\\n    z-index: 1; /* Stay on top */\\r\\n    top: 0; /* Stay at the top */\\r\\n    right: 0; /* Sidebar appears on the left */\\r\\n    background-color: #FFFFFF; /* White background color */\\r\\n    overflow-x: hidden; /* Disable horizontal scroll */\\r\\n    padding: 20px;\\r\\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Add shadow for some depth */\\r\\n    border-right: 2px solid #DDDDDD; /* Right border */\\r\\n    border-radius: 0px 0px 0px 15px; /* Rounded corners on the left */\\r\\n    /* margin-top: var(--header-height); */\\r\\n    width: var(--sidebar-width);\\r\\n    margin: 0px;\\r\\n  }\\r\\n  \\r\\n.sidebar a {\\r\\n    padding: 10px 15px;\\r\\n    text-decoration: none;\\r\\n    font-size: 18px;\\r\\n    color: #818181;\\r\\n    display: block;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\\r\\n#sidebar-title {\\r\\n  color: var(--darkGray);\\r\\n  font-weight: bold;\\r\\n  border-bottom: 1px solid var(--citygreen);\\r\\n}\\r\\n\\r\\nhr {\\r\\n  margin-top: -5px;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\nh6 {\\r\\n  font-weight: 600;\\r\\n}\\r\\n\\r\\n.section-header {\\r\\n  background-color: var(--mediumGray);\\r\\n}\\r\\n\\r\\n.sidebar-stat-line {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between; /* Distribute space between children */\\r\\n  padding: 2px;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n}\\r\\n\\r\\n.edit-icon, .edit-supp {\\r\\n  color: var(--spiritgreen);\\r\\n  cursor: pointer;\\r\\n  font-size: 16px; /* Adjust the size as needed */\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.edit-icon:hover .edit-supp:hover {\\r\\n  color: var(--citygreen);\\r\\n}\\r\\n\\r\\n.stat-label {\\r\\n  margin-right: auto; /* Push next elements to the right */\\r\\n}\\r\\n\\r\\n.stat {\\r\\n  margin-left: 5px; /* Optional: Add some space between currency and edit icon */\\r\\n}\\r\\n\\r\\n.sidebar-stat-line.fund-total .stat {\\r\\n  margin-right: 05px; /* 25px lines up with lines above (with edit symbol) */\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL3NyYy9qcy9jb21wb25lbnRzL3NpZGViYXIvc2lkZWJhci5jc3M/M2IwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgI3NpZGViYXItcGFuZWwge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5OyAgXHJcbiAgICAvKiBtaW4taGVpZ2h0OiAxMDB2aDsgRnVsbCBoZWlnaHQgb2Ygdmlld3BvcnQgKi9cclxuICB9XHJcblxyXG4jc3VwcC10b3RhbCAuc3RhdCB7XHJcbiAgICBjb2xvcjogdmFyKC0teWVsbG93KTtcclxufVxyXG5cclxuLnN0YXQge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbiNzaWRlYmFyLXBhbmVsIHtcclxuICAgIGhlaWdodDogMTAwJTsgLyogRnVsbCBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0ICovXHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIFNpZGViYXIgKHN0YXkgaW4gcGxhY2Ugb24gc2Nyb2xsKSAqL1xyXG4gICAgei1pbmRleDogMTsgLyogU3RheSBvbiB0b3AgKi9cclxuICAgIHRvcDogMDsgLyogU3RheSBhdCB0aGUgdG9wICovXHJcbiAgICByaWdodDogMDsgLyogU2lkZWJhciBhcHBlYXJzIG9uIHRoZSBsZWZ0ICovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyAvKiBXaGl0ZSBiYWNrZ3JvdW5kIGNvbG9yICovXHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47IC8qIERpc2FibGUgaG9yaXpvbnRhbCBzY3JvbGwgKi9cclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBBZGQgc2hhZG93IGZvciBzb21lIGRlcHRoICovXHJcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjREREREREOyAvKiBSaWdodCBib3JkZXIgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMHB4IDE1cHg7IC8qIFJvdW5kZWQgY29ybmVycyBvbiB0aGUgbGVmdCAqL1xyXG4gICAgLyogbWFyZ2luLXRvcDogdmFyKC0taGVhZGVyLWhlaWdodCk7ICovXHJcbiAgICB3aWR0aDogdmFyKC0tc2lkZWJhci13aWR0aCk7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICB9XHJcbiAgXHJcbi5zaWRlYmFyIGEge1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgY29sb3I6ICM4MTgxODE7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbn1cclxuXHJcbiNzaWRlYmFyLXRpdGxlIHtcclxuICBjb2xvcjogdmFyKC0tZGFya0dyYXkpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1jaXR5Z3JlZW4pO1xyXG59XHJcblxyXG5ociB7XHJcbiAgbWFyZ2luLXRvcDogLTVweDtcclxuICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuXHJcbmg2IHtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uc2VjdGlvbi1oZWFkZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1lZGl1bUdyYXkpO1xyXG59XHJcblxyXG4uc2lkZWJhci1zdGF0LWxpbmUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IC8qIERpc3RyaWJ1dGUgc3BhY2UgYmV0d2VlbiBjaGlsZHJlbiAqL1xyXG4gIHBhZGRpbmc6IDJweDtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcclxufVxyXG5cclxuLmVkaXQtaWNvbiwgLmVkaXQtc3VwcCB7XHJcbiAgY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZm9udC1zaXplOiAxNnB4OyAvKiBBZGp1c3QgdGhlIHNpemUgYXMgbmVlZGVkICovXHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbi5lZGl0LWljb246aG92ZXIgLmVkaXQtc3VwcDpob3ZlciB7XHJcbiAgY29sb3I6IHZhcigtLWNpdHlncmVlbik7XHJcbn1cclxuXHJcbi5zdGF0LWxhYmVsIHtcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87IC8qIFB1c2ggbmV4dCBlbGVtZW50cyB0byB0aGUgcmlnaHQgKi9cclxufVxyXG5cclxuLnN0YXQge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7IC8qIE9wdGlvbmFsOiBBZGQgc29tZSBzcGFjZSBiZXR3ZWVuIGN1cnJlbmN5IGFuZCBlZGl0IGljb24gKi9cclxufVxyXG5cclxuLnNpZGViYXItc3RhdC1saW5lLmZ1bmQtdG90YWwgLnN0YXQge1xyXG4gIG1hcmdpbi1yaWdodDogMDVweDsgLyogMjVweCBsaW5lcyB1cCB3aXRoIGxpbmVzIGFib3ZlICh3aXRoIGVkaXQgc3ltYm9sKSAqL1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvanMvY29tcG9uZW50cy9zaWRlYmFyL3NpZGViYXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLCtDQUErQztFQUNqRDs7QUFFRjtJQUNJLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFlBQVksRUFBRSxnQ0FBZ0M7SUFDOUMsZUFBZSxFQUFFLDRDQUE0QztJQUM3RCxVQUFVLEVBQUUsZ0JBQWdCO0lBQzVCLE1BQU0sRUFBRSxvQkFBb0I7SUFDNUIsUUFBUSxFQUFFLGdDQUFnQztJQUMxQyx5QkFBeUIsRUFBRSwyQkFBMkI7SUFDdEQsa0JBQWtCLEVBQUUsOEJBQThCO0lBQ2xELGFBQWE7SUFDYix3Q0FBd0MsRUFBRSw4QkFBOEI7SUFDeEUsK0JBQStCLEVBQUUsaUJBQWlCO0lBQ2xELCtCQUErQixFQUFFLGdDQUFnQztJQUNqRSxzQ0FBc0M7SUFDdEMsMkJBQTJCO0lBQzNCLFdBQVc7RUFDYjs7QUFFRjtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQix5Q0FBeUM7QUFDM0M7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsbUNBQW1DO0FBQ3JDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEIsRUFBRSxzQ0FBc0M7RUFDdEUsWUFBWTtFQUNaLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixlQUFlO0VBQ2YsZUFBZSxFQUFFLDhCQUE4QjtFQUMvQyxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxrQkFBa0IsRUFBRSxvQ0FBb0M7QUFDMUQ7O0FBRUE7RUFDRSxnQkFBZ0IsRUFBRSw0REFBNEQ7QUFDaEY7O0FBRUE7RUFDRSxrQkFBa0IsRUFBRSxzREFBc0Q7QUFDNUVcIixcInNvdXJjZXNDb250ZW50XCI6W1wiI3NpZGViYXItcGFuZWwge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7ICBcXHJcXG4gICAgLyogbWluLWhlaWdodDogMTAwdmg7IEZ1bGwgaGVpZ2h0IG9mIHZpZXdwb3J0ICovXFxyXFxuICB9XFxyXFxuXFxyXFxuI3N1cHAtdG90YWwgLnN0YXQge1xcclxcbiAgICBjb2xvcjogdmFyKC0teWVsbG93KTtcXHJcXG59XFxyXFxuXFxyXFxuLnN0YXQge1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG59XFxyXFxuXFxyXFxuI3NpZGViYXItcGFuZWwge1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7IC8qIEZ1bGwgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydCAqL1xcclxcbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIEZpeGVkIFNpZGViYXIgKHN0YXkgaW4gcGxhY2Ugb24gc2Nyb2xsKSAqL1xcclxcbiAgICB6LWluZGV4OiAxOyAvKiBTdGF5IG9uIHRvcCAqL1xcclxcbiAgICB0b3A6IDA7IC8qIFN0YXkgYXQgdGhlIHRvcCAqL1xcclxcbiAgICByaWdodDogMDsgLyogU2lkZWJhciBhcHBlYXJzIG9uIHRoZSBsZWZ0ICovXFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IC8qIFdoaXRlIGJhY2tncm91bmQgY29sb3IgKi9cXHJcXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuOyAvKiBEaXNhYmxlIGhvcml6b250YWwgc2Nyb2xsICovXFxyXFxuICAgIHBhZGRpbmc6IDIwcHg7XFxyXFxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMSk7IC8qIEFkZCBzaGFkb3cgZm9yIHNvbWUgZGVwdGggKi9cXHJcXG4gICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgI0RERERERDsgLyogUmlnaHQgYm9yZGVyICovXFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMHB4IDE1cHg7IC8qIFJvdW5kZWQgY29ybmVycyBvbiB0aGUgbGVmdCAqL1xcclxcbiAgICAvKiBtYXJnaW4tdG9wOiB2YXIoLS1oZWFkZXItaGVpZ2h0KTsgKi9cXHJcXG4gICAgd2lkdGg6IHZhcigtLXNpZGViYXItd2lkdGgpO1xcclxcbiAgICBtYXJnaW46IDBweDtcXHJcXG4gIH1cXHJcXG4gIFxcclxcbi5zaWRlYmFyIGEge1xcclxcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XFxyXFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgICBjb2xvcjogIzgxODE4MTtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIHRyYW5zaXRpb246IDAuM3M7XFxyXFxufVxcclxcblxcclxcbiNzaWRlYmFyLXRpdGxlIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1kYXJrR3JheSk7XFxyXFxuICBmb250LXdlaWdodDogYm9sZDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1jaXR5Z3JlZW4pO1xcclxcbn1cXHJcXG5cXHJcXG5ociB7XFxyXFxuICBtYXJnaW4tdG9wOiAtNXB4O1xcclxcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xcclxcbn1cXHJcXG5cXHJcXG5oNiB7XFxyXFxuICBmb250LXdlaWdodDogNjAwO1xcclxcbn1cXHJcXG5cXHJcXG4uc2VjdGlvbi1oZWFkZXIge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWVkaXVtR3JheSk7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLXN0YXQtbGluZSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgLyogRGlzdHJpYnV0ZSBzcGFjZSBiZXR3ZWVuIGNoaWxkcmVuICovXFxyXFxuICBwYWRkaW5nOiAycHg7XFxyXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcXHJcXG59XFxyXFxuXFxyXFxuLmVkaXQtaWNvbiwgLmVkaXQtc3VwcCB7XFxyXFxuICBjb2xvcjogdmFyKC0tc3Bpcml0Z3JlZW4pO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgZm9udC1zaXplOiAxNnB4OyAvKiBBZGp1c3QgdGhlIHNpemUgYXMgbmVlZGVkICovXFxyXFxuICBtYXJnaW4tbGVmdDogMTBweDtcXHJcXG59XFxyXFxuXFxyXFxuLmVkaXQtaWNvbjpob3ZlciAuZWRpdC1zdXBwOmhvdmVyIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1jaXR5Z3JlZW4pO1xcclxcbn1cXHJcXG5cXHJcXG4uc3RhdC1sYWJlbCB7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IGF1dG87IC8qIFB1c2ggbmV4dCBlbGVtZW50cyB0byB0aGUgcmlnaHQgKi9cXHJcXG59XFxyXFxuXFxyXFxuLnN0YXQge1xcclxcbiAgbWFyZ2luLWxlZnQ6IDVweDsgLyogT3B0aW9uYWw6IEFkZCBzb21lIHNwYWNlIGJldHdlZW4gY3VycmVuY3kgYW5kIGVkaXQgaWNvbiAqL1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1zdGF0LWxpbmUuZnVuZC10b3RhbCAuc3RhdCB7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDA1cHg7IC8qIDI1cHggbGluZXMgdXAgd2l0aCBsaW5lcyBhYm92ZSAod2l0aCBlZGl0IHN5bWJvbCkgKi9cXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///263\n')},279:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#main-table {\r\n    font-size: 12px;\r\n    /* calc(0.5vw + 0.5em); */\r\n    margin: auto;\r\n    width: 100%;\r\n}\r\n\r\n#main-table thead > tr > th {\r\n    text-align: left;\r\n    background-color: var(--darkGray);\r\n    color: white;\r\n    position: -webkit-sticky; /* For Safari */\r\n    position: sticky;\r\n    top: 0;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    padding-left: 5px;\r\n}\r\n\r\nth {\r\n    background-color: var(--lightGray);\r\n}\r\n\r\ntr {\r\n    border-width: 2px;\r\n    background-color: white;\r\n}\r\n\r\ntr td {\r\n    border-bottom: 1px solid black;\r\n}\r\n\r\n/* Default to hidden columns */\r\n\r\n#main-table tbody > tr > td {\r\n    display : none;\r\n}\r\n#main-table thead > tr > th {\r\n    display : none;\r\n}\r\n\r\n/* textbox width in table */\r\ninput {\r\n    width: 100%;\r\n}\r\n\r\nselect {\r\n    max-width: 100px;\r\n}\r\n\r\ndiv.table-container {\r\n    overflow-x: auto; \r\n    overflow-y: auto;\r\n    margin-left: max(65px, 7vh);\r\n    margin-right: max(65px, 7vh);\r\n    /* max-width: calc(100vw - var(--sidebar-width));  */\r\n    /* margin: auto; */\r\n    max-height: max(350px, 6vh);\r\n    /* min-height: 350px; */\r\n\r\n}\r\n  \r\n/* Buttons */\r\n\r\n/* Add new row button */\r\n.btn-add { \r\n    background-color: var(--spiritgreen);\r\n    margin-top: 20px;\r\n    display: none;\r\n}\r\n\r\n.btn-delete {\r\n    background-color: var(--orange);\r\n}\r\n\r\n#add-btn-div {\r\n    display: flex;\r\n    justify-content: center; /* Aligns horizontally */\r\n    align-items: center; /* Aligns vertically */\r\n    width: 100%;\r\n}\r\n\r\n.btn-edit {\r\n    background-color: var(--spiritgreen);\r\n    line-height: 1.1;\r\n}\r\n\r\n.active-editing, .selected {\r\n    background-color: var(--palegreen);\r\n}\r\n\r\n.selected { \r\n    font-weight: bold;\r\n}\r\n\r\n.btn-confirm {\r\n    display: none;\r\n}\r\n\r\n.confirm-btn:hover {\r\n    background-color: var(--green);\r\n}\r\n\r\n.hover-effect:hover {\r\n    cursor: pointer;\r\n    background-color: var(--verypalegreen); \r\n}\r\n\r\n/* Fund table */\r\n.fund-name > .viewed-fund {\r\n    color: gray;\r\n}\r\n\r\n/* made edit column narrower */\r\nth.edit, td.edit {\r\n    width: 20px;\r\n}\r\n\r\n/* Class for hidden rows on filter */\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n/* Filter styling for the dropdown options */\r\n#filter-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 2px; /* Adjust the gap as needed */\r\n    font-size: 11px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n#filter-container div {\r\n    display: flex;\r\n    align-items: center;\r\n    width: calc(50% - 10px); /* Adjust width to fit two items per row with gap */\r\n}\r\n\r\n#filter-container label {\r\n    width: 200px; /* Adjust the width as needed */\r\n    text-align: right;\r\n    margin-right: 10px; /* Spacing between label and select */\r\n}\r\n\r\n/* Ensure all select boxes are wide enough to show text */\r\n.filter-dropdown {\r\n    flex: 1;\r\n    min-width: 200px; /* Adjust the min-width as needed */\r\n}\r\n\r\n/* Optional styling to make the select dropdown look better */\r\n.filter-dropdown {\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n}\r\n\r\n/* Responsive adjustment: On smaller screens, stack elements vertically */\r\n@media (max-width: 800px) {\r\n    #filter-container div {\r\n        width: 100%;\r\n    }\r\n\r\n    #filter-container label {\r\n        text-align: left;\r\n        width: auto;\r\n        margin-right: 0;\r\n        margin-bottom: 5px;\r\n    }\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/table/table.css"],"names":[],"mappings":"AAAA;IACI,eAAe;IACf,yBAAyB;IACzB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,iCAAiC;IACjC,YAAY;IACZ,wBAAwB,EAAE,eAAe;IACzC,gBAAgB;IAChB,MAAM;IACN,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,8BAA8B;AAClC;;AAEA,8BAA8B;;AAE9B;IACI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;;AAEA,2BAA2B;AAC3B;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,2BAA2B;IAC3B,4BAA4B;IAC5B,oDAAoD;IACpD,kBAAkB;IAClB,2BAA2B;IAC3B,uBAAuB;;AAE3B;;AAEA,YAAY;;AAEZ,uBAAuB;AACvB;IACI,oCAAoC;IACpC,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,uBAAuB,EAAE,wBAAwB;IACjD,mBAAmB,EAAE,sBAAsB;IAC3C,WAAW;AACf;;AAEA;IACI,oCAAoC;IACpC,gBAAgB;AACpB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,eAAe;IACf,sCAAsC;AAC1C;;AAEA,eAAe;AACf;IACI,WAAW;AACf;;AAEA,8BAA8B;AAC9B;IACI,WAAW;AACf;;AAEA,oCAAoC;AACpC;IACI,aAAa;AACjB;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,eAAe;IACf,QAAQ,EAAE,6BAA6B;IACvC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB,EAAE,mDAAmD;AAChF;;AAEA;IACI,YAAY,EAAE,+BAA+B;IAC7C,iBAAiB;IACjB,kBAAkB,EAAE,qCAAqC;AAC7D;;AAEA,yDAAyD;AACzD;IACI,OAAO;IACP,gBAAgB,EAAE,mCAAmC;AACzD;;AAEA,6DAA6D;AAC7D;IACI,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA,yEAAyE;AACzE;IACI;QACI,WAAW;IACf;;IAEA;QACI,gBAAgB;QAChB,WAAW;QACX,eAAe;QACf,kBAAkB;IACtB;AACJ","sourcesContent":["#main-table {\\r\\n    font-size: 12px;\\r\\n    /* calc(0.5vw + 0.5em); */\\r\\n    margin: auto;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n#main-table thead > tr > th {\\r\\n    text-align: left;\\r\\n    background-color: var(--darkGray);\\r\\n    color: white;\\r\\n    position: -webkit-sticky; /* For Safari */\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\nth {\\r\\n    background-color: var(--lightGray);\\r\\n}\\r\\n\\r\\ntr {\\r\\n    border-width: 2px;\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\ntr td {\\r\\n    border-bottom: 1px solid black;\\r\\n}\\r\\n\\r\\n/* Default to hidden columns */\\r\\n\\r\\n#main-table tbody > tr > td {\\r\\n    display : none;\\r\\n}\\r\\n#main-table thead > tr > th {\\r\\n    display : none;\\r\\n}\\r\\n\\r\\n/* textbox width in table */\\r\\ninput {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nselect {\\r\\n    max-width: 100px;\\r\\n}\\r\\n\\r\\ndiv.table-container {\\r\\n    overflow-x: auto; \\r\\n    overflow-y: auto;\\r\\n    margin-left: max(65px, 7vh);\\r\\n    margin-right: max(65px, 7vh);\\r\\n    /* max-width: calc(100vw - var(--sidebar-width));  */\\r\\n    /* margin: auto; */\\r\\n    max-height: max(350px, 6vh);\\r\\n    /* min-height: 350px; */\\r\\n\\r\\n}\\r\\n  \\r\\n/* Buttons */\\r\\n\\r\\n/* Add new row button */\\r\\n.btn-add { \\r\\n    background-color: var(--spiritgreen);\\r\\n    margin-top: 20px;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.btn-delete {\\r\\n    background-color: var(--orange);\\r\\n}\\r\\n\\r\\n#add-btn-div {\\r\\n    display: flex;\\r\\n    justify-content: center; /* Aligns horizontally */\\r\\n    align-items: center; /* Aligns vertically */\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.btn-edit {\\r\\n    background-color: var(--spiritgreen);\\r\\n    line-height: 1.1;\\r\\n}\\r\\n\\r\\n.active-editing, .selected {\\r\\n    background-color: var(--palegreen);\\r\\n}\\r\\n\\r\\n.selected { \\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.btn-confirm {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.confirm-btn:hover {\\r\\n    background-color: var(--green);\\r\\n}\\r\\n\\r\\n.hover-effect:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: var(--verypalegreen); \\r\\n}\\r\\n\\r\\n/* Fund table */\\r\\n.fund-name > .viewed-fund {\\r\\n    color: gray;\\r\\n}\\r\\n\\r\\n/* made edit column narrower */\\r\\nth.edit, td.edit {\\r\\n    width: 20px;\\r\\n}\\r\\n\\r\\n/* Class for hidden rows on filter */\\r\\n.hidden {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n/* Filter styling for the dropdown options */\\r\\n#filter-container {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 2px; /* Adjust the gap as needed */\\r\\n    font-size: 11px;\\r\\n    margin-left: 10%;\\r\\n    margin-right: 10%;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n#filter-container div {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    width: calc(50% - 10px); /* Adjust width to fit two items per row with gap */\\r\\n}\\r\\n\\r\\n#filter-container label {\\r\\n    width: 200px; /* Adjust the width as needed */\\r\\n    text-align: right;\\r\\n    margin-right: 10px; /* Spacing between label and select */\\r\\n}\\r\\n\\r\\n/* Ensure all select boxes are wide enough to show text */\\r\\n.filter-dropdown {\\r\\n    flex: 1;\\r\\n    min-width: 200px; /* Adjust the min-width as needed */\\r\\n}\\r\\n\\r\\n/* Optional styling to make the select dropdown look better */\\r\\n.filter-dropdown {\\r\\n    padding: 5px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n/* Responsive adjustment: On smaller screens, stack elements vertically */\\r\\n@media (max-width: 800px) {\\r\\n    #filter-container div {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    #filter-container label {\\r\\n        text-align: left;\\r\\n        width: auto;\\r\\n        margin-right: 0;\\r\\n        margin-bottom: 5px;\\r\\n    }\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///279\n')},843:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `#tooltip {\r\n    position: absolute;\r\n    background-color: black;\r\n    color: white;\r\n    padding: 5px;\r\n    border-radius: 3px;\r\n    visibility: hidden;\r\n    white-space: nowrap;\r\n    font-size: 14px;\r\n    z-index: 1000;\r\n    max-width: 300px;\r\n    word-wrap: break-word;\r\n    white-space: normal;\r\n}\r\n\r\n.tooltip-cell {\r\n    /* color: blue; */\r\n    /* text-decoration: underline; */\r\n    cursor: pointer;\r\n}\r\n\r\n.tooltip-cell .info-icon {\r\n    margin-left: 5px;\r\n    color: var(--spiritgreen);\r\n    font-size: 15px;\r\n}\r\n\r\n.tooltip-cell:hover {\r\n    background-color: #f0f0f0; /* Change background on hover */\r\n}\r\n\r\n.detail {\r\n    color: blue;\r\n    color: var(--spiritgreen);\r\n    text-decoration: underline;\r\n    margin-left: 5px;\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/tooltip/tooltip.css"],"names":[],"mappings":"AAAA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,gBAAgB;IAChB,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,yBAAyB,EAAE,+BAA+B;AAC9D;;AAEA;IACI,WAAW;IACX,yBAAyB;IACzB,0BAA0B;IAC1B,gBAAgB;AACpB","sourcesContent":["#tooltip {\\r\\n    position: absolute;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n    padding: 5px;\\r\\n    border-radius: 3px;\\r\\n    visibility: hidden;\\r\\n    white-space: nowrap;\\r\\n    font-size: 14px;\\r\\n    z-index: 1000;\\r\\n    max-width: 300px;\\r\\n    word-wrap: break-word;\\r\\n    white-space: normal;\\r\\n}\\r\\n\\r\\n.tooltip-cell {\\r\\n    /* color: blue; */\\r\\n    /* text-decoration: underline; */\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.tooltip-cell .info-icon {\\r\\n    margin-left: 5px;\\r\\n    color: var(--spiritgreen);\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.tooltip-cell:hover {\\r\\n    background-color: #f0f0f0; /* Change background on hover */\\r\\n}\\r\\n\\r\\n.detail {\\r\\n    color: blue;\\r\\n    color: var(--spiritgreen);\\r\\n    text-decoration: underline;\\r\\n    margin-left: 5px;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL3NyYy9qcy9jb21wb25lbnRzL3Rvb2x0aXAvdG9vbHRpcC5jc3M/N2ZkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgI3Rvb2x0aXAge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIG1heC13aWR0aDogMzAwcHg7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG59XHJcblxyXG4udG9vbHRpcC1jZWxsIHtcclxuICAgIC8qIGNvbG9yOiBibHVlOyAqL1xyXG4gICAgLyogdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7ICovXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi50b29sdGlwLWNlbGwgLmluZm8taWNvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG5cclxuLnRvb2x0aXAtY2VsbDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwOyAvKiBDaGFuZ2UgYmFja2dyb3VuZCBvbiBob3ZlciAqL1xyXG59XHJcblxyXG4uZGV0YWlsIHtcclxuICAgIGNvbG9yOiBibHVlO1xyXG4gICAgY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2pzL2NvbXBvbmVudHMvdG9vbHRpcC90b29sdGlwLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdDQUFnQztJQUNoQyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixlQUFlO0FBQ25COztBQUVBO0lBQ0kseUJBQXlCLEVBQUUsK0JBQStCO0FBQzlEOztBQUVBO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtJQUN6QiwwQkFBMEI7SUFDMUIsZ0JBQWdCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiN0b29sdGlwIHtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbiAgICBwYWRkaW5nOiA1cHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXHJcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcclxcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcbiAgICBmb250LXNpemU6IDE0cHg7XFxyXFxuICAgIHotaW5kZXg6IDEwMDA7XFxyXFxuICAgIG1heC13aWR0aDogMzAwcHg7XFxyXFxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcXHJcXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcXHJcXG59XFxyXFxuXFxyXFxuLnRvb2x0aXAtY2VsbCB7XFxyXFxuICAgIC8qIGNvbG9yOiBibHVlOyAqL1xcclxcbiAgICAvKiB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgKi9cXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4udG9vbHRpcC1jZWxsIC5pbmZvLWljb24ge1xcclxcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xcclxcbiAgICBjb2xvcjogdmFyKC0tc3Bpcml0Z3JlZW4pO1xcclxcbiAgICBmb250LXNpemU6IDE1cHg7XFxyXFxufVxcclxcblxcclxcbi50b29sdGlwLWNlbGw6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwOyAvKiBDaGFuZ2UgYmFja2dyb3VuZCBvbiBob3ZlciAqL1xcclxcbn1cXHJcXG5cXHJcXG4uZGV0YWlsIHtcXHJcXG4gICAgY29sb3I6IGJsdWU7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1zcGlyaXRncmVlbik7XFxyXFxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcclxcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///843\n')},235:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Welcome page (index.html) */\r\n\r\n.step {\r\n    width: 60%;\r\n    height: 80px;\r\n    font-size: 1.75em;\r\n    margin-bottom: 0px; /* Adds spacing between buttons */\r\n    margin-left: 20%;\r\n    border-color: var(--citygreen);\r\n    border-width: 2;\r\n    color: var(--citygreen);\r\n    background-color: white;\r\n}\r\n\r\n.step:hover {\r\n    color: white;\r\n    background-color: var(--spiritgreen);\r\n}\r\n\r\n#welcome-page {\r\n    justify-content: center; \r\n    align-items: center; \r\n    padding-top: 20px;\r\n}\r\n.step.disabled {\r\n    opacity: 50%;\r\n}`, "",{"version":3,"sources":["webpack://./src/js/components/welcome/welcome.css"],"names":[],"mappings":"AAAA,8BAA8B;;AAE9B;IACI,UAAU;IACV,YAAY;IACZ,iBAAiB;IACjB,kBAAkB,EAAE,iCAAiC;IACrD,gBAAgB;IAChB,8BAA8B;IAC9B,eAAe;IACf,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,oCAAoC;AACxC;;AAEA;IACI,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,YAAY;AAChB","sourcesContent":["/* Welcome page (index.html) */\\r\\n\\r\\n.step {\\r\\n    width: 60%;\\r\\n    height: 80px;\\r\\n    font-size: 1.75em;\\r\\n    margin-bottom: 0px; /* Adds spacing between buttons */\\r\\n    margin-left: 20%;\\r\\n    border-color: var(--citygreen);\\r\\n    border-width: 2;\\r\\n    color: var(--citygreen);\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n.step:hover {\\r\\n    color: white;\\r\\n    background-color: var(--spiritgreen);\\r\\n}\\r\\n\\r\\n#welcome-page {\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    padding-top: 20px;\\r\\n}\\r\\n.step.disabled {\\r\\n    opacity: 50%;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2J1ZGdldC1yZXF1ZXN0LWZvcm0vLi9zcmMvanMvY29tcG9uZW50cy93ZWxjb21lL3dlbGNvbWUuY3NzP2IzNDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC8qIFdlbGNvbWUgcGFnZSAoaW5kZXguaHRtbCkgKi9cclxuXHJcbi5zdGVwIHtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICBmb250LXNpemU6IDEuNzVlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDBweDsgLyogQWRkcyBzcGFjaW5nIGJldHdlZW4gYnV0dG9ucyAqL1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwJTtcclxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2l0eWdyZWVuKTtcclxuICAgIGJvcmRlci13aWR0aDogMjtcclxuICAgIGNvbG9yOiB2YXIoLS1jaXR5Z3JlZW4pO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5zdGVwOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNwaXJpdGdyZWVuKTtcclxufVxyXG5cclxuI3dlbGNvbWUtcGFnZSB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyBcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG59XHJcbi5zdGVwLmRpc2FibGVkIHtcclxuICAgIG9wYWNpdHk6IDUwJTtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2pzL2NvbXBvbmVudHMvd2VsY29tZS93ZWxjb21lLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSw4QkFBOEI7O0FBRTlCO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCLEVBQUUsaUNBQWlDO0lBQ3JELGdCQUFnQjtJQUNoQiw4QkFBOEI7SUFDOUIsZUFBZTtJQUNmLHVCQUF1QjtJQUN2Qix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFlBQVk7QUFDaEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogV2VsY29tZSBwYWdlIChpbmRleC5odG1sKSAqL1xcclxcblxcclxcbi5zdGVwIHtcXHJcXG4gICAgd2lkdGg6IDYwJTtcXHJcXG4gICAgaGVpZ2h0OiA4MHB4O1xcclxcbiAgICBmb250LXNpemU6IDEuNzVlbTtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMHB4OyAvKiBBZGRzIHNwYWNpbmcgYmV0d2VlbiBidXR0b25zICovXFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAyMCU7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2l0eWdyZWVuKTtcXHJcXG4gICAgYm9yZGVyLXdpZHRoOiAyO1xcclxcbiAgICBjb2xvcjogdmFyKC0tY2l0eWdyZWVuKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbi5zdGVwOmhvdmVyIHtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zcGlyaXRncmVlbik7XFxyXFxufVxcclxcblxcclxcbiN3ZWxjb21lLXBhZ2Uge1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxcclxcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcXHJcXG59XFxyXFxuLnN0ZXAuZGlzYWJsZWQge1xcclxcbiAgICBvcGFjaXR5OiA1MCU7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///235\n')},314:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},354:module=>{eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///354\n')},72:module=>{eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n')},659:module=>{eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///659\n')},540:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n')},56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWRnZXQtcmVxdWVzdC1mb3JtLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n')},825:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVkZ2V0LXJlcXVlc3QtZm9ybS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///825\n')},113:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWRnZXQtcmVxdWVzdC1mb3JtLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///113\n")}},__webpack_module_cache__={};function __webpack_require__(n){var c=__webpack_module_cache__[n];if(void 0!==c)return c.exports;var t=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=n=>{var c=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(c,{a:c}),c},__webpack_require__.d=(n,c)=>{for(var t in c)__webpack_require__.o(c,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:c[t]})},__webpack_require__.o=(n,c)=>Object.prototype.hasOwnProperty.call(n,c),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(863)})();